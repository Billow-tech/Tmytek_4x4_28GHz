  FTD2XX_NET.Properties.Resources.resources - Embedded, ContainedInManifestFile, 
  NLog.Resources.NLog.ico - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly BBoxAPI, Version=3.3.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Transactions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.IO.Compression, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class <>f__AnonymousType0`83[<ScanningDevice>j__TPar,<Init>j__TPar,<setStaticIP>j__TPar,<Reboot>j__TPar,<SwitchTxRxMode>j__TPar,<getTxRxMode>j__TPar,<selectAntenna>j__TPar,<selectAAKit>j__TPar,<getFrequencyList>j__TPar,<getDR>j__TPar,<getCOMDR>j__TPar,<getELEDR>j__TPar,<getAAKitList>j__TPar,<getAAKitInfo>j__TPar,<setAAKitInfo>j__TPar,<deleteAAKitInfo>j__TPar,<saveAAkitFile>j__TPar,<checkCaliTableLocation>j__TPar,<setOperatingFreq>j__TPar,<getOperatingFreq>j__TPar,<setChannelGainPhase>j__TPar,<setAllChannelGain>j__TPar,<switchChannelPower>j__TPar,<readBeamGainValues>j__TPar,<readBeamPhaseValues>j__TPar,<setAllGain>j__TPar,<setGainPhaseStep>j__TPar,<readSetting>j__TPar,<readSettingValues>j__TPar,<writeSetting>j__TPar,<setBeamXY>j__TPar,<QuerySN>j__TPar,<QueryMAC>j__TPar,<QueryFWV>j__TPar,<QueryHWV>j__TPar,<SetUDFreq>j__TPar,<SetUDFreqForce>j__TPar,<GetState>j__TPar,<SetState>j__TPar,<GetUDDeltaFreq>j__TPar,<GetRecommendLo>j__TPar,<GetLoWithRecommend>j__TPar,<GetUDCurrentFreq>j__TPar,<GetHarmonic>j__TPar,<ReadChannelSwitchValues>j__TPar,<setBeamAngle>j__TPar,<setChannelGainStep>j__TPar,<setCommonGainStep>j__TPar,<setChannelPhaseStep>j__TPar,<getTemperatureADC>j__TPar,<get_TC_Status>j__TPar,<set_TC_Params>j__TPar,<getTemperatureParams>j__TPar,<Set_Fast_Beam_Steering>j__TPar,<Set_BeamPattern_Config>j__TPar,<Get_BeamPattern_Config_by_ID>j__TPar,<Set_Fast_Parallel_Mode>j__TPar,<Get_Fast_Parallel_Mode_Status>j__TPar,<Query_Static_IP>j__TPar,<Query_API_Version>j__TPar,<Query_Calibration_Version>j__TPar,<QueryLoaderVER>j__TPar,<firmware_upgrade>j__TPar,<ScanningVirtualDevice>j__TPar,<Virtual_checkCaliTableLocation>j__TPar,<Virtual_getFrequencyList>j__TPar,<Virtual_setOperatingFreq>j__TPar,<Virtual_getFrequencyInfo>j__TPar,<Virtual_getAAKitList>j__TPar,<Virtual_selectAAKit>j__TPar,<Virtual_getAAKitInfo>j__TPar,<Virtual_setAAKitInfo>j__TPar,<Virtual_deleteAAKitInfo>j__TPar,<Virtual_saveAAkitFile>j__TPar,<Virtual_SwitchTxRxMode>j__TPar,<Virtual_getTxRxMode>j__TPar,<Virtual_setChannelGainPhase>j__TPar,<Virtual_setDeviceGain>j__TPar,<Virtual_switchDevicePower>j__TPar,<Virtual_setDevicePhase>j__TPar,<Virtual_switchChannelPower>j__TPar,<Virtual_setBeamAngle>j__TPar,<Virtual_ReadChannelSettings>j__TPar]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: <ScanningDevice>j__TPar
  Type parameter: <Init>j__TPar
  Type parameter: <setStaticIP>j__TPar
  Type parameter: <Reboot>j__TPar
  Type parameter: <SwitchTxRxMode>j__TPar
  Type parameter: <getTxRxMode>j__TPar
  Type parameter: <selectAntenna>j__TPar
  Type parameter: <selectAAKit>j__TPar
  Type parameter: <getFrequencyList>j__TPar
  Type parameter: <getDR>j__TPar
  Type parameter: <getCOMDR>j__TPar
  Type parameter: <getELEDR>j__TPar
  Type parameter: <getAAKitList>j__TPar
  Type parameter: <getAAKitInfo>j__TPar
  Type parameter: <setAAKitInfo>j__TPar
  Type parameter: <deleteAAKitInfo>j__TPar
  Type parameter: <saveAAkitFile>j__TPar
  Type parameter: <checkCaliTableLocation>j__TPar
  Type parameter: <setOperatingFreq>j__TPar
  Type parameter: <getOperatingFreq>j__TPar
  Type parameter: <setChannelGainPhase>j__TPar
  Type parameter: <setAllChannelGain>j__TPar
  Type parameter: <switchChannelPower>j__TPar
  Type parameter: <readBeamGainValues>j__TPar
  Type parameter: <readBeamPhaseValues>j__TPar
  Type parameter: <setAllGain>j__TPar
  Type parameter: <setGainPhaseStep>j__TPar
  Type parameter: <readSetting>j__TPar
  Type parameter: <readSettingValues>j__TPar
  Type parameter: <writeSetting>j__TPar
  Type parameter: <setBeamXY>j__TPar
  Type parameter: <QuerySN>j__TPar
  Type parameter: <QueryMAC>j__TPar
  Type parameter: <QueryFWV>j__TPar
  Type parameter: <QueryHWV>j__TPar
  Type parameter: <SetUDFreq>j__TPar
  Type parameter: <SetUDFreqForce>j__TPar
  Type parameter: <GetState>j__TPar
  Type parameter: <SetState>j__TPar
  Type parameter: <GetUDDeltaFreq>j__TPar
  Type parameter: <GetRecommendLo>j__TPar
  Type parameter: <GetLoWithRecommend>j__TPar
  Type parameter: <GetUDCurrentFreq>j__TPar
  Type parameter: <GetHarmonic>j__TPar
  Type parameter: <ReadChannelSwitchValues>j__TPar
  Type parameter: <setBeamAngle>j__TPar
  Type parameter: <setChannelGainStep>j__TPar
  Type parameter: <setCommonGainStep>j__TPar
  Type parameter: <setChannelPhaseStep>j__TPar
  Type parameter: <getTemperatureADC>j__TPar
  Type parameter: <get_TC_Status>j__TPar
  Type parameter: <set_TC_Params>j__TPar
  Type parameter: <getTemperatureParams>j__TPar
  Type parameter: <Set_Fast_Beam_Steering>j__TPar
  Type parameter: <Set_BeamPattern_Config>j__TPar
  Type parameter: <Get_BeamPattern_Config_by_ID>j__TPar
  Type parameter: <Set_Fast_Parallel_Mode>j__TPar
  Type parameter: <Get_Fast_Parallel_Mode_Status>j__TPar
  Type parameter: <Query_Static_IP>j__TPar
  Type parameter: <Query_API_Version>j__TPar
  Type parameter: <Query_Calibration_Version>j__TPar
  Type parameter: <QueryLoaderVER>j__TPar
  Type parameter: <firmware_upgrade>j__TPar
  Type parameter: <ScanningVirtualDevice>j__TPar
  Type parameter: <Virtual_checkCaliTableLocation>j__TPar
  Type parameter: <Virtual_getFrequencyList>j__TPar
  Type parameter: <Virtual_setOperatingFreq>j__TPar
  Type parameter: <Virtual_getFrequencyInfo>j__TPar
  Type parameter: <Virtual_getAAKitList>j__TPar
  Type parameter: <Virtual_selectAAKit>j__TPar
  Type parameter: <Virtual_getAAKitInfo>j__TPar
  Type parameter: <Virtual_setAAKitInfo>j__TPar
  Type parameter: <Virtual_deleteAAKitInfo>j__TPar
  Type parameter: <Virtual_saveAAkitFile>j__TPar
  Type parameter: <Virtual_SwitchTxRxMode>j__TPar
  Type parameter: <Virtual_getTxRxMode>j__TPar
  Type parameter: <Virtual_setChannelGainPhase>j__TPar
  Type parameter: <Virtual_setDeviceGain>j__TPar
  Type parameter: <Virtual_switchDevicePower>j__TPar
  Type parameter: <Virtual_setDevicePhase>j__TPar
  Type parameter: <Virtual_switchChannelPower>j__TPar
  Type parameter: <Virtual_setBeamAngle>j__TPar
  Type parameter: <Virtual_ReadChannelSettings>j__TPar
    Void .ctor(<ScanningDevice>j__TPar, <Init>j__TPar, <setStaticIP>j__TPar, <Reboot>j__TPar, <SwitchTxRxMode>j__TPar, <getTxRxMode>j__TPar, <selectAntenna>j__TPar, <selectAAKit>j__TPar, <getFrequencyList>j__TPar, <getDR>j__TPar, <getCOMDR>j__TPar, <getELEDR>j__TPar, <getAAKitList>j__TPar, <getAAKitInfo>j__TPar, <setAAKitInfo>j__TPar, <deleteAAKitInfo>j__TPar, <saveAAkitFile>j__TPar, <checkCaliTableLocation>j__TPar, <setOperatingFreq>j__TPar, <getOperatingFreq>j__TPar, <setChannelGainPhase>j__TPar, <setAllChannelGain>j__TPar, <switchChannelPower>j__TPar, <readBeamGainValues>j__TPar, <readBeamPhaseValues>j__TPar, <setAllGain>j__TPar, <setGainPhaseStep>j__TPar, <readSetting>j__TPar, <readSettingValues>j__TPar, <writeSetting>j__TPar, <setBeamXY>j__TPar, <QuerySN>j__TPar, <QueryMAC>j__TPar, <QueryFWV>j__TPar, <QueryHWV>j__TPar, <SetUDFreq>j__TPar, <SetUDFreqForce>j__TPar, <GetState>j__TPar, <SetState>j__TPar, <GetUDDeltaFreq>j__TPar, <GetRecommendLo>j__TPar, <GetLoWithRecommend>j__TPar, <GetUDCurrentFreq>j__TPar, <GetHarmonic>j__TPar, <ReadChannelSwitchValues>j__TPar, <setBeamAngle>j__TPar, <setChannelGainStep>j__TPar, <setCommonGainStep>j__TPar, <setChannelPhaseStep>j__TPar, <getTemperatureADC>j__TPar, <get_TC_Status>j__TPar, <set_TC_Params>j__TPar, <getTemperatureParams>j__TPar, <Set_Fast_Beam_Steering>j__TPar, <Set_BeamPattern_Config>j__TPar, <Get_BeamPattern_Config_by_ID>j__TPar, <Set_Fast_Parallel_Mode>j__TPar, <Get_Fast_Parallel_Mode_Status>j__TPar, <Query_Static_IP>j__TPar, <Query_API_Version>j__TPar, <Query_Calibration_Version>j__TPar, <QueryLoaderVER>j__TPar, <firmware_upgrade>j__TPar, <ScanningVirtualDevice>j__TPar, <Virtual_checkCaliTableLocation>j__TPar, <Virtual_getFrequencyList>j__TPar, <Virtual_setOperatingFreq>j__TPar, <Virtual_getFrequencyInfo>j__TPar, <Virtual_getAAKitList>j__TPar, <Virtual_selectAAKit>j__TPar, <Virtual_getAAKitInfo>j__TPar, <Virtual_setAAKitInfo>j__TPar, <Virtual_deleteAAKitInfo>j__TPar, <Virtual_saveAAkitFile>j__TPar, <Virtual_SwitchTxRxMode>j__TPar, <Virtual_getTxRxMode>j__TPar, <Virtual_setChannelGainPhase>j__TPar, <Virtual_setDeviceGain>j__TPar, <Virtual_switchDevicePower>j__TPar, <Virtual_setDevicePhase>j__TPar, <Virtual_switchChannelPower>j__TPar, <Virtual_setBeamAngle>j__TPar, <Virtual_ReadChannelSettings>j__TPar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    <ScanningDevice>j__TPar ScanningDevice 'get ' : 
    <Init>j__TPar Init 'get ' : 
    <setStaticIP>j__TPar setStaticIP 'get ' : 
    <Reboot>j__TPar Reboot 'get ' : 
    <SwitchTxRxMode>j__TPar SwitchTxRxMode 'get ' : 
    <getTxRxMode>j__TPar getTxRxMode 'get ' : 
    <selectAntenna>j__TPar selectAntenna 'get ' : 
    <selectAAKit>j__TPar selectAAKit 'get ' : 
    <getFrequencyList>j__TPar getFrequencyList 'get ' : 
    <getDR>j__TPar getDR 'get ' : 
    <getCOMDR>j__TPar getCOMDR 'get ' : 
    <getELEDR>j__TPar getELEDR 'get ' : 
    <getAAKitList>j__TPar getAAKitList 'get ' : 
    <getAAKitInfo>j__TPar getAAKitInfo 'get ' : 
    <setAAKitInfo>j__TPar setAAKitInfo 'get ' : 
    <deleteAAKitInfo>j__TPar deleteAAKitInfo 'get ' : 
    <saveAAkitFile>j__TPar saveAAkitFile 'get ' : 
    <checkCaliTableLocation>j__TPar checkCaliTableLocation 'get ' : 
    <setOperatingFreq>j__TPar setOperatingFreq 'get ' : 
    <getOperatingFreq>j__TPar getOperatingFreq 'get ' : 
    <setChannelGainPhase>j__TPar setChannelGainPhase 'get ' : 
    <setAllChannelGain>j__TPar setAllChannelGain 'get ' : 
    <switchChannelPower>j__TPar switchChannelPower 'get ' : 
    <readBeamGainValues>j__TPar readBeamGainValues 'get ' : 
    <readBeamPhaseValues>j__TPar readBeamPhaseValues 'get ' : 
    <setAllGain>j__TPar setAllGain 'get ' : 
    <setGainPhaseStep>j__TPar setGainPhaseStep 'get ' : 
    <readSetting>j__TPar readSetting 'get ' : 
    <readSettingValues>j__TPar readSettingValues 'get ' : 
    <writeSetting>j__TPar writeSetting 'get ' : 
    <setBeamXY>j__TPar setBeamXY 'get ' : 
    <QuerySN>j__TPar QuerySN 'get ' : 
    <QueryMAC>j__TPar QueryMAC 'get ' : 
    <QueryFWV>j__TPar QueryFWV 'get ' : 
    <QueryHWV>j__TPar QueryHWV 'get ' : 
    <SetUDFreq>j__TPar SetUDFreq 'get ' : 
    <SetUDFreqForce>j__TPar SetUDFreqForce 'get ' : 
    <GetState>j__TPar GetState 'get ' : 
    <SetState>j__TPar SetState 'get ' : 
    <GetUDDeltaFreq>j__TPar GetUDDeltaFreq 'get ' : 
    <GetRecommendLo>j__TPar GetRecommendLo 'get ' : 
    <GetLoWithRecommend>j__TPar GetLoWithRecommend 'get ' : 
    <GetUDCurrentFreq>j__TPar GetUDCurrentFreq 'get ' : 
    <GetHarmonic>j__TPar GetHarmonic 'get ' : 
    <ReadChannelSwitchValues>j__TPar ReadChannelSwitchValues 'get ' : 
    <setBeamAngle>j__TPar setBeamAngle 'get ' : 
    <setChannelGainStep>j__TPar setChannelGainStep 'get ' : 
    <setCommonGainStep>j__TPar setCommonGainStep 'get ' : 
    <setChannelPhaseStep>j__TPar setChannelPhaseStep 'get ' : 
    <getTemperatureADC>j__TPar getTemperatureADC 'get ' : 
    <get_TC_Status>j__TPar get_TC_Status 'get ' : 
    <set_TC_Params>j__TPar set_TC_Params 'get ' : 
    <getTemperatureParams>j__TPar getTemperatureParams 'get ' : 
    <Set_Fast_Beam_Steering>j__TPar Set_Fast_Beam_Steering 'get ' : 
    <Set_BeamPattern_Config>j__TPar Set_BeamPattern_Config 'get ' : 
    <Get_BeamPattern_Config_by_ID>j__TPar Get_BeamPattern_Config_by_ID 'get ' : 
    <Set_Fast_Parallel_Mode>j__TPar Set_Fast_Parallel_Mode 'get ' : 
    <Get_Fast_Parallel_Mode_Status>j__TPar Get_Fast_Parallel_Mode_Status 'get ' : 
    <Query_Static_IP>j__TPar Query_Static_IP 'get ' : 
    <Query_API_Version>j__TPar Query_API_Version 'get ' : 
    <Query_Calibration_Version>j__TPar Query_Calibration_Version 'get ' : 
    <QueryLoaderVER>j__TPar QueryLoaderVER 'get ' : 
    <firmware_upgrade>j__TPar firmware_upgrade 'get ' : 
    <ScanningVirtualDevice>j__TPar ScanningVirtualDevice 'get ' : 
    <Virtual_checkCaliTableLocation>j__TPar Virtual_checkCaliTableLocation 'get ' : 
    <Virtual_getFrequencyList>j__TPar Virtual_getFrequencyList 'get ' : 
    <Virtual_setOperatingFreq>j__TPar Virtual_setOperatingFreq 'get ' : 
    <Virtual_getFrequencyInfo>j__TPar Virtual_getFrequencyInfo 'get ' : 
    <Virtual_getAAKitList>j__TPar Virtual_getAAKitList 'get ' : 
    <Virtual_selectAAKit>j__TPar Virtual_selectAAKit 'get ' : 
    <Virtual_getAAKitInfo>j__TPar Virtual_getAAKitInfo 'get ' : 
    <Virtual_setAAKitInfo>j__TPar Virtual_setAAKitInfo 'get ' : 
    <Virtual_deleteAAKitInfo>j__TPar Virtual_deleteAAKitInfo 'get ' : 
    <Virtual_saveAAkitFile>j__TPar Virtual_saveAAkitFile 'get ' : 
    <Virtual_SwitchTxRxMode>j__TPar Virtual_SwitchTxRxMode 'get ' : 
    <Virtual_getTxRxMode>j__TPar Virtual_getTxRxMode 'get ' : 
    <Virtual_setChannelGainPhase>j__TPar Virtual_setChannelGainPhase 'get ' : 
    <Virtual_setDeviceGain>j__TPar Virtual_setDeviceGain 'get ' : 
    <Virtual_switchDevicePower>j__TPar Virtual_switchDevicePower 'get ' : 
    <Virtual_setDevicePhase>j__TPar Virtual_setDevicePhase 'get ' : 
    <Virtual_switchChannelPower>j__TPar Virtual_switchChannelPower 'get ' : 
    <Virtual_setBeamAngle>j__TPar Virtual_setBeamAngle 'get ' : 
    <Virtual_ReadChannelSettings>j__TPar Virtual_ReadChannelSettings 'get ' : 
  Methods:
    get_ScanningDevice(): PrivateScope, Public, HideBySig, SpecialName
    get_Init(): PrivateScope, Public, HideBySig, SpecialName
    get_setStaticIP(): PrivateScope, Public, HideBySig, SpecialName
    get_Reboot(): PrivateScope, Public, HideBySig, SpecialName
    get_SwitchTxRxMode(): PrivateScope, Public, HideBySig, SpecialName
    get_getTxRxMode(): PrivateScope, Public, HideBySig, SpecialName
    get_selectAntenna(): PrivateScope, Public, HideBySig, SpecialName
    get_selectAAKit(): PrivateScope, Public, HideBySig, SpecialName
    get_getFrequencyList(): PrivateScope, Public, HideBySig, SpecialName
    get_getDR(): PrivateScope, Public, HideBySig, SpecialName
    get_getCOMDR(): PrivateScope, Public, HideBySig, SpecialName
    get_getELEDR(): PrivateScope, Public, HideBySig, SpecialName
    get_getAAKitList(): PrivateScope, Public, HideBySig, SpecialName
    get_getAAKitInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_setAAKitInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_deleteAAKitInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_saveAAkitFile(): PrivateScope, Public, HideBySig, SpecialName
    get_checkCaliTableLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_setOperatingFreq(): PrivateScope, Public, HideBySig, SpecialName
    get_getOperatingFreq(): PrivateScope, Public, HideBySig, SpecialName
    get_setChannelGainPhase(): PrivateScope, Public, HideBySig, SpecialName
    get_setAllChannelGain(): PrivateScope, Public, HideBySig, SpecialName
    get_switchChannelPower(): PrivateScope, Public, HideBySig, SpecialName
    get_readBeamGainValues(): PrivateScope, Public, HideBySig, SpecialName
    get_readBeamPhaseValues(): PrivateScope, Public, HideBySig, SpecialName
    get_setAllGain(): PrivateScope, Public, HideBySig, SpecialName
    get_setGainPhaseStep(): PrivateScope, Public, HideBySig, SpecialName
    get_readSetting(): PrivateScope, Public, HideBySig, SpecialName
    get_readSettingValues(): PrivateScope, Public, HideBySig, SpecialName
    get_writeSetting(): PrivateScope, Public, HideBySig, SpecialName
    get_setBeamXY(): PrivateScope, Public, HideBySig, SpecialName
    get_QuerySN(): PrivateScope, Public, HideBySig, SpecialName
    get_QueryMAC(): PrivateScope, Public, HideBySig, SpecialName
    get_QueryFWV(): PrivateScope, Public, HideBySig, SpecialName
    get_QueryHWV(): PrivateScope, Public, HideBySig, SpecialName
    get_SetUDFreq(): PrivateScope, Public, HideBySig, SpecialName
    get_SetUDFreqForce(): PrivateScope, Public, HideBySig, SpecialName
    get_GetState(): PrivateScope, Public, HideBySig, SpecialName
    get_SetState(): PrivateScope, Public, HideBySig, SpecialName
    get_GetUDDeltaFreq(): PrivateScope, Public, HideBySig, SpecialName
    get_GetRecommendLo(): PrivateScope, Public, HideBySig, SpecialName
    get_GetLoWithRecommend(): PrivateScope, Public, HideBySig, SpecialName
    get_GetUDCurrentFreq(): PrivateScope, Public, HideBySig, SpecialName
    get_GetHarmonic(): PrivateScope, Public, HideBySig, SpecialName
    get_ReadChannelSwitchValues(): PrivateScope, Public, HideBySig, SpecialName
    get_setBeamAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_setChannelGainStep(): PrivateScope, Public, HideBySig, SpecialName
    get_setCommonGainStep(): PrivateScope, Public, HideBySig, SpecialName
    get_setChannelPhaseStep(): PrivateScope, Public, HideBySig, SpecialName
    get_getTemperatureADC(): PrivateScope, Public, HideBySig, SpecialName
    get_get_TC_Status(): PrivateScope, Public, HideBySig, SpecialName
    get_set_TC_Params(): PrivateScope, Public, HideBySig, SpecialName
    get_getTemperatureParams(): PrivateScope, Public, HideBySig, SpecialName
    get_Set_Fast_Beam_Steering(): PrivateScope, Public, HideBySig, SpecialName
    get_Set_BeamPattern_Config(): PrivateScope, Public, HideBySig, SpecialName
    get_Get_BeamPattern_Config_by_ID(): PrivateScope, Public, HideBySig, SpecialName
    get_Set_Fast_Parallel_Mode(): PrivateScope, Public, HideBySig, SpecialName
    get_Get_Fast_Parallel_Mode_Status(): PrivateScope, Public, HideBySig, SpecialName
    get_Query_Static_IP(): PrivateScope, Public, HideBySig, SpecialName
    get_Query_API_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Query_Calibration_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_QueryLoaderVER(): PrivateScope, Public, HideBySig, SpecialName
    get_firmware_upgrade(): PrivateScope, Public, HideBySig, SpecialName
    get_ScanningVirtualDevice(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_checkCaliTableLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_getFrequencyList(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_setOperatingFreq(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_getFrequencyInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_getAAKitList(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_selectAAKit(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_getAAKitInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_setAAKitInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_deleteAAKitInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_saveAAkitFile(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_SwitchTxRxMode(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_getTxRxMode(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_setChannelGainPhase(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_setDeviceGain(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_switchDevicePower(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_setDevicePhase(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_switchChannelPower(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_setBeamAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_Virtual_ReadChannelSettings(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class AAKitSupporter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 OFFSET_Field_Length : Public
    Boolean isSelectAAKit : Public
    Int32 AAKIT_NAME_Length = 2 : Public, Static, Literal, HasDefault
    Int32 DEV_TYPE_Length = 2 : Public, Static, Literal, HasDefault
    Int32 TYPE_Length = 2 : Public, Static, Literal, HasDefault
    Int32 SPACING_Length = 3 : Public, Static, Literal, HasDefault
    Int32 STEERING_H_Length = 3 : Public, Static, Literal, HasDefault
    Int32 STEERING_V_Length = 3 : Public, Static, Literal, HasDefault
  Methods:
    getAAKitInfoListNum(): PrivateScope, Public, HideBySig
    getCrrentAAKitInfo(): PrivateScope, Public, HideBySig
    getAAKitNameList(): PrivateScope, Public, HideBySig
    getAAKitInfoIndexFromList(String): PrivateScope, Public, HideBySig
    getAAKitInfoObjectFromList(String): PrivateScope, Public, HideBySig
    getAAKitInfoObjectFromList(Int32): PrivateScope, Public, HideBySig
    setAAKitInfo(String, Int32, Int32, Double[], Double[], Double[], Int32[], Int32[]): PrivateScope, Public, HideBySig
    addAAKitInfo(AAKitInfo): PrivateScope, Public, HideBySig
    deleteAAKitInfo(String): PrivateScope, Public, HideBySig
    emptyAAKitInfoList(): PrivateScope, Public, HideBySig
    selectAntenna(AntennaType): PrivateScope, Public, HideBySig
    selectAAKit(String): PrivateScope, Public, HideBySig
    removeAAKit(): PrivateScope, Public, HideBySig
    get_Offset_Field_Length(): PrivateScope, Public, HideBySig
    generate_DefaultTable(String, String, DEV_TYPE, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
Class Virtual_AAKitSupporter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.String] Virtual_AAkit_Map : Public
    Boolean isSelectAAKit : Public
  Methods:
    Virutal_getAAKitInfoListNum(): PrivateScope, Public, HideBySig
    Virtual_getCrrentAAKitInfo(): PrivateScope, Public, HideBySig
    Virtual_getAAKitNameList(): PrivateScope, Public, HideBySig
    Virtual_getAAKitInfoObjectFromList(String): PrivateScope, Public, HideBySig
    Virtual_setAAKitInfo(VIRTUAL_AAKIT_INFO): PrivateScope, Public, HideBySig
    Virtual_addAAKitInfo(String, VIRTUAL_AAKIT_INFO): PrivateScope, Public, HideBySig
    Virtual_deleteAAKitInfo(String): PrivateScope, Public, HideBySig
    Virtual_emptyAAKitInfoList(): PrivateScope, Public, HideBySig
    Virtual_selectAAKit(String): PrivateScope, Public, HideBySig
    Virtual_unselectAAKit(): PrivateScope, Public, HideBySig
    Virtual_generate_DefaultTable(String, VIRTUAL_AAKIT_INFO): PrivateScope, Public, HideBySig
    Virtual_saveAAkitFile(String, String): PrivateScope, Public, HideBySig
Class AAKitInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean is_AAKIT_NAME_Load : Public
    Boolean is_DEV_TYPE_Load : Public
    Boolean is_TYPE_Load : Public
    Boolean is_SPACING_Load : Public
    Boolean is_STEERING_H_Load : Public
    Boolean is_STEERING_V_Load : Public
    Boolean is_OFFSET_TX_Load : Public
    Boolean is_OFFSET_RX_Load : Public
  Methods:
    check_All_Data_Load(): PrivateScope, Public, HideBySig
    setValue(Object, String): PrivateScope, Public, HideBySig
    getValue(String): PrivateScope, Public, HideBySig
    dumpInfo(): PrivateScope, Public, HideBySig
Class VIRTUAL_AAKIT_OFFSET: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 channel_number : Public
    Int32 OFFSET_TX : Public
    Int32 OFFSET_RX : Public
Class VIRTUAL_AAKIT_INFO: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.String, BBoxAPI.DEV_TYPE, Int32, Double, Double, Double, Double, Double, Double, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String virtual_sn : Public
    System.String AAKIT_NAME : Public
    BBoxAPI.DEV_TYPE DEV_TYPE : Public
    Int32 TYPE : Public
    Double SPACING_X : Public
    Double SPACING_Y : Public
    Double MIN_STEERING_H : Public
    Double MAX_STEERING_H : Public
    Double MIN_STEERING_V : Public
    Double MAX_STEERING_V : Public
    Int32 Channel_Num : Public
    System.Collections.Generic.List`1[VIRTUAL_AAKIT_OFFSET] offset_list : Public
  Methods:
    Virtual_getOffset(OPMODE, Int32): PrivateScope, Public, HideBySig
Class BBoxDevice: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :GeneralDevice
    Void .ctor(System.String, System.String, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[System.String] TABLE_FREQ_LIST : Public
    System.String calibration_method_version : Public
    Int32 calibration_major_version : Public
    Int32 calibration_minor_version : Public
    Int32 calibration_patch_version : Public
    System.String default_calibration_method_version = 2.0.0 : Public, Static, Literal, HasDefault
  Methods:
    InstanceInit(): PrivateScope, Public, Virtual, HideBySig
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    getDataStream(String, String): PrivateScope, Public, HideBySig
    isCaliTableLoaded(): PrivateScope, Public, HideBySig
    getCaliTablePath(String): PrivateScope, Public, HideBySig
    checkCaliTableLocation(String): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    DumpLog(): PrivateScope, Public, Virtual, HideBySig
    getTxRxMode(): PrivateScope, Public, Virtual, HideBySig
    SwitchTxRxMode(Int32): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    regenerateAAKitFile(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    selectAntenna(AntennaType): PrivateScope, Public, Virtual, HideBySig
    selectAAKit(String): PrivateScope, Public, Virtual, HideBySig
    removeAAKit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getAAKitList(): PrivateScope, Public, Virtual, HideBySig
    getAAKitTablePath(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setAAKitInfo(String, Int32, Int32, Double[], Double[], Double[], Int32[], Int32[]): PrivateScope, Public, Virtual, HideBySig
    getAAKitInfo(String): PrivateScope, Public, Virtual, HideBySig
    deleteAAKitInfo(String): PrivateScope, Public, Virtual, HideBySig
    saveAAkitFile(String): PrivateScope, Public, Virtual, HideBySig
    Query_Static_IP(): PrivateScope, Public, Virtual, HideBySig
    Query_Calibration_Version(): PrivateScope, Public, Virtual, HideBySig
    set_firmware_upgrade_mode(Boolean): PrivateScope, Public, Virtual, HideBySig
Class BBoxOneDevice: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    setStaticIP(String): PrivateScope, Public, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    regenerateAAKitFile(String): PrivateScope, Public, Virtual, HideBySig
    updateFreqList(): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    getFrequencyList(): PrivateScope, Public, Virtual, HideBySig
    getAAKitNameList(): PrivateScope, Public, HideBySig
    getDR(): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate(Int32, Int32): PrivateScope, Public, HideBySig
    matrixCalculate2D(Int32, Int32): PrivateScope, Public, HideBySig
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamX(Double, Int32): PrivateScope, Public, HideBySig
    setBeamY(Double, Int32): PrivateScope, Public, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, HideBySig
    switchChannelPower(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    readBeamGainValues(): PrivateScope, Public, Virtual, HideBySig
    readBeamPhaseValues(): PrivateScope, Public, Virtual, HideBySig
    setControlParameters(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    diagnoseProbe(): PrivateScope, Public, Virtual, HideBySig
Class BBOXLITE28A: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CustomA_BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    InitDefaultConfiguration(): PrivateScope, Public, Virtual, HideBySig
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    setAllChannelGain(Int32, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig
    getELEDR(): PrivateScope, Public, Virtual, HideBySig
Class BBOXLITE39A: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CustomA_BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    InitDefaultConfiguration(): PrivateScope, Public, Virtual, HideBySig
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    setAllChannelGain(Int32, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig
    getELEDR(): PrivateScope, Public, Virtual, HideBySig
Class BBOXLITE26A: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CustomA_BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    InitDefaultConfiguration(): PrivateScope, Public, Virtual, HideBySig
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    setAllChannelGain(Int32, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig
    getELEDR(): PrivateScope, Public, Virtual, HideBySig
Class ChipController: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(MPSSELight.MpsseDevice, MPSSELight.SpiDevice, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    BFIC_GEN1_ChipAddrQuery(): PrivateScope, Public, HideBySig
    BFIC_GEN1_Init(): PrivateScope, Public, HideBySig
    BFIC_GEN1_Control(Int32, Int32, Control, Byte): PrivateScope, Public, HideBySig
    BBoxControlStepQuery(Int32, Int32, Control): PrivateScope, Public, HideBySig
    TxStateQuery(): PrivateScope, Public, HideBySig
    RxStateQuery(): PrivateScope, Public, HideBySig
Class Bulbul28A_CalibrationMap: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CalibrationMap
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double[,,] TX_gain_table : Public
    Double[,,] RX_gain_table : Public
    Double[,] TX_phase_table : Public
    Double[,] RX_phase_table : Public
  Methods:
    setPhaseMap(Int32, Int32, Int32, Double): PrivateScope, Public, HideBySig
    setGainMap(Int32, Int32, Int32, Int32, Double): PrivateScope, Public, HideBySig
    GenerateGainMap(): PrivateScope, Public, HideBySig
    Search_CalibrationMap(Int32, Int32, Double[,,], Int32[,,]): PrivateScope, Public, HideBySig
    SearchPhaseMap(Int32, Int32, Int32[,,]): PrivateScope, Public, HideBySig
    SearchGainMap(Int32, Int32, Double[,,]): PrivateScope, Public, HideBySig
Class BFIC_GEN1: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 CHANNELNUM : Public, Static, InitOnly
    Int32 REG_NUM : Public, Static, InitOnly
  Methods:
    getInitStates(): PrivateScope, Public, HideBySig
    getInitCmd(): PrivateScope, Public, HideBySig
    getCtrlCmd(Int32, Int32, Control, Byte): PrivateScope, Public, HideBySig
    dumpCmdTable(): PrivateScope, Public, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, HideBySig
    getOperatingFreq(): PrivateScope, Public, HideBySig
    setTxOffset(Int32[]): PrivateScope, Public, HideBySig
    setRxOffset(Int32[]): PrivateScope, Public, HideBySig
    setTxRxOffset(Int32[,]): PrivateScope, Public, HideBySig
    getTxOffset(): PrivateScope, Public, HideBySig
    getRxOffset(): PrivateScope, Public, HideBySig
    getTxRxOffset(): PrivateScope, Public, HideBySig
    setTxDictionary(String, String): PrivateScope, Public, HideBySig
    setRxDictionary(String, String): PrivateScope, Public, HideBySig
    clearTxDictionary(): PrivateScope, Public, HideBySig
    clearRxDictionary(): PrivateScope, Public, HideBySig
    angleShift(Int32): PrivateScope, Public, Static, HideBySig
    getControlValue(Int32, Int32, Int32, Double, Int32): PrivateScope, Public, HideBySig
Class BFIC_GEN1Parameters: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Byte[] FAST_MEM_STATE_OFFSET : Public, Static
    Byte[][] regInitialTable : Public, Static
    Byte[] regStates : Public, Static
    Byte[][][] RegList : Public, Static
    Byte writeCmd : Public, Static
    Byte readCmd : Public, Static
    Byte txPaBiasMask : Public, Static
    Byte txPaGainMask : Public, Static
    Byte txVgaBiasMask : Public, Static
    Byte txVgaGainMask : Public, Static
    Byte txPsBiasMask : Public, Static
    Byte txPsPhaseMask : Public, Static
    Byte txChPowerMask : Public, Static
    Byte rxLnaBiasMask : Public, Static
    Byte rxLnaGainMask : Public, Static
    Byte rxVgaBiasMask : Public, Static
    Byte rxVgaGainMask : Public, Static
    Byte rxPsBiasMask : Public, Static
    Byte rxPsPhaseMask : Public, Static
    Byte rxChPowerMask : Public, Static
    Byte rxChSwbMask : Public, Static
    Byte rxChSwdMask : Public, Static
    Byte rxChSwsMask : Public, Static
Class Bulbul39A_CalibrationMap: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CalibrationMap
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MeasurmentMap_3D[] TX_calibration_table : Public
    MeasurmentMap_3D[] RX_calibration_table : Public
  Methods:
    SetElementPhaseMap(Int32, Int32, Double[]): PrivateScope, Public, HideBySig
    SetCommonPhaseMap(Int32, Int32, Double[]): PrivateScope, Public, HideBySig
    SetElementGainMap(Int32, Int32, Double[]): PrivateScope, Public, HideBySig
    SetCommonGainMap(Int32, Int32, Double[]): PrivateScope, Public, HideBySig
    SetReferenceGainMap(Int32, Int32, Double[]): PrivateScope, Public, HideBySig
    SetReferencePhaseMap(Int32, Int32, Double[]): PrivateScope, Public, HideBySig
    GenerateAllMap(): PrivateScope, Public, HideBySig
    calculatePhaseErr(Double, Double): PrivateScope, Public, HideBySig
    Search_CalibrationMap(Int32, Int32, Double[,,], Int32[,,]): PrivateScope, Public, HideBySig
Class CalibrationMap: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32[,] TX_Offset : Public
    Int32[,] RX_Offset : Public
    Double TX_ELEMENT_DYNAMIC_RANGE : Public
    Double RX_ELEMENT_DYNAMIC_RANGE : Public
    Double[] TX_COMMON_DYNAMIC_RANGE : Public
    Double[] RX_COMMON_DYNAMIC_RANGE : Public
    Int32 GainTotalStep = 16 : Public, Static, Literal, HasDefault
    Int32 PhaseTotalStep = 64 : Public, Static, Literal, HasDefault
    Int32 CHANNELNUM = 4 : Public, Static, Literal, HasDefault
  Properties:
    Int32 IC_number 'get set' : 
    Int32 module_number 'get set' : 
    Double TX_COM_MIN_GAIN 'get set' : 
    Double TX_COM_MAX_GAIN 'get set' : 
    Double RX_COM_MIN_GAIN 'get set' : 
    Double RX_COM_MAX_GAIN 'get set' : 
    Int32 Default_TXC 'get set' : 
    Int32 Default_TXQ 'get set' : 
    Int32 Default_RXC 'get set' : 
    Int32 Default_RXQ 'get set' : 
  Methods:
    get_IC_number(): PrivateScope, Public, HideBySig, SpecialName
    set_IC_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_module_number(): PrivateScope, Public, HideBySig, SpecialName
    set_module_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TX_COM_MIN_GAIN(): PrivateScope, Public, HideBySig, SpecialName
    set_TX_COM_MIN_GAIN(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TX_COM_MAX_GAIN(): PrivateScope, Public, HideBySig, SpecialName
    set_TX_COM_MAX_GAIN(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RX_COM_MIN_GAIN(): PrivateScope, Public, HideBySig, SpecialName
    set_RX_COM_MIN_GAIN(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RX_COM_MAX_GAIN(): PrivateScope, Public, HideBySig, SpecialName
    set_RX_COM_MAX_GAIN(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Default_TXC(): PrivateScope, Public, HideBySig, SpecialName
    set_Default_TXC(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Default_TXQ(): PrivateScope, Public, HideBySig, SpecialName
    set_Default_TXQ(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Default_RXC(): PrivateScope, Public, HideBySig, SpecialName
    set_Default_RXC(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Default_RXQ(): PrivateScope, Public, HideBySig, SpecialName
    set_Default_RXQ(Int32): PrivateScope, Public, HideBySig, SpecialName
    setTxOffset(Int32[,]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setRxOffset(Int32[,]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setTxElementDR(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setRxElementDR(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTxElementDR(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRxElementDR(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setTxCommonDR(Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setRxCommonDR(Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTxCommonDR(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRxCommonDR(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getTxOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getRxOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    roundUpBy5(Int32): PrivateScope, Public, Static, HideBySig
    normalizeAng(Int32): PrivateScope, Public, Static, HideBySig
    angleShift(Int32): PrivateScope, Public, Static, HideBySig
    NormalizePhase(Double): PrivateScope, Public, Static, HideBySig
Class Brute_CalibrationMap: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CalibrationMap
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double DEV_OPERATING_FREQ : Public
    Double[,] GAIN_DYNAMIC_RANGE : Public
    System.Collections.Generic.List`1[Brute_CalibrationMap+Common_DR] TX_COM_DR : Public
    System.Collections.Generic.List`1[Brute_CalibrationMap+Common_DR] RX_COM_DR : Public
    System.Collections.Generic.List`1[Brute_CalibrationMap+Element_DR] TX_ELE_DR : Public
    System.Collections.Generic.List`1[Brute_CalibrationMap+Element_DR] RX_ELE_DR : Public
    System.Collections.Generic.List`1[Brute_CalibrationMap+TEMP_ADC] ADC : Public
    System.Collections.Generic.List`1[Brute_CalibrationMap+TC_Param] TC : Public
    System.Collections.Generic.List`1[Brute_CalibrationMap+Common_Step_DR] TX_COMSTEP_DR : Public
    System.Collections.Generic.List`1[Brute_CalibrationMap+Common_Step_DR] RX_COMSTEP_DR : Public
  Methods:
    captureInfoFromTable(StreamReader, String): PrivateScope, Public, HideBySig
    setDataDictionary(OPMODE, String, String): PrivateScope, Public, HideBySig
    generate_search_key(String, String, String, String, String, String): PrivateScope, Public, HideBySig
    generate_target_value(String, String, String, String): PrivateScope, Public, HideBySig
    separate_target_value(Int32, Int32, String): PrivateScope, Public, HideBySig
    Search_CalibrationMap(OPMODE, Int32, Int32, Double[,,], Int32[,,]): PrivateScope, Public, HideBySig
    getDataDictionary(OPMODE, Int32, Int32, String): PrivateScope, Public, HideBySig
    GetModuleNumber(Int32): PrivateScope, Public, HideBySig
    GetICNumber(Int32): PrivateScope, Public, HideBySig
    GetChannelNumber(Int32): PrivateScope, Public, HideBySig
Class Kirin40_BFIC_GEN: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 module_number : Public
    Int32 IC_number : Public
    Int32 CHANNELNUM = 1 : Public, Static, Literal, HasDefault
  Methods:
    getTxOffset(): PrivateScope, Public, HideBySig
    setTxOffset(Int32[,]): PrivateScope, Public, HideBySig
    setTxDictionary(String, String): PrivateScope, Public, HideBySig
    getTxDictionary(Double, Int32): PrivateScope, Public, HideBySig
    clearTxDictionary(): PrivateScope, Public, HideBySig
    angleShift(Int32): PrivateScope, Public, Static, HideBySig
    NormalizePhase(Double): PrivateScope, Public, HideBySig
Class BBOARD26A: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CustomA_BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    InitDefaultConfiguration(): PrivateScope, Public, Virtual, HideBySig
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    checkElementDR(Int32, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    setAllChannelGain(Int32, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig
    getELEDR(): PrivateScope, Public, Virtual, HideBySig
    set_TC_Params(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    setChannelGainStep(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    setCommonGainStep(Int32, Int32): PrivateScope, Public, HideBySig
    setChannelPhaseStep(Int32, Int32, Int32): PrivateScope, Public, HideBySig
Class BBOXONE26A: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CustomA_BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AAKIT_SPECIFIC_SN 'get set' : 
  Methods:
    set_AAKIT_SPECIFIC_SN(String): PrivateScope, Public, HideBySig, SpecialName
    get_AAKIT_SPECIFIC_SN(): PrivateScope, Public, HideBySig, SpecialName
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    InitDefaultConfiguration(): PrivateScope, Public, Virtual, HideBySig
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    setAllChannelGain(Int32, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    MODULE_TC_Control(Int32): PrivateScope, Public, Virtual, HideBySig
    Module_Channel_Control(OPMODE, Int32): PrivateScope, Public, Virtual, HideBySig
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig
    getELEDR(): PrivateScope, Public, Virtual, HideBySig
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate2D(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    checkBoardGainRange(Int32, Double&): PrivateScope, Public, Virtual, HideBySig
    SCPI_Store_Gain_BeamPattern(OPMODE, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    SCPI_Store_Phase_BeamPattern(OPMODE, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class Beam_Pattern_Configuration: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, BBoxAPI.DEV_TYPE, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean isBeamTableLoad : Public
    Boolean isUserBeamTableLoad : Public
    Double[,,] pattern1_gain_settings : Public
    Double[,,] pattern2_gain_settings : Public
    Int32[,,] pattern1_phase_settings : Public
    Int32[,,] pattern2_phase_settings : Public
    System.Collections.Generic.List`1[Beam_Pattern_Configuration+IC_Step_Configuration] pattern1_config_list : Public
    System.Collections.Generic.List`1[Beam_Pattern_Configuration+IC_Step_Configuration] pattern2_config_list : Public
    Beam_Configuration beam_tbl : Public
    User_Beam_Configuration user_beam_tbl : Public
    Int32 minimum_beamId = 1 : Public, Static, Literal, HasDefault
    Int32 maximum_beamId = 64 : Public, Static, Literal, HasDefault
    Int32 minimum_SCPI_beamId = 0 : Public, Static, Literal, HasDefault
    Int32 maximum_SCPI_beamId = 63 : Public, Static, Literal, HasDefault
    Int32 maximum_beam_num = 64 : Public, Static, Literal, HasDefault
  Methods:
    check_beamId_InRange(Int32): PrivateScope, Public, HideBySig
    check_beam_table(): PrivateScope, Public, HideBySig
    check_user_defined_beam_table(): PrivateScope, Public, HideBySig
    store_beam_pattern(Beam_Pattern): PrivateScope, Public, HideBySig
    store_user_beam_pattern(User_Defined_BeamPattern): PrivateScope, Public, HideBySig
    load_beam_pattern(Int32, OPMODE): PrivateScope, Public, HideBySig
    load_beam_pattern_json_string(Int32, OPMODE): PrivateScope, Public, HideBySig
    save_beam_table(): PrivateScope, Public, HideBySig
    load_user_beam_pattern(Int32, OPMODE): PrivateScope, Public, HideBySig
    test_command(): PrivateScope, Public, HideBySig
Class DeviceConfiguration: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CustomA_BBoxDevice: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :BBoxDevice
    Void .ctor(System.String, System.String, Double, Int32, Int32, Int32, BBoxAPI.DEV_TYPE, System.String, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 COM_CH_IDX : Public
    Int32 TEMP_ADC : Public
    Int32 PATTERN_PER_ROW : Public
    Int32 TC_PER_PATTERN : Public
    Int32 CHANNEL_GAIN_CTRL_PER_PATTERN : Public
    Int32 CHANNEL_PHASE_CTRL_PER_PATTERN : Public
    Boolean is_preload_beam_table : Public
    Int32 MINIMUM_THETA = 0 : Public, Static, Literal, HasDefault
    Int32 MAXIMUM_THETA = 60 : Public, Static, Literal, HasDefault
    Int32 MINIMUM_PHI = 0 : Public, Static, Literal, HasDefault
    Int32 MAXIMUM_PHI = 359 : Public, Static, Literal, HasDefault
  Properties:
    System.String AAKIT_SPECIFIC_SN 'get set' : 
  Methods:
    set_AAKIT_SPECIFIC_SN(String): PrivateScope, Public, HideBySig, SpecialName
    get_AAKIT_SPECIFIC_SN(): PrivateScope, Public, HideBySig, SpecialName
    InitDefaultConfiguration(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_preload_beam_table(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    getTxRxMode(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    checkGainRange(Double&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    apply_Gain_Boundary(OPMODE, Double&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    checkBoardGainRange(Int32, Double&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SwitchTxRxMode(Int32): PrivateScope, Public, Virtual, HideBySig
    SCPI_store_UserConfig_BeamPattern(OPMODE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_apply_UserConfig_BeamPattern(OPMODE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Module_Channel_Control(OPMODE, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MODULE_TC_Control(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Load_BeamPattern_Table(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Set_BeamPattern_Config(Int32, Int32, Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get_BeamPattern_Config_by_ID(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Store_BeamPattern(Int32, Int32, Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Set_Fast_Parallel_Mode(Boolean): PrivateScope, Public, Virtual, HideBySig
    Get_Fast_Parallel_Mode_Status(): PrivateScope, Public, Virtual, HideBySig
    Set_Fast_Beam_Steering(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    SCPI_Store_BeamPattern(Int32, Int32, OPMODE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_Store_Gain_BeamPattern(OPMODE, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_Store_Phase_BeamPattern(OPMODE, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_BeamSteering(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_TDBS_BeamSteering(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_FBS_BeamSteering(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_Continuous_BeamSteering(Int32, Int32, Int32, Int32, Int32[], Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_get_FBS_Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_get_TDBS_Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_get_TEMP_Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_get_TC_Offset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_get_ExternalSPI_Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TC_Status(): PrivateScope, Public, Virtual, HideBySig
    SCPI_set_ExternalSPI_Mode(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SCPI_set_FastBeamMode(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getTemperatureADC(): PrivateScope, Public, Virtual, HideBySig
    getTemperatureParams(): PrivateScope, Public, Virtual, HideBySig
    switchChannelPower(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    getFrequencyList(): PrivateScope, Public, Virtual, HideBySig
    updateFreqList(): PrivateScope, Public, Virtual, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamX(Double, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamY(Double, Int32): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    matrixCalculate2D(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PhaseMatrix_to_PhaseSettings(Int32[,]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeamAngle_to_PhaseMatrix(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetModuleNumber(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetICNumber(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetChannelNumber(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getDR(): PrivateScope, Public, Virtual, HideBySig
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig
    getELEDR(): PrivateScope, Public, Virtual, HideBySig
    readBeamPhaseValues(): PrivateScope, Public, Virtual, HideBySig
    ReadChannelSwitchValues(Int32): PrivateScope, Public, Virtual, HideBySig
    ReadBeamPhaseValues(Int32): PrivateScope, Public, Virtual, HideBySig
    Get_Gain_Control_Step(Int32): PrivateScope, Public, Virtual, HideBySig
    Get_Phase_Control_Step(Int32): PrivateScope, Public, Virtual, HideBySig
    readBeamGainValues(): PrivateScope, Public, Virtual, HideBySig
    ReadBeamGainValues(Int32): PrivateScope, Public, Virtual, HideBySig
    SCPI_Send_Socket_Handler(String): PrivateScope, Public, HideBySig
    validate_beam_settings(OPMODE, Double&, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    QueryMAC(): PrivateScope, Public, Virtual, HideBySig
    switchDevicePower(OPMODE, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setDeviceGain(OPMODE, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setDevicePhase(OPMODE, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setChannelGainSettings(OPMODE, Int32, Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setChannelPhaseSettings(OPMODE, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setDeviceControl(OPMODE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    QueryHWV(): PrivateScope, Public, Virtual, HideBySig
    QueryLoaderVER(): PrivateScope, Public, Virtual, HideBySig
    setLoaderVER(String): PrivateScope, Public, Virtual, HideBySig
    print_DeviceGainPhase_Settings(OPMODE): PrivateScope, Public, HideBySig
Class KIRIN40OE: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CustomA_BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AAKIT_SPECIFIC_SN 'get set' : 
  Methods:
    set_AAKIT_SPECIFIC_SN(String): PrivateScope, Public, HideBySig, SpecialName
    get_AAKIT_SPECIFIC_SN(): PrivateScope, Public, HideBySig, SpecialName
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig
    SwitchTxRxMode(Int32): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    GetAAKitTablePath(String): PrivateScope, Public, HideBySig
    checkGainRange(Double&): PrivateScope, Public, Virtual, HideBySig
    getFrequencyList(): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    switchChannelPower(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate2D(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    readBeamPhaseValues(): PrivateScope, Public, Virtual, HideBySig
    readBeamGainValues(): PrivateScope, Public, Virtual, HideBySig
    ReadChannelSwitchValues(Int32): PrivateScope, Public, Virtual, HideBySig
    Dimension_convert_3Dto2D_int(Int32[,,], Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Dimension_convert_3Dto2D_double(Double[,,], Int32, Int32, Int32): PrivateScope, Public, HideBySig
Class BBOARD39A: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CustomA_BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    InitDefaultConfiguration(): PrivateScope, Public, Virtual, HideBySig
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    setAllChannelGain(Int32, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig
    getELEDR(): PrivateScope, Public, Virtual, HideBySig
    set_TC_Params(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    setChannelGainStep(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    setCommonGainStep(Int32, Int32): PrivateScope, Public, HideBySig
    setChannelPhaseStep(Int32, Int32, Int32): PrivateScope, Public, HideBySig
Class BBOARD28A: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CustomA_BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    InitDefaultConfiguration(): PrivateScope, Public, Virtual, HideBySig
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    setAllChannelGain(Int32, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig
    getELEDR(): PrivateScope, Public, Virtual, HideBySig
    Search_CalibrationMap(OPMODE, Int32, Int32, Double[,,], Int32[,,]): PrivateScope, Public, HideBySig
    set_TC_Params(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    setChannelGainStep(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    setCommonGainStep(Int32, Int32): PrivateScope, Public, HideBySig
    setChannelPhaseStep(Int32, Int32, Int32): PrivateScope, Public, HideBySig
Class BBOXONE39A: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CustomA_BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AAKIT_SPECIFIC_SN 'get set' : 
  Methods:
    set_AAKIT_SPECIFIC_SN(String): PrivateScope, Public, HideBySig, SpecialName
    get_AAKIT_SPECIFIC_SN(): PrivateScope, Public, HideBySig, SpecialName
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    InitDefaultConfiguration(): PrivateScope, Public, Virtual, HideBySig
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    setAllChannelGain(Int32, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    MODULE_TC_Control(Int32): PrivateScope, Public, Virtual, HideBySig
    Module_Channel_Control(OPMODE, Int32): PrivateScope, Public, Virtual, HideBySig
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig
    getELEDR(): PrivateScope, Public, Virtual, HideBySig
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate2D(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    checkBoardGainRange(Int32, Double&): PrivateScope, Public, Virtual, HideBySig
    SCPI_Store_Gain_BeamPattern(OPMODE, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    SCPI_Store_Phase_BeamPattern(OPMODE, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class BBOXONE28A: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :CustomA_BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AAKIT_SPECIFIC_SN 'get set' : 
  Methods:
    set_AAKIT_SPECIFIC_SN(String): PrivateScope, Public, HideBySig, SpecialName
    get_AAKIT_SPECIFIC_SN(): PrivateScope, Public, HideBySig, SpecialName
    InitDevice(): PrivateScope, Public, Virtual, HideBySig
    InitDefaultConfiguration(): PrivateScope, Public, Virtual, HideBySig
    InitConfiguration(): PrivateScope, Public, Virtual, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    captureInfoFromTable(StreamReader, Double[,]&): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    setAllChannelGain(Int32, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig
    MODULE_TC_Control(Int32): PrivateScope, Public, Virtual, HideBySig
    Module_Channel_Control(OPMODE, Int32): PrivateScope, Public, Virtual, HideBySig
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig
    getELEDR(): PrivateScope, Public, Virtual, HideBySig
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate2D(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    checkBoardGainRange(Int32, Double&): PrivateScope, Public, Virtual, HideBySig
    SCPI_Store_Gain_BeamPattern(OPMODE, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    SCPI_Store_Phase_BeamPattern(OPMODE, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class Pipit18Device: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AAKIT_SPECIFIC_SN 'get set' : 
  Methods:
    set_AAKIT_SPECIFIC_SN(String): PrivateScope, Public, HideBySig, SpecialName
    get_AAKIT_SPECIFIC_SN(): PrivateScope, Public, HideBySig, SpecialName
    getInitCmd(): PrivateScope, Public, HideBySig
    getSwitchAllChannelsCmd(Int32): PrivateScope, Public, HideBySig
    getBeamXYCmd(Double, Int32, Int32): PrivateScope, Public, HideBySig
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    updateFreqList(): PrivateScope, Public, Virtual, HideBySig
    getFrequencyList(): PrivateScope, Public, HideBySig
    getDR(): PrivateScope, Public, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    matrixCalculate(Int32, steeringDir): PrivateScope, Public, HideBySig
    matrixCalculate2D(Int32, Int32): PrivateScope, Public, HideBySig
    setBeamX(Double, Int32): PrivateScope, Public, HideBySig
    setBeamY(Double, Int32): PrivateScope, Public, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, HideBySig
    dumpChipsInfo(): PrivateScope, Public, HideBySig
    switchChannelPower(Int32, Int32, Int32): PrivateScope, Public, HideBySig
Class Pipit24Device: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :BBoxDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AAKIT_SPECIFIC_SN 'get set' : 
  Methods:
    set_AAKIT_SPECIFIC_SN(String): PrivateScope, Public, HideBySig, SpecialName
    get_AAKIT_SPECIFIC_SN(): PrivateScope, Public, HideBySig, SpecialName
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig
    LoadAAKitInfo(): PrivateScope, Public, Virtual, HideBySig
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig
    Pipit24_power(Boolean): PrivateScope, Public, HideBySig
    Pipit24_readback(Int32, Int32): PrivateScope, Public, HideBySig
    Pipit24_GetICTemperature(): PrivateScope, Public, HideBySig
    getTxRxMode(): PrivateScope, Public, HideBySig
    SwitchTxRxMode(Int32): PrivateScope, Public, HideBySig
    setControlParameters(Int32, Int32[][], Int32[][], Int32[][]): PrivateScope, Public, HideBySig
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, HideBySig
Class TMYNetwork: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Connect(String): PrivateScope, Public, HideBySig
    DeInit(): PrivateScope, Public, HideBySig
    SetReceiveBufferSize(Int32): PrivateScope, Public, HideBySig
    SetReceiveTimeout(Int32): PrivateScope, Public, HideBySig
    GetStream(): PrivateScope, Public, HideBySig
    TcpSend(String, Int32): PrivateScope, Public, HideBySig
    GetTcpRsp(): PrivateScope, Public, HideBySig
    GetTcpByteRsp(): PrivateScope, Public, HideBySig
Class DevController: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Spi_Dispose(): PrivateScope, Public, HideBySig
    Table_Loader(String): PrivateScope, Public, HideBySig
    Offset_Query(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Key_Query(Int32, String): PrivateScope, Public, HideBySig
    DevChip_Control(Byte, Int32, Int32, Control, Byte): PrivateScope, Public, HideBySig
    TxRxMode(Int32): PrivateScope, Public, HideBySig
    TxRxModeQuery(): PrivateScope, Public, HideBySig
    EnPinControl(Int32): PrivateScope, Public, HideBySig
    ftdiSnRead(): PrivateScope, Public, HideBySig
    devSnRead(): PrivateScope, Public, HideBySig
Class GeneralDevice: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    IDevice
    System.IDisposable
  Fields:
    System.String HW_version : Public
    System.String Loader_version : Public
    Int32 Loader_major_version : Public
    Int32 Loader_minor_version : Public
    Int32 Loader_patch_version : Public
    System.String FW_version : Public
    Int32 FW_major_version : Public
    Int32 FW_minor_version : Public
    Int32 FW_patch_version : Public
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InstanceInit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InstanceRelease(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SendCMD(String, Int32): PrivateScope, Public, HideBySig
    GetTcpRsp(): PrivateScope, Public, HideBySig
    GetTcpByteRsp(): PrivateScope, Public, HideBySig
    setSN(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    setDevType(DEV_TYPE): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getDevType(): PrivateScope, Public, HideBySig
    setStaticIP(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getSN(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    getIP(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    QueryMAC(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    QuerySN(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    QueryFWV(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reboot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitDevice(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setOperatingFreq(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadCalibrationInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateFreqList(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setLoaderVER(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SwitchTxRxMode(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setBeamAngle(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setBeamX(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setBeamY(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setBeamXY(Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    selectAAKit(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setAAKitInfo(String, Int32, Int32, Double[], Double[], Double[], Int32[], Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    deleteAAKitInfo(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    saveAAkitFile(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_firmware_upgrade_mode(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Set_Fast_Parallel_Mode(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Set_Fast_Beam_Steering(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setAllChannelGain(Int32, Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    diagnoseProbe(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetUDFreq(Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetUDFreqForce(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getTxRxMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetState(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getOperatingFreq(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    selectAntenna(AntennaType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    checkCaliTableLocation(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get_Fast_Parallel_Mode_Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TC_Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Query_Static_IP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    QueryHWV(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    QueryLoaderVER(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Query_Calibration_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DumpLog(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get_BeamPattern_Config_by_ID(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    switchChannelPower(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setChannelGainPhase(Int32, Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    setControlParameters(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getTemperatureADC(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetState(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetState(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getTemperatureParams(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    readBeamPhaseValues(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadBeamPhaseValues(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get_Gain_Control_Step(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get_Phase_Control_Step(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadChannelSwitchValues(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getAAKitList(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getFrequencyList(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getAAKitInfo(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getDR(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getCOMDR(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    getELEDR(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    readBeamGainValues(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadBeamGainValues(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface IDevice: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    InstanceInit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InstanceRelease(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    setSN(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    setStaticIP(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    getSN(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    getIP(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reboot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct SideBand: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SideBand LOWER = 0 : Public, Static, Literal, HasDefault
    SideBand UPPER = 1 : Public, Static, Literal, HasDefault
Class UDBoxDevice: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :GeneralDevice
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetUDDeltaFreq(): PrivateScope, Public, HideBySig
    GetRecommendLo(Double, Double, Double): PrivateScope, Public, HideBySig
    GetLoWithRecommend(Double, Double, Double): PrivateScope, Public, HideBySig
    GetUDCurrentFreq(): PrivateScope, Public, HideBySig
    GetHarmonic(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    setStaticIP(String): PrivateScope, Public, HideBySig
    Reboot(): PrivateScope, Public, HideBySig
    QuerySN(): PrivateScope, Public, Virtual, HideBySig
    QueryMAC(): PrivateScope, Public, Virtual, HideBySig
    QueryFWV(): PrivateScope, Public, Virtual, HideBySig
    QueryHWV(): PrivateScope, Public, Virtual, HideBySig
    setDevType(DEV_TYPE): PrivateScope, Public, Virtual, HideBySig
    SetUDFreq(Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig
    SetUDFreqForce(Double): PrivateScope, Public, Virtual, HideBySig
    GetState(): PrivateScope, Public, Virtual, HideBySig
    GetState(Int32): PrivateScope, Public, Virtual, HideBySig
    SetState(Int32[]): PrivateScope, Public, Virtual, HideBySig
    SetState(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class BBOX.ScanTable: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetStepVal(Double): PrivateScope, Public, HideBySig
    Deviation(Int32, Int32[]): PrivateScope, Public, HideBySig
Struct Tftp.Net.BlockCounterWrapAround: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Tftp.Net.BlockCounterWrapAround ToZero = 0 : Public, Static, Literal, HasDefault
    Tftp.Net.BlockCounterWrapAround ToOne = 1 : Public, Static, Literal, HasDefault
Class Tftp.Net.BlockCounterWrappingHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CalculateNextBlockNumber(BlockCounterWrapAround, UInt16): PrivateScope, Public, Static, HideBySig
Class Tftp.Net.CommandParser: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Parse(Byte[]): PrivateScope, Public, HideBySig
Class Tftp.Net.TftpParserException: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Tftp.Net.ITftpCommand: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Visit(ITftpCommandVisitor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Tftp.Net.ITftpCommandVisitor: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    OnReadRequest(ReadRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnWriteRequest(WriteRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnData(Data): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnAcknowledgement(Acknowledgement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnError(Error): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnOptionAcknowledgement(OptionAcknowledgement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Tftp.Net.ReadOrWriteRequest: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    System.String Filename 'get set' : 
    Tftp.Net.TftpTransferMode Mode 'get set' : 
    System.Collections.Generic.IEnumerable`1[Tftp.Net.TransferOption] Options 'get set' : 
  Methods:
    get_Filename(): PrivateScope, Public, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    get_Options(): PrivateScope, Public, HideBySig, SpecialName
Class Tftp.Net.ReadRequest: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.ReadOrWriteRequest
    Void .ctor(System.String, Tftp.Net.TftpTransferMode, System.Collections.Generic.IEnumerable`1[Tftp.Net.TransferOption]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.ITftpCommand
  Fields:
    UInt16 OpCode = 1 : Public, Static, Literal, HasDefault
  Methods:
    Visit(ITftpCommandVisitor): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.WriteRequest: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.ReadOrWriteRequest
    Void .ctor(System.String, Tftp.Net.TftpTransferMode, System.Collections.Generic.IEnumerable`1[Tftp.Net.TransferOption]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.ITftpCommand
  Fields:
    UInt16 OpCode = 2 : Public, Static, Literal, HasDefault
  Methods:
    Visit(ITftpCommandVisitor): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.Data: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(UInt16, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.ITftpCommand
  Fields:
    UInt16 OpCode = 3 : Public, Static, Literal, HasDefault
  Properties:
    UInt16 BlockNumber 'get set' : 
    Byte[] Bytes 'get set' : 
  Methods:
    get_BlockNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Bytes(): PrivateScope, Public, HideBySig, SpecialName
    Visit(ITftpCommandVisitor): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.Acknowledgement: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(UInt16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.ITftpCommand
  Fields:
    UInt16 OpCode = 4 : Public, Static, Literal, HasDefault
  Properties:
    UInt16 BlockNumber 'get set' : 
  Methods:
    get_BlockNumber(): PrivateScope, Public, HideBySig, SpecialName
    Visit(ITftpCommandVisitor): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.Error: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(UInt16, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.ITftpCommand
  Fields:
    UInt16 OpCode = 5 : Public, Static, Literal, HasDefault
  Properties:
    UInt16 ErrorCode 'get set' : 
    System.String Message 'get set' : 
  Methods:
    get_ErrorCode(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    Visit(ITftpCommandVisitor): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.OptionAcknowledgement: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IEnumerable`1[Tftp.Net.TransferOption]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.ITftpCommand
  Fields:
    UInt16 OpCode = 6 : Public, Static, Literal, HasDefault
  Properties:
    System.Collections.Generic.IEnumerable`1[Tftp.Net.TransferOption] Options 'get set' : 
  Methods:
    get_Options(): PrivateScope, Public, HideBySig, SpecialName
    Visit(ITftpCommandVisitor): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.CommandSerializer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Serialize(ITftpCommand, Stream): PrivateScope, Public, HideBySig
Class Tftp.Net.TftpEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ITftpTransfer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ITftpTransfer, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.TftpProgressHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ITftpTransfer, TftpTransferProgress): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ITftpTransfer, TftpTransferProgress, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.TftpErrorHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ITftpTransfer, TftpTransferError): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ITftpTransfer, TftpTransferError, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Tftp.Net.TftpTransferMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Tftp.Net.TftpTransferMode netascii = 0 : Public, Static, Literal, HasDefault
    Tftp.Net.TftpTransferMode octet = 1 : Public, Static, Literal, HasDefault
    Tftp.Net.TftpTransferMode mail = 2 : Public, Static, Literal, HasDefault
Interface Tftp.Net.ITftpTransfer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Tftp.Net.TftpTransferMode TransferMode 'get set' : 
    Int32 BlockSize 'get set' : 
    System.TimeSpan RetryTimeout 'get set' : 
    Int32 RetryCount 'get set' : 
    Tftp.Net.BlockCounterWrapAround BlockCounterWrapping 'get set' : 
    Int64 ExpectedSize 'get set' : 
    System.String Filename 'get ' : 
    System.Object UserContext 'get set' : 
  Events:
    Tftp.Net.TftpProgressHandler OnProgress: 
    Tftp.Net.TftpEventHandler OnFinished: 
    Tftp.Net.TftpErrorHandler OnError: 
  Methods:
    add_OnProgress(TftpProgressHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_OnProgress(TftpProgressHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_OnFinished(TftpEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_OnFinished(TftpEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_OnError(TftpErrorHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_OnError(TftpErrorHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TransferMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TransferMode(TftpTransferMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_BlockSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RetryTimeout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_RetryTimeout(TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RetryCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_RetryCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BlockCounterWrapping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_BlockCounterWrapping(BlockCounterWrapAround): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ExpectedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ExpectedSize(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Filename(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_UserContext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_UserContext(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Start(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Cancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Tftp.Net.TftpClient: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Net.IPEndPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Net.IPAddress, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Net.IPAddress): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Download(String): PrivateScope, Public, HideBySig
    Upload(String, String): PrivateScope, Public, HideBySig
    GetMD5HashFromFile(String): PrivateScope, Public, HideBySig
Class Tftp.Net.TftpServerEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ITftpTransfer, EndPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ITftpTransfer, EndPoint, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.TftpServerErrorHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(TftpTransferError): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(TftpTransferError, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.TftpServer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Net.IPEndPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Net.IPAddress): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Net.IPAddress, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 DEFAULT_SERVER_PORT = 69 : Public, Static, Literal, HasDefault
  Events:
    Tftp.Net.TftpServerEventHandler OnReadRequest: 
    Tftp.Net.TftpServerEventHandler OnWriteRequest: 
    Tftp.Net.TftpServerErrorHandler OnError: 
  Methods:
    add_OnReadRequest(TftpServerEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OnReadRequest(TftpServerEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_OnWriteRequest(TftpServerEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OnWriteRequest(TftpServerEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_OnError(TftpServerErrorHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OnError(TftpServerErrorHandler): PrivateScope, Public, HideBySig, SpecialName
    Start(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.TftpStreamReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadUInt16(): PrivateScope, Public, HideBySig
    ReadByte(): PrivateScope, Public, HideBySig
    ReadBytes(Int32): PrivateScope, Public, HideBySig
Class Tftp.Net.TftpStreamWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteUInt16(UInt16): PrivateScope, Public, HideBySig
    WriteByte(Byte): PrivateScope, Public, HideBySig
    WriteBytes(Byte[]): PrivateScope, Public, HideBySig
Class Tftp.Net.TftpTransferError: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig, Abstract
Class Tftp.Net.TftpErrorPacket: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Tftp.Net.TftpTransferError
    Void .ctor(UInt16, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Tftp.Net.TftpErrorPacket FileNotFound : Public, Static, InitOnly
    Tftp.Net.TftpErrorPacket AccessViolation : Public, Static, InitOnly
    Tftp.Net.TftpErrorPacket DiskFull : Public, Static, InitOnly
    Tftp.Net.TftpErrorPacket IllegalOperation : Public, Static, InitOnly
    Tftp.Net.TftpErrorPacket UnknownTransferId : Public, Static, InitOnly
    Tftp.Net.TftpErrorPacket FileAlreadyExists : Public, Static, InitOnly
    Tftp.Net.TftpErrorPacket NoSuchUser : Public, Static, InitOnly
  Properties:
    UInt16 ErrorCode 'get set' : 
    System.String ErrorMessage 'get set' : 
  Methods:
    get_ErrorCode(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorMessage(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.NetworkError: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Tftp.Net.TftpTransferError
    Void .ctor(System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Exception Exception 'get set' : 
  Methods:
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.TimeoutError: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Tftp.Net.TftpTransferError
    Void .ctor(System.TimeSpan, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.TftpTransferProgress: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 TransferredBytes 'get set' : 
    Int64 TotalBytes 'get set' : 
  Methods:
    get_TransferredBytes(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalBytes(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.TransferOption: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.String Value 'get set' : 
    Boolean IsAcknowledged 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsAcknowledged(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAcknowledged(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Trace.LoggingStateDecorator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Tftp.Net.Transfer.States.ITransferState, Tftp.Net.Transfer.TftpTransfer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.Transfer.States.ITransferState
  Properties:
    Tftp.Net.Transfer.TftpTransfer Context 'get set' : 
  Methods:
    get_Context(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Context(TftpTransfer): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetStateName(): PrivateScope, Public, HideBySig
    OnStateEnter(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnStart(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnCancel(TftpErrorPacket): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnCommand(ITftpCommand, EndPoint): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnTimer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.Trace.TftpTrace: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Properties:
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    Trace(String, ITftpTransfer): PrivateScope, Assembly, Static, HideBySig
Class Tftp.Net.Channel.TftpCommandHandler: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ITftpCommand, EndPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ITftpCommand, EndPoint, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.Channel.TftpChannelErrorHandler: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(TftpTransferError): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(TftpTransferError, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Tftp.Net.Channel.ITransferChannel: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    System.Net.EndPoint RemoteEndpoint 'get set' : 
  Events:
    Tftp.Net.Channel.TftpCommandHandler OnCommandReceived: 
    Tftp.Net.Channel.TftpChannelErrorHandler OnError: 
  Methods:
    add_OnCommandReceived(TftpCommandHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_OnCommandReceived(TftpCommandHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_OnError(TftpChannelErrorHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_OnError(TftpChannelErrorHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RemoteEndpoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_RemoteEndpoint(EndPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Open(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Send(ITftpCommand): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Tftp.Net.Channel.TransferChannelFactory: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateServer(EndPoint): PrivateScope, Public, Static, HideBySig
    CreateConnection(EndPoint): PrivateScope, Public, Static, HideBySig
Class Tftp.Net.Channel.UdpChannel: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Net.Sockets.UdpClient): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.Channel.ITransferChannel
    System.IDisposable
  Properties:
    System.Net.EndPoint RemoteEndpoint 'get set' : 
  Events:
    Tftp.Net.Channel.TftpCommandHandler OnCommandReceived: 
    Tftp.Net.Channel.TftpChannelErrorHandler OnError: 
  Methods:
    add_OnCommandReceived(TftpCommandHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OnCommandReceived(TftpCommandHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_OnError(TftpChannelErrorHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OnError(TftpChannelErrorHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Open(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Send(ITftpCommand): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_RemoteEndpoint(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RemoteEndpoint(EndPoint): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Tftp.Net.Transfer.InitialStateFactory: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Class Tftp.Net.Transfer.LocalReadTransfer: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.TftpTransfer
    Void .ctor(Tftp.Net.Channel.ITransferChannel, System.String, System.Collections.Generic.IEnumerable`1[Tftp.Net.TransferOption]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Tftp.Net.TftpTransferMode TransferMode 'get set' : 
    Int32 BlockSize 'get set' : 
    System.TimeSpan RetryTimeout 'get set' : 
  Methods:
    get_TransferMode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TransferMode(TftpTransferMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_BlockSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BlockSize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_RetryTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_RetryTimeout(TimeSpan): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Tftp.Net.Transfer.LocalWriteTransfer: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.TftpTransfer
    Void .ctor(Tftp.Net.Channel.ITransferChannel, System.String, System.Collections.Generic.IEnumerable`1[Tftp.Net.TransferOption]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Tftp.Net.TftpTransferMode TransferMode 'get set' : 
    Int32 BlockSize 'get set' : 
    System.TimeSpan RetryTimeout 'get set' : 
    Int64 ExpectedSize 'get set' : 
  Methods:
    get_TransferMode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TransferMode(TftpTransferMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_BlockSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_BlockSize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_RetryTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_RetryTimeout(TimeSpan): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ExpectedSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ExpectedSize(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Tftp.Net.Transfer.RemoteReadTransfer: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.TftpTransfer
    Void .ctor(Tftp.Net.Channel.ITransferChannel, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 ExpectedSize 'get set' : 
  Methods:
    get_ExpectedSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ExpectedSize(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Tftp.Net.Transfer.RemoteWriteTransfer: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.TftpTransfer
    Void .ctor(Tftp.Net.Channel.ITransferChannel, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Tftp.Net.Transfer.SendOptionAcknowledgementBase: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.StateThatExpectsMessagesFromDefaultEndPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
    OnError(Error): PrivateScope, Public, Virtual, HideBySig
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.SimpleTimer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Restart(): PrivateScope, Public, HideBySig
    IsTimeout(): PrivateScope, Public, HideBySig
Class Tftp.Net.Transfer.TftpTransfer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Tftp.Net.Channel.ITransferChannel, System.String, System.String, Tftp.Net.Transfer.States.ITransferState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.ITftpTransfer
    System.IDisposable
  Properties:
    Tftp.Net.Transfer.TransferOptionSet ProposedOptions 'get set' : 
    Tftp.Net.Transfer.TransferOptionSet NegotiatedOptions 'get set' : 
    Boolean WasStarted 'get set' : 
    System.IO.Stream InputOutputStream 'get set' : 
    System.String Filename 'get set' : 
    Int32 RetryCount 'get set' : 
    Tftp.Net.TftpTransferMode TransferMode 'get set' : 
    System.Object UserContext 'get set' : 
    System.TimeSpan RetryTimeout 'get set' : 
    Int64 ExpectedSize 'get set' : 
    Int32 BlockSize 'get set' : 
    System.String md5_checksum 'get set' : 
    Tftp.Net.BlockCounterWrapAround BlockCounterWrapping 'get set' : 
  Events:
    Tftp.Net.TftpProgressHandler OnProgress: 
    Tftp.Net.TftpEventHandler OnFinished: 
    Tftp.Net.TftpErrorHandler OnError: 
  Methods:
    get_ProposedOptions(): PrivateScope, Public, HideBySig, SpecialName
    set_ProposedOptions(TransferOptionSet): PrivateScope, Public, HideBySig, SpecialName
    get_NegotiatedOptions(): PrivateScope, Public, HideBySig, SpecialName
    get_WasStarted(): PrivateScope, Public, HideBySig, SpecialName
    get_InputOutputStream(): PrivateScope, Public, HideBySig, SpecialName
    SetState(ITransferState): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetConnection(): PrivateScope, Assembly, HideBySig
    RaiseOnProgress(Int64): PrivateScope, Assembly, HideBySig
    RaiseOnError(TftpTransferError): PrivateScope, Assembly, HideBySig
    RaiseOnFinished(): PrivateScope, Assembly, HideBySig
    FinishOptionNegotiation(TransferOptionSet): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    FillOrDisableTransferSizeOption(): PrivateScope, Assembly, HideBySig
    add_OnProgress(TftpProgressHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OnProgress(TftpProgressHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_OnFinished(TftpEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OnFinished(TftpEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_OnError(TftpErrorHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OnError(TftpErrorHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Filename(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RetryCount(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RetryCount(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TransferMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TransferMode(TftpTransferMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UserContext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UserContext(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RetryTimeout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RetryTimeout(TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExpectedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExpectedSize(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BlockSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_md5_checksum(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_md5_checksum(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BlockCounterWrapping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BlockCounterWrapping(BlockCounterWrapAround): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Start(Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Cancel(TftpErrorPacket): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.Transfer.TransferOptionSet: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IEnumerable`1[Tftp.Net.TransferOption]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean IncludesBlockSizeOption : Public
    Int32 BlockSize : Public
    Boolean IncludesTimeoutOption : Public
    Int32 Timeout : Public
    Boolean IncludesTransferSizeOption : Public
    Int64 TransferSize : Public
    Boolean IncludesMD5Option : Public
    System.String md5_checksum : Public
    Int32 DEFAULT_BLOCKSIZE = 512 : Public, Static, Literal, HasDefault
    Int32 DEFAULT_TIMEOUT_SECS = 5 : Public, Static, Literal, HasDefault
  Methods:
    NewDefaultSet(): PrivateScope, Public, Static, HideBySig
    NewEmptySet(): PrivateScope, Public, Static, HideBySig
    ToOptionList(): PrivateScope, Public, HideBySig
Class Tftp.Net.Transfer.States.AcknowledgeWriteRequest: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.StateThatExpectsMessagesFromDefaultEndPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
    OnData(Data): PrivateScope, Public, Virtual, HideBySig
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig
    OnError(Error): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.BaseState: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.Transfer.States.ITransferState
  Properties:
    Tftp.Net.Transfer.TftpTransfer Context 'get set' : 
  Methods:
    get_Context(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Context(TftpTransfer): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnStart(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnCommand(ITftpCommand, EndPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnTimer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.Transfer.States.CancelledByUser: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.BaseState
    Void .ctor(Tftp.Net.TftpErrorPacket): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.Closed: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.BaseState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
Interface Tftp.Net.Transfer.States.ITransferState: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Tftp.Net.Transfer.TftpTransfer Context 'get set' : 
  Methods:
    get_Context(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Context(TftpTransfer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnStart(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnTimer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnCommand(ITftpCommand, EndPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Tftp.Net.Transfer.States.ReceivedError: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.BaseState
    Void .ctor(Tftp.Net.Error): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Tftp.Net.TftpTransferError): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.Receiving: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.StateThatExpectsMessagesFromDefaultEndPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnData(Data): PrivateScope, Public, Virtual, HideBySig
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig
    OnError(Error): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.Sending: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.StateThatExpectsMessagesFromDefaultEndPoint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
    OnAcknowledgement(Acknowledgement): PrivateScope, Public, Virtual, HideBySig
    OnError(Error): PrivateScope, Public, Virtual, HideBySig
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.SendOptionAcknowledgementForReadRequest: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.SendOptionAcknowledgementBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnAcknowledgement(Acknowledgement): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.SendOptionAcknowledgementForWriteRequest: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.SendOptionAcknowledgementBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnData(Data): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.SendReadRequest: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.StateWithNetworkTimeout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
    OnCommand(ITftpCommand, EndPoint): PrivateScope, Public, Virtual, HideBySig
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.SendWriteRequest: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.StateWithNetworkTimeout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
    OnCommand(ITftpCommand, EndPoint): PrivateScope, Public, Virtual, HideBySig
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.StartIncomingRead: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.BaseState
    Void .ctor(System.Collections.Generic.IEnumerable`1[Tftp.Net.TransferOption]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
    OnStart(): PrivateScope, Public, Virtual, HideBySig
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.StartIncomingWrite: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.BaseState
    Void .ctor(System.Collections.Generic.IEnumerable`1[Tftp.Net.TransferOption]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
    OnStart(): PrivateScope, Public, Virtual, HideBySig
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.StartOutgoingRead: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.BaseState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStart(): PrivateScope, Public, Virtual, HideBySig
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.StartOutgoingWrite: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.BaseState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStart(): PrivateScope, Public, Virtual, HideBySig
    OnCancel(TftpErrorPacket): PrivateScope, Public, Virtual, HideBySig
Class Tftp.Net.Transfer.States.StateThatExpectsMessagesFromDefaultEndPoint: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.StateWithNetworkTimeout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Tftp.Net.ITftpCommandVisitor
  Methods:
    OnCommand(ITftpCommand, EndPoint): PrivateScope, Public, Virtual, HideBySig
    OnReadRequest(ReadRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnWriteRequest(WriteRequest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnData(Data): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnAcknowledgement(Acknowledgement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnError(Error): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnOptionAcknowledgement(OptionAcknowledgement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Tftp.Net.Transfer.States.StateWithNetworkTimeout: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Tftp.Net.Transfer.States.BaseState
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    OnStateEnter(): PrivateScope, Public, Virtual, HideBySig
    OnTimer(): PrivateScope, Public, Virtual, HideBySig
Class BBoxAPI.Command_Argument: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String sn : Public
    System.Object[] argument : Public
Class BBoxAPI.Command_Return_Value: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String sn : Public
    System.Object ret : Public
Class BBoxAPI.Reflction_Command: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, BBoxAPI.Command_Argument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String methodName : Public
    BBoxAPI.Command_Argument param : Public
Class BBoxAPI.Return_Data: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.TypeCode type 'get set' : 
    System.Object value 'get set' : 
  Methods:
    get_type(): PrivateScope, Public, HideBySig, SpecialName
    set_type(TypeCode): PrivateScope, Public, HideBySig, SpecialName
    get_value(): PrivateScope, Public, HideBySig, SpecialName
    set_value(Object): PrivateScope, Public, HideBySig, SpecialName
Class BBoxAPI.API_Response: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    BBoxAPI.retCode return_code : Public
    System.Collections.Generic.List`1[System.String] errors : Public
    Boolean is_Data_exists : Public
    BBoxAPI.Return_Data data : Public
  Methods:
    set_data(retCode, Return_Data): PrivateScope, Public, HideBySig
    get_data(): PrivateScope, Public, HideBySig
    set_error_message(retCode, String): PrivateScope, Public, HideBySig
Class BBoxAPI.BBoxOneAPI: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ScanningDevice(DEV_SCAN_MODE): PrivateScope, Public, HideBySig
    ScanningVirtualDevice(DEV_SCAN_MODE): PrivateScope, Public, HideBySig
    Init(String): PrivateScope, Public, HideBySig
    Init(String, Int32): PrivateScope, Public, HideBySig
    Init(String, Int32, Int32): PrivateScope, Public, HideBySig
    DeInit(String): PrivateScope, Public, HideBySig
    setOperatingFreq(Double, String): PrivateScope, Public, HideBySig
    getOperatingFreq(String): PrivateScope, Public, HideBySig
    setStaticIP(String, String): PrivateScope, Public, HideBySig
    Reboot(String): PrivateScope, Public, HideBySig
    DumpLog(String): PrivateScope, Public, HideBySig
    selectAntenna(AntennaType, String): PrivateScope, Public, HideBySig
    selectAAKit(String, String): PrivateScope, Public, HideBySig
    getAAKitList(String): PrivateScope, Public, HideBySig
    getFrequencyList(String): PrivateScope, Public, HideBySig
    getDR(String): PrivateScope, Public, HideBySig
    getCOMDR(String): PrivateScope, Public, HideBySig
    getELEDR(String): PrivateScope, Public, HideBySig
    getAAKitInfo(String, String): PrivateScope, Public, HideBySig
    setAAKitInfo(String, Int32, Int32, Double[], Double[], Double[], Int32[], Int32[], String): PrivateScope, Public, HideBySig
    deleteAAKitInfo(String, String): PrivateScope, Public, HideBySig
    saveAAkitFile(String, String): PrivateScope, Public, HideBySig
    checkCaliTableLocation(String): PrivateScope, Public, HideBySig
    SwitchTxRxMode(Int32, String): PrivateScope, Public, HideBySig
    getTxRxMode(String): PrivateScope, Public, HideBySig
    setBeamX(Double, Int32, String): PrivateScope, Public, HideBySig
    setBeamY(Double, Int32, String): PrivateScope, Public, HideBySig
    setBeamXY(Double, Int32, Int32, String): PrivateScope, Public, HideBySig
    setAllGain(Int32, String): PrivateScope, Public, HideBySig
    setGainPhaseStep(Int32, Int32, Int32, Int32, Int32, String): PrivateScope, Public, HideBySig
    readSetting(String): PrivateScope, Public, HideBySig
    readSettingValues(String): PrivateScope, Public, HideBySig
    writeSetting(String): PrivateScope, Public, HideBySig
    getInitCmd(String): PrivateScope, Public, HideBySig
    getSwitchAllChannelsCmd(Int32, String): PrivateScope, Public, HideBySig
    getBeamXYCmd(Double, Int32, Int32, String): PrivateScope, Public, HideBySig
    switchTxChannel(Int32, Int32, Int32, Int32, Int32, String): PrivateScope, Public, HideBySig
    switchRxChannel(Int32, Int32, Int32, Int32, Int32, String): PrivateScope, Public, HideBySig
    switchChannelPower(Int32, Int32, Int32, String): PrivateScope, Public, HideBySig
    setChannelGainPhase(Int32, Int32, Double, Int32, String): PrivateScope, Public, HideBySig
    readBeamGainValues(String): PrivateScope, Public, HideBySig
    readBeamPhaseValues(String): PrivateScope, Public, HideBySig
    setControlParameters(Int32, Int32, Int32, Int32, Int32, Int32, String): PrivateScope, Public, HideBySig
    diagnoseProbe(String): PrivateScope, Public, HideBySig
    releaseInstance(String): PrivateScope, Public, HideBySig
    QuerySN(String): PrivateScope, Public, HideBySig
    QueryMAC(String): PrivateScope, Public, HideBySig
    QueryFWV(String): PrivateScope, Public, HideBySig
    QueryHWV(String): PrivateScope, Public, HideBySig
    SetUDFreq(Double, Double, Double, Double, String): PrivateScope, Public, HideBySig
    SetUDFreqForce(Double, String): PrivateScope, Public, HideBySig
    GetState(String): PrivateScope, Public, HideBySig
    GetState(Int32, String): PrivateScope, Public, HideBySig
    SetState(Int32[], String): PrivateScope, Public, HideBySig
    SetState(Int32, Int32, String): PrivateScope, Public, HideBySig
    GetUDDeltaFreq(String): PrivateScope, Public, HideBySig
    GetRecommendLo(Double, Double, Double, String): PrivateScope, Public, HideBySig
    GetLoWithRecommend(Double, Double, Double, String): PrivateScope, Public, HideBySig
    GetUDCurrentFreq(String): PrivateScope, Public, HideBySig
    GetHarmonic(Double, Double, Double, Double, String): PrivateScope, Public, HideBySig
    Pipit24_power(Boolean, String): PrivateScope, Public, HideBySig
    Pipit24_readback(Int32, Int32, String): PrivateScope, Public, HideBySig
    Pipit24_GetICTemperature(String): PrivateScope, Public, HideBySig
    setControlParameters(Int32, Int32[][], Int32[][], Int32[][], String): PrivateScope, Public, HideBySig
    SetChannelGainPhase(Int32, Int32, Int32, Double, Int32, String): PrivateScope, Public, HideBySig
    setAllChannelGain(Int32, Double, Double, Double, Double, String): PrivateScope, Public, HideBySig
    ReadChannelSwitchValues(Int32, String): PrivateScope, Public, HideBySig
    ReadBeamGainValues(Int32, String): PrivateScope, Public, HideBySig
    ReadBeamPhaseValues(Int32, String): PrivateScope, Public, HideBySig
    Get_Gain_Control_Step(Int32, String): PrivateScope, Public, HideBySig
    Get_Phase_Control_Step(Int32, String): PrivateScope, Public, HideBySig
    setBeamAngle(Double, Int32, Int32, String): PrivateScope, Public, HideBySig
    setChannelGainStep(Int32, Int32, Int32, String): PrivateScope, Public, HideBySig
    setCommonGainStep(Int32, Int32, String): PrivateScope, Public, HideBySig
    setChannelPhaseStep(Int32, Int32, Int32, String): PrivateScope, Public, HideBySig
    getTemperatureADC(String): PrivateScope, Public, HideBySig
    get_TC_Status(String): PrivateScope, Public, HideBySig
    set_TC_Params(Int32, Int32, Int32, Int32, Int32, String): PrivateScope, Public, HideBySig
    getTemperatureParams(String): PrivateScope, Public, HideBySig
    Set_Fast_Beam_Steering(Int32, Int32, String): PrivateScope, Public, HideBySig
    Set_BeamPattern_Config(Int32, Int32, Double, Int32, Int32, String): PrivateScope, Public, HideBySig
    Get_BeamPattern_Config_by_ID(Int32, Int32, String): PrivateScope, Public, HideBySig
    Set_Fast_Parallel_Mode(Boolean, String): PrivateScope, Public, HideBySig
    Get_Fast_Parallel_Mode_Status(String): PrivateScope, Public, HideBySig
    Query_Static_IP(String): PrivateScope, Public, HideBySig
    Query_API_Version(String): PrivateScope, Public, HideBySig
    Query_Calibration_Version(String): PrivateScope, Public, HideBySig
    QueryLoaderVER(String): PrivateScope, Public, HideBySig
    firmware_upgrade(String, String): PrivateScope, Public, HideBySig
    Virtual_setOperatingFreq(Double, String): PrivateScope, Public, HideBySig
    Virtual_getAAKitList(String): PrivateScope, Public, HideBySig
    Virtual_selectAAKit(String, String): PrivateScope, Public, HideBySig
    Virtual_getAAKitInfo(String, String): PrivateScope, Public, HideBySig
    Virtual_setAAKitInfo(String, String): PrivateScope, Public, HideBySig
    Virtual_deleteAAKitInfo(String, String): PrivateScope, Public, HideBySig
    Virtual_saveAAkitFile(String, String): PrivateScope, Public, HideBySig
    Virtual_SwitchTxRxMode(Int32, String): PrivateScope, Public, HideBySig
    Virtual_switchChannelPower(Int32, Int32, String): PrivateScope, Public, HideBySig
    Virtual_setChannelGainPhase(Int32, Int32, Double, Int32, String): PrivateScope, Public, HideBySig
    Virtual_setBeamAngle(Int32, Double, Double, Double, String): PrivateScope, Public, HideBySig
    Virtual_checkCaliTableLocation(String): PrivateScope, Public, HideBySig
    Virtual_getFrequencyList(String): PrivateScope, Public, HideBySig
    Virtual_getFrequencyInfo(Double, String): PrivateScope, Public, HideBySig
    Virtual_getTxRxMode(String): PrivateScope, Public, HideBySig
    Virtual_ReadChannelSettings(String): PrivateScope, Public, HideBySig
    Virtual_switchDevicePower(Int32, Int32, String): PrivateScope, Public, HideBySig
    Virtual_setDeviceGain(Int32, Double, String): PrivateScope, Public, HideBySig
    Virtual_setDevicePhase(Int32, Int32, String): PrivateScope, Public, HideBySig
    test_command(): PrivateScope, Public, HideBySig
    GetCurrentPath(): PrivateScope, Public, HideBySig
Class BBoxAPI.BBoxLiteAPI: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(): PrivateScope, Public, HideBySig
    SwitchTxRxMode(String, TxRxMode): PrivateScope, Public, HideBySig
    GetTxRxMode(String): PrivateScope, Public, HideBySig
    BeamSteer(String, TxRxMode, Double, Double): PrivateScope, Public, HideBySig
    DeviceClose(String): PrivateScope, Public, HideBySig
Class BBoxAPI.UdpState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Net.Sockets.UdpClient u : Public
    System.Net.IPEndPoint e : Public
Class BBoxAPI.Device_Information: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.String, BBoxAPI.DEV_TYPE, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object instance : Public
  Properties:
    System.String sn 'get set' : 
    System.String ip 'get set' : 
    BBoxAPI.DEV_TYPE dev_type 'get set' : 
    System.String info 'get set' : 
    Boolean is_active 'get set' : 
  Methods:
    get_sn(): PrivateScope, Public, HideBySig, SpecialName
    set_sn(String): PrivateScope, Public, HideBySig, SpecialName
    get_ip(): PrivateScope, Public, HideBySig, SpecialName
    set_ip(String): PrivateScope, Public, HideBySig, SpecialName
    get_dev_type(): PrivateScope, Public, HideBySig, SpecialName
    set_dev_type(DEV_TYPE): PrivateScope, Public, HideBySig, SpecialName
    get_info(): PrivateScope, Public, HideBySig, SpecialName
    set_info(String): PrivateScope, Public, HideBySig, SpecialName
    get_is_active(): PrivateScope, Public, HideBySig, SpecialName
    set_is_active(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class BBoxAPI.Queryer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Start(): PrivateScope, Public, HideBySig
    DestructClients(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    GetSNIPConfig(): PrivateScope, Public, HideBySig
    ReceiveCallback(IAsyncResult): PrivateScope, Public, HideBySig
    ScanDevice(DEV_SCAN_MODE): PrivateScope, Public, HideBySig
    SendthenRead(String, DEV_SCAN_MODE): PrivateScope, Public, HideBySig
    GetDevInfo(): PrivateScope, Public, HideBySig
    GetDevNum(): PrivateScope, Public, HideBySig
    GetIP(String): PrivateScope, Public, HideBySig
    Check_Device_exits(String): PrivateScope, Public, HideBySig
    GetDevType(String): PrivateScope, Public, HideBySig
    Set_device_information(String, String, DEV_TYPE): PrivateScope, Public, HideBySig
    Remove_device_information(): PrivateScope, Public, HideBySig
    check_device_IP_conflict(String, String): PrivateScope, Public, HideBySig
    Get_active_device(String): PrivateScope, Public, HideBySig
    Set_device_active(String, Object): PrivateScope, Public, HideBySig
    Set_device_inactive(String): PrivateScope, Public, HideBySig
    get_device_info_from_calibration_table(): PrivateScope, Public, HideBySig
    ReflectFunction(String, String, Object[]): PrivateScope, Public, HideBySig
    check_upgrade_precondiction(String, String, String): PrivateScope, Public, HideBySig
Class BBoxAPI.FirmwareUpgrade: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String sn : Public
    System.String ip : Public
    Boolean upgrade_result : Public
  Methods:
    is_Administrator(): PrivateScope, Public, HideBySig
    check_TFTP_firewall_rule(): PrivateScope, Public, HideBySig
    is_valid_settings_with_fixed_subnet_upgrade(String, Int32): PrivateScope, Public, HideBySig
    is_firmware_version_support_dhcp_upgrade(String): PrivateScope, Public, HideBySig
    is_loader_version_support_dhcp_upgrade(String): PrivateScope, Public, HideBySig
    update(String, String): PrivateScope, Public, HideBySig
    transfer_OnProgress(ITftpTransfer, TftpTransferProgress): PrivateScope, Public, HideBySig
    transfer_OnError(ITftpTransfer, TftpTransferError): PrivateScope, Public, HideBySig
    transfer_OnFinshed(ITftpTransfer): PrivateScope, Public, HideBySig
Struct BBoxAPI.retCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BBoxAPI.retCode OK = 0 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode WARNING = 1 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR = 2 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode NO_RESPONSE = 3 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_GET_SN = 10 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_DEV_TYPE = 11 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_INIT_OBJECT = 12 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_DEV_NOT_INIT = 13 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_METHOD_NOT_FOUND = 14 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_REFLECTION = 15 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_POWER = 16 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_SCAN_NOT_FOUND = 17 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_UNMATCH_RETURN_TYPE = 18 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_NETWORK_NOT_INIT = 20 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_NETWORK_INIT = 21 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_NETWORK_CONNECT_TIMEOUT = 22 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_DISCONNECT = 23 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_SOCKET = 24 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_SEND_CMD = 25 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_RESP_CMD = 26 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_DEV_COUNT_ZERO = 30 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_DEV_DUMMY_FUNC = 31 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_CMD = 40 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_CMD_INIT = 41 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_BF_AAKIT = 100 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_BF_NO_AAKIT = 101 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_BF_CALI_PATH = 102 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_BF_BEAMXY = 103 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_BF_GEN = 104 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_BF_TRMODE = 105 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode STATUS_BF_LOAD_CALI_INCOMPLTE = 106 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_BF_LOAD_CALI_PARSE_FAILED = 107 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_BF_UNLOAD_CALI = 108 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_BF_CALI_VERSION_UNSUPPORTED = 109 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_BF_CALI_DATA_NOT_FOUND = 110 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_FREQ_EQUATION = 250 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_PLO_CRC = 251 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode WARNING_HARMONIC = 252 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_HARMONIC_BLOCK = 253 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_FW_UPGRADE_IP_INVALID = 300 : Public, Static, Literal, HasDefault
    BBoxAPI.retCode ERROR_FW_VERSION_NOT_SUPPORT = 301 : Public, Static, Literal, HasDefault
Struct BBoxAPI.steeringDir: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BBoxAPI.steeringDir X_DIR = 0 : Public, Static, Literal, HasDefault
    BBoxAPI.steeringDir Y_DIR = 1 : Public, Static, Literal, HasDefault
Struct BBoxAPI.DEV_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BBoxAPI.DEV_TYPE DEV_UNKNOWN = -1 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_BBOXONE = 0 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_OEBOX = 1 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_NGK = 2 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_PIPIT18 = 3 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_UD_00E = 4 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_UD_00D = 5 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_PIPIT24 = 6 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_BBOXLITE28A = 7 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_BBOXLITE39A = 8 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_BBOXONE28A = 9 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_BBOXONE39A = 10 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_KIRIN40OE = 11 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_BBOARD28A = 12 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_BBOARD39A = 13 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_UD_00F = 14 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_UD_00G = 15 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_UD_DEMO_AD = 16 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_BBOARD26A = 17 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_BBOXLITE26A = 18 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_BBOXONE26A = 19 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_ANALOG_BEAMFORM = 1000 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_DIGITAL_BEAMFORM = 1001 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_TYPE DEV_HYBRID_BEAMFORM = 1002 : Public, Static, Literal, HasDefault
Struct BBoxAPI.DEV_SCAN_MODE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BBoxAPI.DEV_SCAN_MODE NORMAL = 0 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_SCAN_MODE FAST = 1 : Public, Static, Literal, HasDefault
    BBoxAPI.DEV_SCAN_MODE ETH_DISABLE = 2 : Public, Static, Literal, HasDefault
Struct BBoxAPI.TRMODE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BBoxAPI.TRMODE TX = 0 : Public, Static, Literal, HasDefault
    BBoxAPI.TRMODE RX = 1 : Public, Static, Literal, HasDefault
Struct BBoxAPI.PIPIT24_TRMODE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BBoxAPI.PIPIT24_TRMODE UD_STANDBY = 0 : Public, Static, Literal, HasDefault
    BBoxAPI.PIPIT24_TRMODE UD_TX_LS = 1 : Public, Static, Literal, HasDefault
    BBoxAPI.PIPIT24_TRMODE UD_TX_HS = 2 : Public, Static, Literal, HasDefault
    BBoxAPI.PIPIT24_TRMODE UD_TX_BYPASS = 3 : Public, Static, Literal, HasDefault
    BBoxAPI.PIPIT24_TRMODE UD_RX_LS = 4 : Public, Static, Literal, HasDefault
    BBoxAPI.PIPIT24_TRMODE UD_RX_HS = 5 : Public, Static, Literal, HasDefault
    BBoxAPI.PIPIT24_TRMODE UD_RX_BYPASS = 6 : Public, Static, Literal, HasDefault
    BBoxAPI.PIPIT24_TRMODE UD_SLEEP = 7 : Public, Static, Literal, HasDefault
    BBoxAPI.PIPIT24_TRMODE UD_LOFT_CAL_LS = 8 : Public, Static, Literal, HasDefault
    BBoxAPI.PIPIT24_TRMODE UD_LOFT_CAL_HS = 9 : Public, Static, Literal, HasDefault
Struct BBoxAPI.UD_STATE: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BBoxAPI.UD_STATE PLO_LOCK = 0 : Public, Static, Literal, HasDefault
    BBoxAPI.UD_STATE CH1 = 1 : Public, Static, Literal, HasDefault
    BBoxAPI.UD_STATE CH2 = 2 : Public, Static, Literal, HasDefault
    BBoxAPI.UD_STATE OUT_10M = 3 : Public, Static, Literal, HasDefault
    BBoxAPI.UD_STATE OUT_100M = 4 : Public, Static, Literal, HasDefault
    BBoxAPI.UD_STATE SOURCE_100M = 5 : Public, Static, Literal, HasDefault
    BBoxAPI.UD_STATE LED_100M = 6 : Public, Static, Literal, HasDefault
    BBoxAPI.UD_STATE PWR_5V = 7 : Public, Static, Literal, HasDefault
    BBoxAPI.UD_STATE PWR_9V = 8 : Public, Static, Literal, HasDefault
    BBoxAPI.UD_STATE ERROR_CODE = 9 : Public, Static, Literal, HasDefault
Struct BBoxAPI.OPMODE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BBoxAPI.OPMODE STANDBY = 0 : Public, Static, Literal, HasDefault
    BBoxAPI.OPMODE TX = 1 : Public, Static, Literal, HasDefault
    BBoxAPI.OPMODE RX = 2 : Public, Static, Literal, HasDefault
    BBoxAPI.OPMODE SLEEP = 3 : Public, Static, Literal, HasDefault
Struct BBoxAPI.AntennaType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BBoxAPI.AntennaType FOURBYFOUR = 0 : Public, Static, Literal, HasDefault
    BBoxAPI.AntennaType EIGHTBYEIGHT = 1 : Public, Static, Literal, HasDefault
    BBoxAPI.AntennaType ER = 2 : Public, Static, Literal, HasDefault
Class BBoxAPI.Startup: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class BBoxAPI.Virtual_Device_Interface: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[BBoxAPI.Virtual_Device] virtual_device_list : Public
  Methods:
    register_physical_devices_control_interface(Queryer): PrivateScope, Public, HideBySig
    ReflectFunction(String, Object[], String): PrivateScope, Public, HideBySig
    PhysicalDevice_Reflection(String, Object[], String): PrivateScope, Public, HideBySig
    Virtual_getFrequencyInfo(Double, String): PrivateScope, Public, HideBySig
    Virtual_setoperatingfreq(Double, String): PrivateScope, Public, HideBySig
    Virtual_getRFInfo(Double, String): PrivateScope, Public, HideBySig
    intersect_frequency_list(List`1, String): PrivateScope, Public, HideBySig
    check_config_exits(String): PrivateScope, Public, HideBySig
    check_virtual_sn_exists(String): PrivateScope, Public, HideBySig
    get_sn_list_from_config(String): PrivateScope, Public, HideBySig
    get_total_layer_num_from_device(String): PrivateScope, Public, HideBySig
    get_layer_members_from_device(Int32, String): PrivateScope, Public, HideBySig
    Init(String): PrivateScope, Public, HideBySig
    read_configuration_files(): PrivateScope, Public, HideBySig
    update_frequency_list(List`1, String): PrivateScope, Public, HideBySig
    read_virtual_device(String): PrivateScope, Public, HideBySig
    Hornbill_Device_Template_File_Test(String): PrivateScope, Public, HideBySig
    Hornbill_three_devices_config_test(String): PrivateScope, Public, HideBySig
    Hornbill_one_devices_config_test(String): PrivateScope, Public, HideBySig
    Hornbill_one_devices_lite_config_test(String): PrivateScope, Public, HideBySig
    Hornbill_one_lite_device_four_one_devices_config_test(String): PrivateScope, Public, HideBySig
    Hornbill_one_Oriole28A_device_nine_Oriole28A_devices_config_test(String): PrivateScope, Public, HideBySig
    Hornbill_Device_Init(String): PrivateScope, Public, HideBySig
Class BBoxAPI.Virtual_Device: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, BBoxAPI.DEV_TYPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BBoxAPI.Virtual_Device_Configuration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[BBoxAPI.Device_Node] device_list : Public
    Boolean is_config_loaded : Public
    BBoxAPI.Virtual_Device_Configuration config : Public
    Double operating_freq : Public
    System.Collections.Generic.List`1[System.Double] freq_list : Public
    System.Collections.Generic.List`1[BBoxAPI.RF_Information] RF_info_list : Public
    Int32 total_device_num : Public
    Int32 total_layer_num : Public
    Int32 total_channel_num : Public
    System.String root_sn : Public
    BBoxAPI.Device_Node root : Public
    BBoxAPI.OPMODE IC_mode : Public
    Boolean is_RF_information_correct : Public
    BBoxAPI.Virtual_Device_settings device_settings : Public
    Virtual_AAKitSupporter supporter : Public
  Methods:
    search_device_list(String): PrivateScope, Public, HideBySig
    create_connection(Device_Node, Device_Connection, Device_Information, Int32): PrivateScope, Public, HideBySig
    update_connection(Device_Connection, Device_Node): PrivateScope, Public, HideBySig
    reset_device(): PrivateScope, Public, HideBySig
    save_virtual_device_config_file(): PrivateScope, Public, HideBySig
    update_frequency_list(List`1): PrivateScope, Public, HideBySig
    reset_RF_Info_list(): PrivateScope, Public, HideBySig
    update_RF_Info(RF_Information): PrivateScope, Public, HideBySig
    Virtual_switchChannelPower(Int32, Int32): PrivateScope, Public, HideBySig
    Hornbill_generate_device_phase_settings(OPMODE, Int32): PrivateScope, Public, HideBySig
    Hornbill_generate_device_gain_settings(OPMODE, Double): PrivateScope, Public, HideBySig
    Hornbill_generate_channel_settings(OPMODE, Int32, Double, Int32): PrivateScope, Public, HideBySig
    Hornbill_check_specific_devices_gain_boundary(String, Double, Double): PrivateScope, Public, HideBySig
    update_gain_settings(OPMODE, Double): PrivateScope, Public, HideBySig
    apply_device_settings(OPMODE): PrivateScope, Public, HideBySig
    Hornbill_BeamAngle_to_PhaseMatrix(OPMODE, Double, Double, Double): PrivateScope, Public, HideBySig
    Virtual_setChannelGainPhase(OPMODE, Int32, Double, Int32): PrivateScope, Public, HideBySig
    Virtual_setBeamAngle(OPMODE, Double, Double, Double): PrivateScope, Public, HideBySig
    Virtual_setDeviceControl(OPMODE): PrivateScope, Public, HideBySig
    check_virtual_device_gain_boundary(OPMODE, Double): PrivateScope, Public, HideBySig
    calculate_total_cable_gain_loss(Device_Node, Device_Connection): PrivateScope, Public, HideBySig
    Virtual_LoadAAKitInfo(): PrivateScope, Public, HideBySig
    Virtual_getAAKitList(): PrivateScope, Public, HideBySig
    Virtual_selectAAKIT(String): PrivateScope, Public, HideBySig
    Virtual_getAAKitInfo(String): PrivateScope, Public, HideBySig
    Virtual_setAAKitInfo(VIRTUAL_AAKIT_INFO): PrivateScope, Public, HideBySig
    Virtual_deleteAAKitInfo(String): PrivateScope, Public, HideBySig
    Virtual_saveAAkitFile(String): PrivateScope, Public, HideBySig
Class BBoxAPI.Device_Node: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, BBoxAPI.DEV_TYPE, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String parent_sn : Public
    System.String sn : Public
    BBoxAPI.DEV_TYPE dev_type : Public
    Int32 layer : Public
    Int32 rotation : Public
    System.Collections.Generic.List`1[BBoxAPI.Device_Connection] channel : Public
    Int32 channel_num_per_board = 4 : Public, Static, Literal, HasDefault
  Methods:
    read_channel_num(): PrivateScope, Public, HideBySig
    rotate_channel_mapping(Int32): PrivateScope, Public, HideBySig
    read_connection_list(): PrivateScope, Public, HideBySig
    search_connection(Int32): PrivateScope, Public, HideBySig
Class BBoxAPI.RF_Board_Information: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 board : Public
    Int32 channel : Public
Class BBoxAPI.Device_Connection: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 channel_number : Public
    Int32 connector_layer : Public
    BBoxAPI.RF_Board_Information HW_info : Public
    Boolean is_connected : Public
    Int32 virtual_channel_number : Public
    Double cable_gain_loss : Public
    Int32 cable_phase_offset : Public
    System.String child_sn : Public
  Methods:
    add_connection(Device_Node): PrivateScope, Public, HideBySig
    get_node(): PrivateScope, Public, HideBySig
Class BBoxAPI.DYNAMIC_RANGE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double frequency : Public
    Double TX_minimum_gain : Public
    Double TX_maximum_gain : Public
    Double RX_minimum_gain : Public
    Double RX_maximum_gain : Public
  Methods:
    get_dynamic_range(OPMODE): PrivateScope, Public, HideBySig
    get_minimum_gain(OPMODE): PrivateScope, Public, HideBySig
    get_maximum_gain(OPMODE): PrivateScope, Public, HideBySig
Class BBoxAPI.LAYER_DYNAMIC_RANGE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, BBoxAPI.DYNAMIC_RANGE, BBoxAPI.ELEMENT_ARM_DYNAMIC_RANGE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 layer : Public
    BBoxAPI.DYNAMIC_RANGE dynamic_range : Public
    BBoxAPI.ELEMENT_ARM_DYNAMIC_RANGE elementDR : Public
  Methods:
    get_elementDR(OPMODE): PrivateScope, Public, HideBySig
    get_dynamic_range(OPMODE): PrivateScope, Public, HideBySig
    get_minimum_gain(OPMODE): PrivateScope, Public, HideBySig
    get_maximum_gain(OPMODE): PrivateScope, Public, HideBySig
Class BBoxAPI.COMMON_ARM_DYNAMIC_RANGE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 board_number : Public
    Double TX_min_com_gain : Public
    Double TX_max_com_gain : Public
    Double RX_min_com_gain : Public
    Double RX_max_com_gain : Public
Class BBoxAPI.ELEMENT_ARM_DYNAMIC_RANGE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 board_number : Public
    Double TX_element_dynamic_range : Public
    Double RX_element_dynamic_range : Public
Class BBoxAPI.RF_Information: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(BBoxAPI.DYNAMIC_RANGE, System.Collections.Generic.List`1[BBoxAPI.COMMON_ARM_DYNAMIC_RANGE], System.Collections.Generic.List`1[BBoxAPI.ELEMENT_ARM_DYNAMIC_RANGE]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    BBoxAPI.DYNAMIC_RANGE dynamic_range : Public
    System.Collections.Generic.List`1[BBoxAPI.LAYER_DYNAMIC_RANGE] layer_DR_list : Public
  Methods:
    set_LayerDR_list(List`1): PrivateScope, Public, HideBySig
    get_LayerDR_list(): PrivateScope, Public, HideBySig
    get_CommonDR_list(): PrivateScope, Public, HideBySig
    get_ElementDR_list(): PrivateScope, Public, HideBySig
Class BBoxAPI.Virtual_Channel_settings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Double, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 channel_number : Public
    Double db : Public
    Int32 deg : Public
Class BBoxAPI.Virtual_Device_settings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, BBoxAPI.RF_Information): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 channel_num : Public
    System.Collections.Generic.List`1[BBoxAPI.Virtual_Channel_settings] TX_channel_list : Public
    System.Collections.Generic.List`1[BBoxAPI.Virtual_Channel_settings] RX_channel_list : Public
  Methods:
    read_settings(OPMODE, Int32): PrivateScope, Public, HideBySig
    update_settings(OPMODE, Int32, Double, Int32): PrivateScope, Public, HideBySig
    update_gain_settings(OPMODE, Int32, Double): PrivateScope, Public, HideBySig
    update_phase_settings(OPMODE, Int32, Int32): PrivateScope, Public, HideBySig
Class BBoxAPI.Virtual_Device_Configuration: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, BBoxAPI.DEV_TYPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String version : Public
    System.String sn : Public
    BBoxAPI.DEV_TYPE dev_type : Public
    System.Collections.Generic.List`1[System.Double] freq_list : Public
    System.Collections.Generic.List`1[BBoxAPI.RF_Information] RF_info_list : Public
    Int32 total_device_num : Public
    Int32 total_layer_num : Public
    Int32 total_channel_num : Public
    System.Collections.Generic.List`1[BBoxAPI.Device_Node] devices_list : Public
  Methods:
    migrate_deprecated_config(Deprecated_Virtual_Device_Configuration): PrivateScope, Public, HideBySig
Class BBoxAPI.Deprecated_Virtual_Device_Configuration: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, BBoxAPI.DEV_TYPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String sn : Public
    BBoxAPI.DEV_TYPE dev_type : Public
    System.Collections.Generic.List`1[System.Double] freq_list : Public
    BBoxAPI.DYNAMIC_RANGE operating_RF_info : Public
    Int32 total_device_num : Public
    Int32 total_layer_num : Public
    Int32 total_channel_num : Public
    System.Collections.Generic.List`1[BBoxAPI.Device_Node] devices_list : Public
  Methods:
    update_layer_DR_list(List`1): PrivateScope, Public, HideBySig
Struct BBoxAPI.BBoxControl.Control: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BBoxAPI.BBoxControl.Control INIT_VALUE = 0 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control CHANNEL_POWER = 1 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control PA_BIAS = 2 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control PA_GAIN = 3 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control VGA_BIAS = 4 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control VGA_GAIN = 5 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control PS_BIAS = 6 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control PS_PHASE = 7 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control LNA_BIAS = 8 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control LNA_GAIN = 9 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control PTAT_INTERNAL_CURRENT_STATE = 10 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control PTAT_CURRENT_GENERATOR_LEVEL_CTRL = 11 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control PTAT_TX_MEM_ACCESS_CTRL = 12 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control PTAT_RX_MEM_ACCESS_CTRL = 13 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control LOCK = 14 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control dB = 15 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control Phi = 16 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control SWB = 17 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control SWD = 18 : Public, Static, Literal, HasDefault
    BBoxAPI.BBoxControl.Control SWS = 19 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOpen 'get ' : 
  Methods:
    GetNumberOfDevices(UInt32&): PrivateScope, Public, HideBySig
    GetDeviceList(FT_DEVICE_INFO_NODE[]): PrivateScope, Public, HideBySig
    OpenByIndex(UInt32): PrivateScope, Public, HideBySig
    OpenBySerialNumber(String): PrivateScope, Public, HideBySig
    OpenByDescription(String): PrivateScope, Public, HideBySig
    OpenByLocation(UInt32): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Read(Byte[], UInt32, UInt32&): PrivateScope, Public, HideBySig
    Read(String&(Out), UInt32, UInt32&): PrivateScope, Public, HideBySig
    Write(Byte[], Int32, UInt32&): PrivateScope, Public, HideBySig
    Write(Byte[], UInt32, UInt32&): PrivateScope, Public, HideBySig
    Write(String, Int32, UInt32&): PrivateScope, Public, HideBySig
    Write(String, UInt32, UInt32&): PrivateScope, Public, HideBySig
    ResetDevice(): PrivateScope, Public, HideBySig
    Purge(UInt32): PrivateScope, Public, HideBySig
    SetEventNotification(UInt32, EventWaitHandle): PrivateScope, Public, HideBySig
    StopInTask(): PrivateScope, Public, HideBySig
    RestartInTask(): PrivateScope, Public, HideBySig
    ResetPort(): PrivateScope, Public, HideBySig
    CyclePort(): PrivateScope, Public, HideBySig
    Rescan(): PrivateScope, Public, HideBySig
    Reload(UInt16, UInt16): PrivateScope, Public, HideBySig
    SetBitMode(Byte, Byte): PrivateScope, Public, HideBySig
    GetPinStates(Byte&): PrivateScope, Public, HideBySig
    ReadEEPROMLocation(UInt32, UInt16&): PrivateScope, Public, HideBySig
    WriteEEPROMLocation(UInt32, UInt16): PrivateScope, Public, HideBySig
    EraseEEPROM(): PrivateScope, Public, HideBySig
    ReadFT232BEEPROM(FT232B_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    ReadFT2232EEPROM(FT2232_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    ReadFT232REEPROM(FT232R_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    ReadFT2232HEEPROM(FT2232H_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    ReadFT4232HEEPROM(FT4232H_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    ReadFT232HEEPROM(FT232H_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    ReadXSeriesEEPROM(FT_XSERIES_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    WriteFT232BEEPROM(FT232B_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    WriteFT2232EEPROM(FT2232_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    WriteFT232REEPROM(FT232R_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    WriteFT2232HEEPROM(FT2232H_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    WriteFT4232HEEPROM(FT4232H_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    WriteFT232HEEPROM(FT232H_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    WriteXSeriesEEPROM(FT_XSERIES_EEPROM_STRUCTURE): PrivateScope, Public, HideBySig
    EEReadUserArea(Byte[], UInt32&): PrivateScope, Public, HideBySig
    EEWriteUserArea(Byte[]): PrivateScope, Public, HideBySig
    GetDeviceType(FT_DEVICE&): PrivateScope, Public, HideBySig
    GetDeviceID(UInt32&): PrivateScope, Public, HideBySig
    GetDescription(String&(Out)): PrivateScope, Public, HideBySig
    GetSerialNumber(String&(Out)): PrivateScope, Public, HideBySig
    GetRxBytesAvailable(UInt32&): PrivateScope, Public, HideBySig
    GetTxBytesWaiting(UInt32&): PrivateScope, Public, HideBySig
    GetEventType(UInt32&): PrivateScope, Public, HideBySig
    GetModemStatus(Byte&): PrivateScope, Public, HideBySig
    GetLineStatus(Byte&): PrivateScope, Public, HideBySig
    SetBaudRate(UInt32): PrivateScope, Public, HideBySig
    SetDataCharacteristics(Byte, Byte, Byte): PrivateScope, Public, HideBySig
    SetFlowControl(UInt16, Byte, Byte): PrivateScope, Public, HideBySig
    SetRTS(Boolean): PrivateScope, Public, HideBySig
    SetDTR(Boolean): PrivateScope, Public, HideBySig
    SetTimeouts(UInt32, UInt32): PrivateScope, Public, HideBySig
    SetBreak(Boolean): PrivateScope, Public, HideBySig
    SetResetPipeRetryCount(UInt32): PrivateScope, Public, HideBySig
    GetDriverVersion(UInt32&): PrivateScope, Public, HideBySig
    GetLibraryVersion(UInt32&): PrivateScope, Public, HideBySig
    SetDeadmanTimeout(UInt32): PrivateScope, Public, HideBySig
    SetLatency(Byte): PrivateScope, Public, HideBySig
    GetLatency(Byte&): PrivateScope, Public, HideBySig
    InTransferSize(UInt32): PrivateScope, Public, HideBySig
    SetCharacters(Byte, Boolean, Byte, Boolean): PrivateScope, Public, HideBySig
    EEUserAreaSize(UInt32&): PrivateScope, Public, HideBySig
    GetCOMPort(String&(Out)): PrivateScope, Public, HideBySig
    get_IsOpen(): PrivateScope, Public, HideBySig, SpecialName
Class FTD2XX_NET.Properties.Resources: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Resources.ResourceManager ResourceManager 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    get_ResourceManager(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Culture(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Assembly, Static, HideBySig, SpecialName
Struct MPSSELight.Ft2232dPin: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MPSSELight.Ft2232dPin None = 0 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ADBUS0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ADBUS1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ADBUS2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ADBUS3 = 8 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ADBUS4 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ADBUS5 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ADBUS6 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ADBUS7 = 128 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ACBUS0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ACBUS1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ACBUS2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232dPin ACBUS3 = 8 : Public, Static, Literal, HasDefault
Class MPSSELight.FT2232D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MPSSELight.MpsseDevice
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MpsseParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct MPSSELight.Ft2232hPin: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MPSSELight.Ft2232hPin None = 0 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ADBUS0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ADBUS1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ADBUS2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ADBUS3 = 8 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ADBUS4 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ADBUS5 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ADBUS6 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ADBUS7 = 128 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ACBUS0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ACBUS1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ACBUS2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ACBUS3 = 8 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ACBUS4 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ACBUS5 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ACBUS6 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin ACBUS7 = 128 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BDBUS0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BDBUS1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BDBUS2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BDBUS3 = 8 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BDBUS4 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BDBUS5 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BDBUS6 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BDBUS7 = 128 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BCBUS0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BCBUS1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BCBUS2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BCBUS3 = 8 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BCBUS4 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BCBUS5 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BCBUS6 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.Ft2232hPin BCBUS7 = 128 : Public, Static, Literal, HasDefault
Class MPSSELight.FT2232H: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MPSSELight.MpsseDeviceExtendedA
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MpsseParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct MPSSELight.Ft232hPin: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MPSSELight.Ft232hPin None = 0 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ADBUS0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ADBUS1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ADBUS2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ADBUS3 = 8 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ADBUS4 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ADBUS5 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ADBUS6 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ADBUS7 = 128 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ACBUS0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ACBUS1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ACBUS2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ACBUS3 = 8 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ACBUS4 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ACBUS5 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ACBUS6 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.Ft232hPin ACBUS7 = 128 : Public, Static, Literal, HasDefault
Class MPSSELight.FT232H: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MPSSELight.MpsseDeviceExtendedB
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MpsseParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct MPSSELight.Ft4232hPin: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MPSSELight.Ft4232hPin None = 0 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin ADBUS0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin ADBUS1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin ADBUS2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin ADBUS3 = 8 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin ADBUS4 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin ADBUS5 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin ADBUS6 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin ADBUS7 = 128 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin BDBUS0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin BDBUS1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin BDBUS2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin BDBUS3 = 8 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin BDBUS4 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin BDBUS5 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin BDBUS6 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.Ft4232hPin BDBUS7 = 128 : Public, Static, Literal, HasDefault
Class MPSSELight.FT4232H: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MPSSELight.MpsseDeviceExtendedA
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MpsseParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MPSSELight.FtdiDevice: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    DataTransferEvent DataReadEvent : Public
    DataTransferEvent DataWriteEvent : Public
  Properties:
    UInt32 inputLen 'get ' : 
  Methods:
    read(UInt32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    write(Byte[]): PrivateScope, Public, HideBySig
    get_inputLen(): PrivateScope, Public, HideBySig, SpecialName
    clearInput(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetComPort(): PrivateScope, Public, HideBySig
Class MPSSELight.FtdiException: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MPSSELight.FtdiInventory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDevices(): PrivateScope, Public, Static, HideBySig
    DeviceListInfo(): PrivateScope, Public, Static, HideBySig
Struct MPSSELight.FtdiPin: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MPSSELight.FtdiPin None = 0 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin TCK = 1 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin SK = 1 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin TDI = 2 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin DO = 2 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin TDO = 4 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin DI = 4 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin TMS = 8 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin CS = 8 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOL0 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOL1 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOL2 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOL3 = 128 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOH0 = 1 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOH1 = 2 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOH2 = 4 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOH3 = 8 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOH4 = 16 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOH5 = 32 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOH6 = 64 : Public, Static, Literal, HasDefault
    MPSSELight.FtdiPin GPIOH7 = 128 : Public, Static, Literal, HasDefault
Struct MPSSELight.CommandCode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MPSSELight.CommandCode BytesOutOnPlusEdgeWithMsbFirst = 16 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesOutOnMinusEdgeWithMsbFirst = 17 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsOutOnPlusEdgeWithMsbFirst = 18 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsOutOnMinusEdgeWithMsbFirst = 19 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesInOnPlusEdgeWithMsbFirst = 32 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesInOnMinusEdgeWithMsbFirst = 36 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsInOnPlusEdgeWithMsbFirst = 34 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsInOnMinusEdgeWithMsbFirst = 38 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesInOnPlusOutOnMinusWithMsbFirst = 49 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesInOnMinusOutOnPlusWithMsbFirst = 52 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsInOnPlusOutOnMinusWithMsbFirst = 51 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsInOnMinusOutOnPlusWithMsbFirst = 54 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesOutOnPlusEdgeWithLsbFirst = 24 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesOutOnMinusEdgeWithLsbFirst = 25 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsOutOnPlusEdgeWithLsbFirst = 26 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsOutOnMinusEdgeWithLsbFirst = 27 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesInOnPlusEdgeWithLsbFirst = 40 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesInOnMinusEdgeWithLsbFirst = 44 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsInOnPlusEdgeWithLsbFirst = 42 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsInOnMinusEdgeWithLsbFirst = 46 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesInOnPlusOutOnMinusWithLsbFirst = 57 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BytesInOnMinusOutOnPlusWithLsbFirst = 60 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsInOnPlusOutOnMinusWithLsbFirst = 59 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode BitsInOnMinusOutOnPlusWithLsbFirst = 62 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode TmsOutOnPlusEdge = 74 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode TmsOutOnMinusEdge = 75 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode TmsInOutOnPlusEdge = 106 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode TmsInOnMinusOutOnPlusEdge = 110 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode TmsInOnPlusOutOnMinusEdge = 107 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode TmsInOutOnMinusEdge = 111 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode SetDataBitsLowByte = 128 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode SetDataBitsHighByte = 130 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ReadDataBitsLowByte = 129 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ReadDataBitsHighByte = 131 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ConnectTdiTdoLoopback = 132 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode DisconnectTdiTdoLoopback = 133 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode SetClkDivisor = 134 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ReadShortAddress = 144 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ReadExtendedAddress = 145 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode WriteShortAddress = 146 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode WriteExtendedAddress = 147 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode SendImmediate = 135 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode WaitOnIoHigh = 136 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode WaitOnIoLow = 137 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode DisableClkDivideBy5 = 138 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode EnableClkDivideBy5 = 139 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode Enable3PhaseDataClocking = 140 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode Disable3PhaseDataClocking = 141 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ClockForNbitswithNoDataTransfer = 142 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ClockForNx8bitswithNoDataTransfer = 143 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ClkContinuouslyAndWaitOnIoHigh = 148 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ClkContinuouslyAndWaitOnIoLow = 149 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode TurnOnAdaptiveClocking = 150 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode TurnOffAdaptiveClocking = 151 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ClockForNx8BitsWithNoDataTransferOrUntilGPIOL1isHigh = 156 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode ClockForNx8BitsWithNoDataTransferOrUntilGPIOL1isLow = 157 : Public, Static, Literal, HasDefault
    MPSSELight.CommandCode SetIoToOnlyDriveOn0andTristateOn1 = 158 : Public, Static, Literal, HasDefault
Struct MPSSELight.Bit: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MPSSELight.Bit One = 1 : Public, Static, Literal, HasDefault
    MPSSELight.Bit Zero = 0 : Public, Static, Literal, HasDefault
Class MPSSELight.MpsseCommand: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    BytesOutOnPlusEdgeWithMsbFirst(Byte[]): PrivateScope, Public, Static, HideBySig
    BytesOutOnMinusEdgeWithMsbFirst(Byte[]): PrivateScope, Public, Static, HideBySig
    BitsOutOnPlusEdgeWithMsbFirst(Byte, Byte): PrivateScope, Public, Static, HideBySig
    BitsOutOnMinusEdgeWithMsbFirst(Byte, Byte): PrivateScope, Public, Static, HideBySig
    BytesInOnPlusEdgeWithMsbFirst(UInt32): PrivateScope, Public, Static, HideBySig
    BytesInOnMinusEdgeWithMsbFirst(UInt32): PrivateScope, Public, Static, HideBySig
    BitsInOnPlusEdgeWithMsbFirst(Byte): PrivateScope, Public, Static, HideBySig
    BitsInOnMinusEdgeWithMsbFirst(Byte): PrivateScope, Public, Static, HideBySig
    BytesInOnPlusOutOnMinusWithMsbFirst(Byte[]): PrivateScope, Public, Static, HideBySig
    BytesInOnMinusOutOnPlusWithMsbFirst(Byte[]): PrivateScope, Public, Static, HideBySig
    BitsInOnPlusOutOnMinusWithMsbFirst(Byte, Byte): PrivateScope, Public, Static, HideBySig
    BitsInOnMinusOutOnPlusWithMsbFirst(Byte, Byte): PrivateScope, Public, Static, HideBySig
    BytesOutOnPlusEdgeWithLsbFirst(Byte[]): PrivateScope, Public, Static, HideBySig
    BytesOutOnMinusEdgeWithLsbFirst(Byte[]): PrivateScope, Public, Static, HideBySig
    BitsOutOnPlusEdgeWithLsbFirst(Byte, Byte): PrivateScope, Public, Static, HideBySig
    BitsOutOnMinusEdgeWithLsbFirst(Byte, Byte): PrivateScope, Public, Static, HideBySig
    BytesInOnPlusEdgeWithLsbFirst(UInt32): PrivateScope, Public, Static, HideBySig
    BytesInOnMinusEdgeWithLsbFirst(UInt32): PrivateScope, Public, Static, HideBySig
    BitsInOnPlusEdgeWithLsbFirst(Byte): PrivateScope, Public, Static, HideBySig
    BitsInOnMinusEdgeWithLsbFirst(Byte): PrivateScope, Public, Static, HideBySig
    BytesInOnPlusOutOnMinusWithLsbFirst(Byte[]): PrivateScope, Public, Static, HideBySig
    BytesInOnMinusOutOnPlusWithLsbFirst(Byte[]): PrivateScope, Public, Static, HideBySig
    BitsInOnPlusOutOnMinusWithLsbFirst(Byte, Byte): PrivateScope, Public, Static, HideBySig
    BitsInOnMinusOutOnPlusWithLsbFirst(Byte, Byte): PrivateScope, Public, Static, HideBySig
    TmsOutOnPlusEdge(Byte, Byte): PrivateScope, Public, Static, HideBySig
    TmsOutOnMinusEdge(Byte, Byte): PrivateScope, Public, Static, HideBySig
    TmsInOutOnPlusEdge(Byte, Byte): PrivateScope, Public, Static, HideBySig
    TmsInOnMinusOutOnPlusEdge(Byte, Byte): PrivateScope, Public, Static, HideBySig
    TmsInOnPlusOutOnMinusEdge(Byte, Byte): PrivateScope, Public, Static, HideBySig
    TmsInOutOnMinusEdge(Byte, Byte): PrivateScope, Public, Static, HideBySig
    SetDataBitsLowByte(FtdiPin, FtdiPin): PrivateScope, Public, Static, HideBySig
    SetDataBitsHighByte(FtdiPin, FtdiPin): PrivateScope, Public, Static, HideBySig
    ReadDataBitsLowByte(): PrivateScope, Public, Static, HideBySig
    ReadDataBitsHighByte(): PrivateScope, Public, Static, HideBySig
    ConnectTdiTdoLoopback(): PrivateScope, Public, Static, HideBySig
    DisconnectTdiTdoLoopback(): PrivateScope, Public, Static, HideBySig
    SetClkDivisor(UInt16): PrivateScope, Public, Static, HideBySig
    ReadShortAddress(Byte): PrivateScope, Public, Static, HideBySig
    ReadExtendedAddress(UInt16): PrivateScope, Public, Static, HideBySig
    WriteShortAddress(Byte, Byte): PrivateScope, Public, Static, HideBySig
    WriteExtendedAddress(UInt16, Byte): PrivateScope, Public, Static, HideBySig
    SendImmediate(): PrivateScope, Public, Static, HideBySig
    WaitOnIoHigh(): PrivateScope, Public, Static, HideBySig
    WaitOnIoLow(): PrivateScope, Public, Static, HideBySig
    DisableClkDivideBy5(): PrivateScope, Public, Static, HideBySig
    EnableClkDivideBy5(): PrivateScope, Public, Static, HideBySig
    Enable3PhaseDataClocking(): PrivateScope, Public, Static, HideBySig
    Disable3PhaseDataClocking(): PrivateScope, Public, Static, HideBySig
    ClockForNbitswithNoDataTransfer(Byte): PrivateScope, Public, Static, HideBySig
    ClockForNx8bitswithNoDataTransfer(UInt32): PrivateScope, Public, Static, HideBySig
    ClkContinuouslyAndWaitOnIoHigh(): PrivateScope, Public, Static, HideBySig
    ClkContinuouslyAndWaitOnIoLow(): PrivateScope, Public, Static, HideBySig
    TurnOnAdaptiveClocking(): PrivateScope, Public, Static, HideBySig
    TurnOffAdaptiveClocking(): PrivateScope, Public, Static, HideBySig
    ClockForNx8BitsWithNoDataTransferOrUntilGPIOL1isHigh(UInt32): PrivateScope, Public, Static, HideBySig
    ClockForNx8BitsWithNoDataTransferOrUntilGPIOL1isLow(UInt32): PrivateScope, Public, Static, HideBySig
    SetIoToOnlyDriveOn0andTristateOn1(FtdiPin, FtdiPin): PrivateScope, Public, Static, HideBySig
Class MPSSELight.MpsseDevice: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :MPSSELight.FtdiDevice
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MpsseParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Loopback 'get set' : 
    UInt16 ClkDivisor 'get set' : 
    Double ClockFrequency 'get ' : 
  Methods:
    BytesOutOnPlusEdgeWithMsbFirst(Byte[]): PrivateScope, Public, HideBySig
    BytesOutOnMinusEdgeWithMsbFirst(Byte[]): PrivateScope, Public, HideBySig
    BitsOutOnPlusEdgeWithMsbFirst(Byte, Byte): PrivateScope, Public, HideBySig
    BitsOutOnMinusEdgeWithMsbFirst(Byte, Byte): PrivateScope, Public, HideBySig
    BytesInOnPlusEdgeWithMsbFirst(UInt32): PrivateScope, Public, HideBySig
    BytesInOnMinusEdgeWithMsbFirst(UInt32): PrivateScope, Public, HideBySig
    BitsInOnPlusEdgeWithMsbFirst(Byte): PrivateScope, Public, HideBySig
    BitsInOnMinusEdgeWithMsbFirst(Byte): PrivateScope, Public, HideBySig
    BytesInOnPlusOutOnMinusWithMsbFirst(Byte[]): PrivateScope, Public, HideBySig
    BytesInOnMinusOutOnPlusWithMsbFirst(Byte[]): PrivateScope, Public, HideBySig
    BitsInOnPlusOutOnMinusWithMsbFirst(Byte, Byte): PrivateScope, Public, HideBySig
    BitsInOnMinusOutOnPlusWithMsbFirst(Byte, Byte): PrivateScope, Public, HideBySig
    BytesOutOnPlusEdgeWithLsbFirst(Byte[]): PrivateScope, Public, HideBySig
    BytesOutOnMinusEdgeWithLsbFirst(Byte[]): PrivateScope, Public, HideBySig
    BitsOutOnPlusEdgeWithLsbFirst(Byte, Byte): PrivateScope, Public, HideBySig
    BitsOutOnMinusEdgeWithLsbFirst(Byte, Byte): PrivateScope, Public, HideBySig
    BytesInOnPlusEdgeWithLsbFirst(UInt32): PrivateScope, Public, HideBySig
    BytesInOnMinusEdgeWithLsbFirst(UInt32): PrivateScope, Public, HideBySig
    BitsInOnPlusEdgeWithLsbFirst(Byte): PrivateScope, Public, HideBySig
    BitsInOnMinusEdgeWithLsbFirst(Byte): PrivateScope, Public, HideBySig
    BytesInOnPlusOutOnMinusWithLsbFirst(Byte[]): PrivateScope, Public, HideBySig
    BytesInOnMinusOutOnPlusWithLsbFirst(Byte[]): PrivateScope, Public, HideBySig
    BitsInOnPlusOutOnMinusWithLsbFirst(Byte, Byte): PrivateScope, Public, HideBySig
    BitsInOnMinusOutOnPlusWithLsbFirst(Byte, Byte): PrivateScope, Public, HideBySig
    TmsOutOnPlusEdge(Byte, Byte): PrivateScope, Public, HideBySig
    TmsOutOnMinusEdge(Byte, Byte): PrivateScope, Public, HideBySig
    TmsInOutOnPlusEdge(Byte, Byte): PrivateScope, Public, HideBySig
    TmsInOnMinusOutOnPlusEdge(Byte, Byte): PrivateScope, Public, HideBySig
    TmsInOnPlusOutOnMinusEdge(Byte, Byte): PrivateScope, Public, HideBySig
    TmsInOutOnMinusEdge(Byte, Byte): PrivateScope, Public, HideBySig
    SetDataBitsLowByte(FtdiPin, FtdiPin): PrivateScope, Public, HideBySig
    SetDataBitsHighByte(FtdiPin, FtdiPin): PrivateScope, Public, HideBySig
    ReadDataBitsLowByte(): PrivateScope, Public, HideBySig
    ReadDataBitsHighByte(): PrivateScope, Public, HideBySig
    get_Loopback(): PrivateScope, Public, HideBySig, SpecialName
    set_Loopback(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ClkDivisor(): PrivateScope, Public, HideBySig, SpecialName
    set_ClkDivisor(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_ClockFrequency(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReadShortAddress(Byte): PrivateScope, Public, HideBySig
    ReadExtendedAddress(UInt16): PrivateScope, Public, HideBySig
    WriteShortAddress(Byte, Byte): PrivateScope, Public, HideBySig
    WriteExtendedAddress(UInt16, Byte): PrivateScope, Public, HideBySig
    SendImmediate(): PrivateScope, Public, HideBySig
    WaitOnIoHigh(): PrivateScope, Public, HideBySig
    WaitOnIoLow(): PrivateScope, Public, HideBySig
Class MPSSELight.ArrayExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    StartingIndex(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
Class MPSSELight.MpsseDeviceExtendedA: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :MPSSELight.MpsseDevice
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MpsseParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ClkDivideBy5 'get set' : 
    Boolean ThreePhaseDataClocking 'get set' : 
    Boolean AdaptiveClocking 'get set' : 
    Double ClockFrequency 'get ' : 
  Methods:
    get_ClkDivideBy5(): PrivateScope, Public, HideBySig, SpecialName
    set_ClkDivideBy5(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ThreePhaseDataClocking(): PrivateScope, Public, HideBySig, SpecialName
    set_ThreePhaseDataClocking(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AdaptiveClocking(): PrivateScope, Public, HideBySig, SpecialName
    set_AdaptiveClocking(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ClockForNbitswithNoDataTransfer(Byte): PrivateScope, Public, HideBySig
    ClockForNx8bitswithNoDataTransfer(UInt32): PrivateScope, Public, HideBySig
    ClkContinuouslyAndWaitOnIoHigh(): PrivateScope, Public, HideBySig
    ClkContinuouslyAndWaitOnIoLow(): PrivateScope, Public, HideBySig
    ClockForNx8BitsWithNoDataTransferOrUntilGPIOL1isHigh(UInt32): PrivateScope, Public, HideBySig
    ClockForNx8BitsWithNoDataTransferOrUntilGPIOL1isLow(UInt32): PrivateScope, Public, HideBySig
    get_ClockFrequency(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MPSSELight.MpsseDeviceExtendedB: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :MPSSELight.MpsseDeviceExtendedA
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MpsseParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetIoToOnlyDriveOn0andTristateOn1(FtdiPin, FtdiPin): PrivateScope, Public, HideBySig
Class MPSSELight.SpiDevice: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MPSSELight.MpsseDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MPSSELight.MpsseDevice, SpiParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MPSSELight.Bit CS 'get set' : 
    Boolean LoopbackEnabled 'get set' : 
  Methods:
    Dispose(): PrivateScope, Public, HideBySig
    write(Byte[]): PrivateScope, Public, HideBySig
    readWrite(Byte[]): PrivateScope, Public, HideBySig
    writeThenRead(Byte[], UInt32): PrivateScope, Public, HideBySig
    get_CS(): PrivateScope, Public, HideBySig, SpecialName
    set_CS(Bit): PrivateScope, Public, HideBySig, SpecialName
    get_LoopbackEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_LoopbackEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.CodeAnalysis.EmbeddedAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Runtime.CompilerServices.IsReadOnlyAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Runtime.CompilerServices.NullableAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] NullableFlags : Public, InitOnly
Class System.Runtime.CompilerServices.NullableContextAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte Flag : Public, InitOnly
Class System.Diagnostics.CodeAnalysis.NotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnValue 'get ' : 
  Methods:
    get_ReturnValue(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.CodeAnalysis.MaybeNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.AllowNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ParameterValue 'get ' : 
  Methods:
    get_ParameterValue(): PrivateScope, Public, HideBySig, SpecialName
Struct Newtonsoft.Json.ConstructorHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.ConstructorHandling Default = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ConstructorHandling AllowNonPublicDefaultConstructor = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.DateFormatHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.DateFormatHandling IsoDateFormat = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateFormatHandling MicrosoftDateFormat = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.DateParseHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.DateParseHandling None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateParseHandling DateTime = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateParseHandling DateTimeOffset = 2 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.DateTimeZoneHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.DateTimeZoneHandling Local = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateTimeZoneHandling Utc = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateTimeZoneHandling Unspecified = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DateTimeZoneHandling RoundtripKind = 3 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.DefaultJsonNameTable: AutoLayout, AnsiClass, Class, Public
  :Newtonsoft.Json.JsonNameTable
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Get(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Add(String): PrivateScope, Public, HideBySig
Struct Newtonsoft.Json.DefaultValueHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.DefaultValueHandling Include = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DefaultValueHandling Ignore = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DefaultValueHandling Populate = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.DefaultValueHandling IgnoreAndPopulate = 3 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.FloatFormatHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.FloatFormatHandling String = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.FloatFormatHandling Symbol = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.FloatFormatHandling DefaultValue = 2 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.FloatParseHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.FloatParseHandling Double = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.FloatParseHandling Decimal = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.Formatting: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Formatting None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Formatting Indented = 1 : Public, Static, Literal, HasDefault
Interface Newtonsoft.Json.IArrayPool`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Methods:
    Rent(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Return(T[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Newtonsoft.Json.IJsonLineInfo: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Int32 LineNumber 'get ' : 
    Int32 LinePosition 'get ' : 
  Methods:
    HasLineInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_LineNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LinePosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.JsonArrayAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Newtonsoft.Json.JsonContainerAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean AllowNullItems 'get set' : 
  Methods:
    get_AllowNullItems(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowNullItems(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.JsonConstructorAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.JsonContainerAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Attribute
  Fields:
    System.Nullable`1[System.Boolean] _isReference : Assembly
    System.Nullable`1[System.Boolean] _itemIsReference : Assembly
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] _itemReferenceLoopHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] _itemTypeNameHandling : Assembly
  Properties:
    System.String Id 'get set' : 
    System.String Title 'get set' : 
    System.String Description 'get set' : 
    System.Type ItemConverterType 'get set' : 
    System.Object[] ItemConverterParameters 'get set' : 
    System.Type NamingStrategyType 'get set' : 
    System.Object[] NamingStrategyParameters 'get set' : 
    Newtonsoft.Json.Serialization.NamingStrategy NamingStrategyInstance 'get set' : 
    Boolean IsReference 'get set' : 
    Boolean ItemIsReference 'get set' : 
    Newtonsoft.Json.ReferenceLoopHandling ItemReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.TypeNameHandling ItemTypeNameHandling 'get set' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    set_Id(String): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_ItemConverterType(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemConverterType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_ItemConverterParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemConverterParameters(Object[]): PrivateScope, Public, HideBySig, SpecialName
    get_NamingStrategyType(): PrivateScope, Public, HideBySig, SpecialName
    set_NamingStrategyType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_NamingStrategyParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_NamingStrategyParameters(Object[]): PrivateScope, Public, HideBySig, SpecialName
    get_NamingStrategyInstance(): PrivateScope, Assembly, HideBySig, SpecialName
    set_NamingStrategyInstance(NamingStrategy): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ItemIsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemIsReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ItemReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ItemTypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemTypeNameHandling(TypeNameHandling): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.JsonConvert: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String True : Public, Static, InitOnly
    System.String False : Public, Static, InitOnly
    System.String Null : Public, Static, InitOnly
    System.String Undefined : Public, Static, InitOnly
    System.String PositiveInfinity : Public, Static, InitOnly
    System.String NegativeInfinity : Public, Static, InitOnly
    System.String NaN : Public, Static, InitOnly
  Properties:
    System.Func`1[Newtonsoft.Json.JsonSerializerSettings] DefaultSettings 'get set' : 
  Methods:
    get_DefaultSettings(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DefaultSettings(Func`1): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(DateTime): PrivateScope, Public, Static, HideBySig
    ToString(DateTime, DateFormatHandling, DateTimeZoneHandling): PrivateScope, Public, Static, HideBySig
    ToString(DateTimeOffset): PrivateScope, Public, Static, HideBySig
    ToString(DateTimeOffset, DateFormatHandling): PrivateScope, Public, Static, HideBySig
    ToString(Boolean): PrivateScope, Public, Static, HideBySig
    ToString(Char): PrivateScope, Public, Static, HideBySig
    ToString(Enum): PrivateScope, Public, Static, HideBySig
    ToString(Int32): PrivateScope, Public, Static, HideBySig
    ToString(Int16): PrivateScope, Public, Static, HideBySig
    ToString(UInt16): PrivateScope, Public, Static, HideBySig
    ToString(UInt32): PrivateScope, Public, Static, HideBySig
    ToString(Int64): PrivateScope, Public, Static, HideBySig
    ToString(UInt64): PrivateScope, Public, Static, HideBySig
    ToString(Single): PrivateScope, Public, Static, HideBySig
    ToString(Single, FloatFormatHandling, Char, Boolean): PrivateScope, Assembly, Static, HideBySig
    ToString(Double): PrivateScope, Public, Static, HideBySig
    ToString(Double, FloatFormatHandling, Char, Boolean): PrivateScope, Assembly, Static, HideBySig
    ToString(Byte): PrivateScope, Public, Static, HideBySig
    ToString(SByte): PrivateScope, Public, Static, HideBySig
    ToString(Decimal): PrivateScope, Public, Static, HideBySig
    ToString(Guid): PrivateScope, Public, Static, HideBySig
    ToString(Guid, Char): PrivateScope, Assembly, Static, HideBySig
    ToString(TimeSpan): PrivateScope, Public, Static, HideBySig
    ToString(TimeSpan, Char): PrivateScope, Assembly, Static, HideBySig
    ToString(Uri): PrivateScope, Public, Static, HideBySig
    ToString(Uri, Char): PrivateScope, Assembly, Static, HideBySig
    ToString(String): PrivateScope, Public, Static, HideBySig
    ToString(String, Char): PrivateScope, Public, Static, HideBySig
    ToString(String, Char, StringEscapeHandling): PrivateScope, Public, Static, HideBySig
    ToString(Object): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, Formatting): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, JsonConverter[]): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, Formatting, JsonConverter[]): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, Type, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, Formatting, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    SerializeObject(Object, Type, Formatting, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, Type): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String): PrivateScope, Public, Static, HideBySig
    DeserializeAnonymousType(String, T): PrivateScope, Public, Static, HideBySig
    DeserializeAnonymousType(String, T, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, JsonConverter[]): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, Type, JsonConverter[]): PrivateScope, Public, Static, HideBySig
    DeserializeObject(String, Type, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    PopulateObject(String, Object): PrivateScope, Public, Static, HideBySig
    PopulateObject(String, Object, JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    SerializeXmlNode(XmlNode): PrivateScope, Public, Static, HideBySig
    SerializeXmlNode(XmlNode, Formatting): PrivateScope, Public, Static, HideBySig
    SerializeXmlNode(XmlNode, Formatting, Boolean): PrivateScope, Public, Static, HideBySig
    DeserializeXmlNode(String): PrivateScope, Public, Static, HideBySig
    DeserializeXmlNode(String, String): PrivateScope, Public, Static, HideBySig
    DeserializeXmlNode(String, String, Boolean): PrivateScope, Public, Static, HideBySig
    DeserializeXmlNode(String, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    SerializeXNode(XObject): PrivateScope, Public, Static, HideBySig
    SerializeXNode(XObject, Formatting): PrivateScope, Public, Static, HideBySig
    SerializeXNode(XObject, Formatting, Boolean): PrivateScope, Public, Static, HideBySig
    DeserializeXNode(String): PrivateScope, Public, Static, HideBySig
    DeserializeXNode(String, String): PrivateScope, Public, Static, HideBySig
    DeserializeXNode(String, String, Boolean): PrivateScope, Public, Static, HideBySig
    DeserializeXNode(String, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.JsonConverter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.JsonConverter`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T
  :Newtonsoft.Json.JsonConverter
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Final, Virtual, HideBySig
    WriteJson(JsonWriter, T, JsonSerializer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Final, Virtual, HideBySig
    ReadJson(JsonReader, Type, T, Boolean, JsonSerializer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CanConvert(Type): PrivateScope, Public, Final, Virtual, HideBySig
Class Newtonsoft.Json.JsonConverterAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type ConverterType 'get ' : 
    System.Object[] ConverterParameters 'get ' : 
  Methods:
    get_ConverterType(): PrivateScope, Public, HideBySig, SpecialName
    get_ConverterParameters(): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.JsonConverterCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[Newtonsoft.Json.JsonConverter]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.JsonDictionaryAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Newtonsoft.Json.JsonContainerAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.JsonException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IJsonLineInfo, String, String): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.JsonExtensionDataAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean WriteData 'get set' : 
    Boolean ReadData 'get set' : 
  Methods:
    get_WriteData(): PrivateScope, Public, HideBySig, SpecialName
    set_WriteData(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReadData(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadData(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.JsonIgnoreAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.JsonNameTable: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    Get(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Newtonsoft.Json.JsonObjectAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Newtonsoft.Json.JsonContainerAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.MemberSerialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[Newtonsoft.Json.MissingMemberHandling] _missingMemberHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.Required] _itemRequired : Assembly
    System.Nullable`1[Newtonsoft.Json.NullValueHandling] _itemNullValueHandling : Assembly
  Properties:
    Newtonsoft.Json.MemberSerialization MemberSerialization 'get set' : 
    Newtonsoft.Json.MissingMemberHandling MissingMemberHandling 'get set' : 
    Newtonsoft.Json.NullValueHandling ItemNullValueHandling 'get set' : 
    Newtonsoft.Json.Required ItemRequired 'get set' : 
  Methods:
    get_MemberSerialization(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberSerialization(MemberSerialization): PrivateScope, Public, HideBySig, SpecialName
    get_MissingMemberHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_MissingMemberHandling(MissingMemberHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ItemNullValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemNullValueHandling(NullValueHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ItemRequired(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemRequired(Required): PrivateScope, Public, HideBySig, SpecialName
Struct Newtonsoft.Json.JsonContainerType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.JsonContainerType None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonContainerType Object = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonContainerType Array = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonContainerType Constructor = 3 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.JsonPosition: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Newtonsoft.Json.JsonContainerType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Newtonsoft.Json.JsonContainerType Type : Assembly
    Int32 Position : Assembly
    System.String PropertyName : Assembly
    Boolean HasIndex : Assembly
  Methods:
    CalculateLength(): PrivateScope, Assembly, HideBySig
    WriteTo(StringBuilder, StringWriter&, Char[]&): PrivateScope, Assembly, HideBySig
    TypeHasIndex(JsonContainerType): PrivateScope, Assembly, Static, HideBySig
    BuildPath(List`1, Nullable`1): PrivateScope, Assembly, Static, HideBySig
    FormatMessage(IJsonLineInfo, String, String): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.JsonPropertyAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[Newtonsoft.Json.NullValueHandling] _nullValueHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.DefaultValueHandling] _defaultValueHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] _referenceLoopHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.ObjectCreationHandling] _objectCreationHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] _typeNameHandling : Assembly
    System.Nullable`1[System.Boolean] _isReference : Assembly
    System.Nullable`1[System.Int32] _order : Assembly
    System.Nullable`1[Newtonsoft.Json.Required] _required : Assembly
    System.Nullable`1[System.Boolean] _itemIsReference : Assembly
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] _itemReferenceLoopHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] _itemTypeNameHandling : Assembly
  Properties:
    System.Type ItemConverterType 'get set' : 
    System.Object[] ItemConverterParameters 'get set' : 
    System.Type NamingStrategyType 'get set' : 
    System.Object[] NamingStrategyParameters 'get set' : 
    Newtonsoft.Json.NullValueHandling NullValueHandling 'get set' : 
    Newtonsoft.Json.DefaultValueHandling DefaultValueHandling 'get set' : 
    Newtonsoft.Json.ReferenceLoopHandling ReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.ObjectCreationHandling ObjectCreationHandling 'get set' : 
    Newtonsoft.Json.TypeNameHandling TypeNameHandling 'get set' : 
    Boolean IsReference 'get set' : 
    Int32 Order 'get set' : 
    Newtonsoft.Json.Required Required 'get set' : 
    System.String PropertyName 'get set' : 
    Newtonsoft.Json.ReferenceLoopHandling ItemReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.TypeNameHandling ItemTypeNameHandling 'get set' : 
    Boolean ItemIsReference 'get set' : 
  Methods:
    get_ItemConverterType(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemConverterType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_ItemConverterParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemConverterParameters(Object[]): PrivateScope, Public, HideBySig, SpecialName
    get_NamingStrategyType(): PrivateScope, Public, HideBySig, SpecialName
    set_NamingStrategyType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_NamingStrategyParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_NamingStrategyParameters(Object[]): PrivateScope, Public, HideBySig, SpecialName
    get_NullValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_NullValueHandling(NullValueHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValueHandling(DefaultValueHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectCreationHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectCreationHandling(ObjectCreationHandling): PrivateScope, Public, HideBySig, SpecialName
    get_TypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeNameHandling(TypeNameHandling): PrivateScope, Public, HideBySig, SpecialName
    get_IsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    set_Order(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Required(): PrivateScope, Public, HideBySig, SpecialName
    set_Required(Required): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyName(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ItemReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ItemTypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemTypeNameHandling(TypeNameHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ItemIsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemIsReference(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.JsonReader: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Fields:
    Char _quoteChar : Assembly
    State _currentState : Assembly
    Newtonsoft.Json.DateParseHandling _dateParseHandling : Assembly
    Newtonsoft.Json.FloatParseHandling _floatParseHandling : Assembly
  Properties:
    Boolean CloseInput 'get set' : 
    Boolean SupportMultipleContent 'get set' : 
    Char QuoteChar 'get set' : 
    Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling 'get set' : 
    Newtonsoft.Json.DateParseHandling DateParseHandling 'get set' : 
    Newtonsoft.Json.FloatParseHandling FloatParseHandling 'get set' : 
    System.String DateFormatString 'get set' : 
    System.Nullable`1[System.Int32] MaxDepth 'get set' : 
    Newtonsoft.Json.JsonToken TokenType 'get ' : 
    System.Object Value 'get ' : 
    System.Type ValueType 'get ' : 
    Int32 Depth 'get ' : 
    System.String Path 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    ReadAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SkipAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReaderReadAndAssertAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    ReadAsBooleanAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAsBytesAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadArrayIntoByteArrayAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    ReadAsDateTimeAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAsDateTimeOffsetAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAsDecimalAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAsDoubleAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAsInt32Async(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAsStringAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAndMoveToContentAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    MoveToContentAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    get_CloseInput(): PrivateScope, Public, HideBySig, SpecialName
    set_CloseInput(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SupportMultipleContent(): PrivateScope, Public, HideBySig, SpecialName
    set_SupportMultipleContent(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_QuoteChar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateTimeZoneHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeZoneHandling(DateTimeZoneHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DateParseHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateParseHandling(DateParseHandling): PrivateScope, Public, HideBySig, SpecialName
    get_FloatParseHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_FloatParseHandling(FloatParseHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DateFormatString(): PrivateScope, Public, HideBySig, SpecialName
    set_DateFormatString(String): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxDepth(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_TokenType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Depth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Path(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    GetPosition(Int32): PrivateScope, Assembly, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadAsInt32(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadInt32String(String): PrivateScope, Assembly, HideBySig
    ReadAsString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAsBytes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadArrayIntoByteArray(): PrivateScope, Assembly, HideBySig
    ReadAsDouble(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadDoubleString(String): PrivateScope, Assembly, HideBySig
    ReadAsBoolean(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadBooleanString(String): PrivateScope, Assembly, HideBySig
    ReadAsDecimal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadDecimalString(String): PrivateScope, Assembly, HideBySig
    ReadAsDateTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadDateTimeString(String): PrivateScope, Assembly, HideBySig
    ReadAsDateTimeOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadDateTimeOffsetString(String): PrivateScope, Assembly, HideBySig
    ReaderReadAndAssert(): PrivateScope, Assembly, HideBySig
    CreateUnexpectedEndException(): PrivateScope, Assembly, HideBySig
    ReadIntoWrappedTypeObject(): PrivateScope, Assembly, HideBySig
    Skip(): PrivateScope, Public, HideBySig
    SetPostValueState(Boolean): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAndAssert(): PrivateScope, Assembly, HideBySig
    ReadForTypeAndAssert(JsonContract, Boolean): PrivateScope, Assembly, HideBySig
    ReadForType(JsonContract, Boolean): PrivateScope, Assembly, HideBySig
    ReadAndMoveToContent(): PrivateScope, Assembly, HideBySig
    MoveToContent(): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.JsonReaderException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Newtonsoft.Json.JsonException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32, Int32, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LineNumber 'get ' : 
    Int32 LinePosition 'get ' : 
    System.String Path 'get ' : 
  Methods:
    get_LineNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_LinePosition(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    Create(JsonReader, String): PrivateScope, Assembly, Static, HideBySig
    Create(JsonReader, String, Exception): PrivateScope, Assembly, Static, HideBySig
    Create(IJsonLineInfo, String, String, Exception): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.JsonRequiredAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.JsonSerializationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Newtonsoft.Json.JsonException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32, Int32, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LineNumber 'get ' : 
    Int32 LinePosition 'get ' : 
    System.String Path 'get ' : 
  Methods:
    get_LineNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_LinePosition(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    Create(JsonReader, String): PrivateScope, Assembly, Static, HideBySig
    Create(JsonReader, String, Exception): PrivateScope, Assembly, Static, HideBySig
    Create(IJsonLineInfo, String, String, Exception): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.JsonSerializer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Newtonsoft.Json.TypeNameHandling _typeNameHandling : Assembly
    Newtonsoft.Json.TypeNameAssemblyFormatHandling _typeNameAssemblyFormatHandling : Assembly
    Newtonsoft.Json.PreserveReferencesHandling _preserveReferencesHandling : Assembly
    Newtonsoft.Json.ReferenceLoopHandling _referenceLoopHandling : Assembly
    Newtonsoft.Json.MissingMemberHandling _missingMemberHandling : Assembly
    Newtonsoft.Json.ObjectCreationHandling _objectCreationHandling : Assembly
    Newtonsoft.Json.NullValueHandling _nullValueHandling : Assembly
    Newtonsoft.Json.DefaultValueHandling _defaultValueHandling : Assembly
    Newtonsoft.Json.ConstructorHandling _constructorHandling : Assembly
    Newtonsoft.Json.MetadataPropertyHandling _metadataPropertyHandling : Assembly
    Newtonsoft.Json.JsonConverterCollection _converters : Assembly
    Newtonsoft.Json.Serialization.IContractResolver _contractResolver : Assembly
    Newtonsoft.Json.Serialization.ITraceWriter _traceWriter : Assembly
    System.Collections.IEqualityComparer _equalityComparer : Assembly
    Newtonsoft.Json.Serialization.ISerializationBinder _serializationBinder : Assembly
    System.Runtime.Serialization.StreamingContext _context : Assembly
  Properties:
    Newtonsoft.Json.Serialization.IReferenceResolver ReferenceResolver 'get set' : 
    System.Runtime.Serialization.SerializationBinder Binder 'get set' :  (Obsolete)
    Newtonsoft.Json.Serialization.ISerializationBinder SerializationBinder 'get set' : 
    Newtonsoft.Json.Serialization.ITraceWriter TraceWriter 'get set' : 
    System.Collections.IEqualityComparer EqualityComparer 'get set' : 
    Newtonsoft.Json.TypeNameHandling TypeNameHandling 'get set' : 
    System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TypeNameAssemblyFormat 'get set' :  (Obsolete)
    Newtonsoft.Json.TypeNameAssemblyFormatHandling TypeNameAssemblyFormatHandling 'get set' : 
    Newtonsoft.Json.PreserveReferencesHandling PreserveReferencesHandling 'get set' : 
    Newtonsoft.Json.ReferenceLoopHandling ReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.MissingMemberHandling MissingMemberHandling 'get set' : 
    Newtonsoft.Json.NullValueHandling NullValueHandling 'get set' : 
    Newtonsoft.Json.DefaultValueHandling DefaultValueHandling 'get set' : 
    Newtonsoft.Json.ObjectCreationHandling ObjectCreationHandling 'get set' : 
    Newtonsoft.Json.ConstructorHandling ConstructorHandling 'get set' : 
    Newtonsoft.Json.MetadataPropertyHandling MetadataPropertyHandling 'get set' : 
    Newtonsoft.Json.JsonConverterCollection Converters 'get ' : 
    Newtonsoft.Json.Serialization.IContractResolver ContractResolver 'get set' : 
    System.Runtime.Serialization.StreamingContext Context 'get set' : 
    Newtonsoft.Json.Formatting Formatting 'get set' : 
    Newtonsoft.Json.DateFormatHandling DateFormatHandling 'get set' : 
    Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling 'get set' : 
    Newtonsoft.Json.DateParseHandling DateParseHandling 'get set' : 
    Newtonsoft.Json.FloatParseHandling FloatParseHandling 'get set' : 
    Newtonsoft.Json.FloatFormatHandling FloatFormatHandling 'get set' : 
    Newtonsoft.Json.StringEscapeHandling StringEscapeHandling 'get set' : 
    System.String DateFormatString 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.Nullable`1[System.Int32] MaxDepth 'get set' : 
    Boolean CheckAdditionalContent 'get set' : 
  Events:
    System.EventHandler`1[Newtonsoft.Json.Serialization.ErrorEventArgs] Error: 
  Methods:
    add_Error(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Error(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReferenceResolver(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReferenceResolver(IReferenceResolver): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Binder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Binder(SerializationBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SerializationBinder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SerializationBinder(ISerializationBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TraceWriter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TraceWriter(ITraceWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EqualityComparer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_EqualityComparer(IEqualityComparer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TypeNameHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TypeNameHandling(TypeNameHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TypeNameAssemblyFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TypeNameAssemblyFormat(FormatterAssemblyStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TypeNameAssemblyFormatHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TypeNameAssemblyFormatHandling(TypeNameAssemblyFormatHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreserveReferencesHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PreserveReferencesHandling(PreserveReferencesHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReferenceLoopHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MissingMemberHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MissingMemberHandling(MissingMemberHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NullValueHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NullValueHandling(NullValueHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultValueHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DefaultValueHandling(DefaultValueHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ObjectCreationHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ObjectCreationHandling(ObjectCreationHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ConstructorHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ConstructorHandling(ConstructorHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MetadataPropertyHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MetadataPropertyHandling(MetadataPropertyHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Converters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ContractResolver(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ContractResolver(IContractResolver): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Context(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Context(StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Formatting(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Formatting(Formatting): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateFormatHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DateFormatHandling(DateFormatHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateTimeZoneHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DateTimeZoneHandling(DateTimeZoneHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateParseHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DateParseHandling(DateParseHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FloatParseHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FloatParseHandling(FloatParseHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FloatFormatHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FloatFormatHandling(FloatFormatHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_StringEscapeHandling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_StringEscapeHandling(StringEscapeHandling): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateFormatString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DateFormatString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Culture(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MaxDepth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MaxDepth(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CheckAdditionalContent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CheckAdditionalContent(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsCheckAdditionalContentSet(): PrivateScope, Assembly, HideBySig
    Create(): PrivateScope, Public, Static, HideBySig
    Create(JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    CreateDefault(): PrivateScope, Public, Static, HideBySig
    CreateDefault(JsonSerializerSettings): PrivateScope, Public, Static, HideBySig
    Populate(TextReader, Object): PrivateScope, Public, HideBySig
    Populate(JsonReader, Object): PrivateScope, Public, HideBySig
    PopulateInternal(JsonReader, Object): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Deserialize(JsonReader): PrivateScope, Public, HideBySig
    Deserialize(TextReader, Type): PrivateScope, Public, HideBySig
    Deserialize(JsonReader): PrivateScope, Public, HideBySig
    Deserialize(JsonReader, Type): PrivateScope, Public, HideBySig
    DeserializeInternal(JsonReader, Type): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Serialize(TextWriter, Object): PrivateScope, Public, HideBySig
    Serialize(JsonWriter, Object, Type): PrivateScope, Public, HideBySig
    Serialize(TextWriter, Object, Type): PrivateScope, Public, HideBySig
    Serialize(JsonWriter, Object): PrivateScope, Public, HideBySig
    SerializeInternal(JsonWriter, Object, Type): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetReferenceResolver(): PrivateScope, Assembly, HideBySig
    GetMatchingConverter(Type): PrivateScope, Assembly, HideBySig
    GetMatchingConverter(IList`1, Type): PrivateScope, Assembly, Static, HideBySig
    OnError(ErrorEventArgs): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.JsonSerializerSettings: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[Newtonsoft.Json.Formatting] _formatting : Assembly
    System.Nullable`1[Newtonsoft.Json.DateFormatHandling] _dateFormatHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.DateTimeZoneHandling] _dateTimeZoneHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.DateParseHandling] _dateParseHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.FloatFormatHandling] _floatFormatHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.FloatParseHandling] _floatParseHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.StringEscapeHandling] _stringEscapeHandling : Assembly
    System.Globalization.CultureInfo _culture : Assembly
    System.Nullable`1[System.Boolean] _checkAdditionalContent : Assembly
    System.Nullable`1[System.Int32] _maxDepth : Assembly
    Boolean _maxDepthSet : Assembly
    System.String _dateFormatString : Assembly
    Boolean _dateFormatStringSet : Assembly
    System.Nullable`1[Newtonsoft.Json.TypeNameAssemblyFormatHandling] _typeNameAssemblyFormatHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.DefaultValueHandling] _defaultValueHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.PreserveReferencesHandling] _preserveReferencesHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.NullValueHandling] _nullValueHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.ObjectCreationHandling] _objectCreationHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.MissingMemberHandling] _missingMemberHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] _referenceLoopHandling : Assembly
    System.Nullable`1[System.Runtime.Serialization.StreamingContext] _context : Assembly
    System.Nullable`1[Newtonsoft.Json.ConstructorHandling] _constructorHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] _typeNameHandling : Assembly
    System.Nullable`1[Newtonsoft.Json.MetadataPropertyHandling] _metadataPropertyHandling : Assembly
    System.Runtime.Serialization.StreamingContext DefaultContext : Assembly, Static, InitOnly
    System.Globalization.CultureInfo DefaultCulture : Assembly, Static, InitOnly
    Newtonsoft.Json.ReferenceLoopHandling DefaultReferenceLoopHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.MissingMemberHandling DefaultMissingMemberHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.NullValueHandling DefaultNullValueHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.DefaultValueHandling DefaultDefaultValueHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.ObjectCreationHandling DefaultObjectCreationHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.PreserveReferencesHandling DefaultPreserveReferencesHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.ConstructorHandling DefaultConstructorHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameHandling DefaultTypeNameHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.MetadataPropertyHandling DefaultMetadataPropertyHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.Formatting DefaultFormatting = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.DateFormatHandling DefaultDateFormatHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.DateTimeZoneHandling DefaultDateTimeZoneHandling = 3 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.DateParseHandling DefaultDateParseHandling = 1 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.FloatParseHandling DefaultFloatParseHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.FloatFormatHandling DefaultFloatFormatHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.StringEscapeHandling DefaultStringEscapeHandling = 0 : Assembly, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameAssemblyFormatHandling DefaultTypeNameAssemblyFormatHandling = 0 : Assembly, Static, Literal, HasDefault
    Boolean DefaultCheckAdditionalContent = False : Assembly, Static, Literal, HasDefault
    System.String DefaultDateFormatString = yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK : Assembly, Static, Literal, HasDefault
    Int32 DefaultMaxDepth = 64 : Assembly, Static, Literal, HasDefault
  Properties:
    Newtonsoft.Json.ReferenceLoopHandling ReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.MissingMemberHandling MissingMemberHandling 'get set' : 
    Newtonsoft.Json.ObjectCreationHandling ObjectCreationHandling 'get set' : 
    Newtonsoft.Json.NullValueHandling NullValueHandling 'get set' : 
    Newtonsoft.Json.DefaultValueHandling DefaultValueHandling 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.JsonConverter] Converters 'get set' : 
    Newtonsoft.Json.PreserveReferencesHandling PreserveReferencesHandling 'get set' : 
    Newtonsoft.Json.TypeNameHandling TypeNameHandling 'get set' : 
    Newtonsoft.Json.MetadataPropertyHandling MetadataPropertyHandling 'get set' : 
    System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TypeNameAssemblyFormat 'get set' :  (Obsolete)
    Newtonsoft.Json.TypeNameAssemblyFormatHandling TypeNameAssemblyFormatHandling 'get set' : 
    Newtonsoft.Json.ConstructorHandling ConstructorHandling 'get set' : 
    Newtonsoft.Json.Serialization.IContractResolver ContractResolver 'get set' : 
    System.Collections.IEqualityComparer EqualityComparer 'get set' : 
    Newtonsoft.Json.Serialization.IReferenceResolver ReferenceResolver 'get set' :  (Obsolete)
    System.Func`1[Newtonsoft.Json.Serialization.IReferenceResolver] ReferenceResolverProvider 'get set' : 
    Newtonsoft.Json.Serialization.ITraceWriter TraceWriter 'get set' : 
    System.Runtime.Serialization.SerializationBinder Binder 'get set' :  (Obsolete)
    Newtonsoft.Json.Serialization.ISerializationBinder SerializationBinder 'get set' : 
    System.EventHandler`1[Newtonsoft.Json.Serialization.ErrorEventArgs] Error 'get set' : 
    System.Runtime.Serialization.StreamingContext Context 'get set' : 
    System.String DateFormatString 'get set' : 
    System.Nullable`1[System.Int32] MaxDepth 'get set' : 
    Newtonsoft.Json.Formatting Formatting 'get set' : 
    Newtonsoft.Json.DateFormatHandling DateFormatHandling 'get set' : 
    Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling 'get set' : 
    Newtonsoft.Json.DateParseHandling DateParseHandling 'get set' : 
    Newtonsoft.Json.FloatFormatHandling FloatFormatHandling 'get set' : 
    Newtonsoft.Json.FloatParseHandling FloatParseHandling 'get set' : 
    Newtonsoft.Json.StringEscapeHandling StringEscapeHandling 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    Boolean CheckAdditionalContent 'get set' : 
  Methods:
    get_ReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, HideBySig, SpecialName
    get_MissingMemberHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_MissingMemberHandling(MissingMemberHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectCreationHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectCreationHandling(ObjectCreationHandling): PrivateScope, Public, HideBySig, SpecialName
    get_NullValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_NullValueHandling(NullValueHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValueHandling(DefaultValueHandling): PrivateScope, Public, HideBySig, SpecialName
    get_Converters(): PrivateScope, Public, HideBySig, SpecialName
    set_Converters(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_PreserveReferencesHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_PreserveReferencesHandling(PreserveReferencesHandling): PrivateScope, Public, HideBySig, SpecialName
    get_TypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeNameHandling(TypeNameHandling): PrivateScope, Public, HideBySig, SpecialName
    get_MetadataPropertyHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_MetadataPropertyHandling(MetadataPropertyHandling): PrivateScope, Public, HideBySig, SpecialName
    get_TypeNameAssemblyFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeNameAssemblyFormat(FormatterAssemblyStyle): PrivateScope, Public, HideBySig, SpecialName
    get_TypeNameAssemblyFormatHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeNameAssemblyFormatHandling(TypeNameAssemblyFormatHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ConstructorHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ConstructorHandling(ConstructorHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ContractResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_ContractResolver(IContractResolver): PrivateScope, Public, HideBySig, SpecialName
    get_EqualityComparer(): PrivateScope, Public, HideBySig, SpecialName
    set_EqualityComparer(IEqualityComparer): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceResolver(IReferenceResolver): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceResolverProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceResolverProvider(Func`1): PrivateScope, Public, HideBySig, SpecialName
    get_TraceWriter(): PrivateScope, Public, HideBySig, SpecialName
    set_TraceWriter(ITraceWriter): PrivateScope, Public, HideBySig, SpecialName
    get_Binder(): PrivateScope, Public, HideBySig, SpecialName
    set_Binder(SerializationBinder): PrivateScope, Public, HideBySig, SpecialName
    get_SerializationBinder(): PrivateScope, Public, HideBySig, SpecialName
    set_SerializationBinder(ISerializationBinder): PrivateScope, Public, HideBySig, SpecialName
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
    set_Error(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
    set_Context(StreamingContext): PrivateScope, Public, HideBySig, SpecialName
    get_DateFormatString(): PrivateScope, Public, HideBySig, SpecialName
    set_DateFormatString(String): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxDepth(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Formatting(): PrivateScope, Public, HideBySig, SpecialName
    set_Formatting(Formatting): PrivateScope, Public, HideBySig, SpecialName
    get_DateFormatHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateFormatHandling(DateFormatHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeZoneHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeZoneHandling(DateTimeZoneHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DateParseHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateParseHandling(DateParseHandling): PrivateScope, Public, HideBySig, SpecialName
    get_FloatFormatHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_FloatFormatHandling(FloatFormatHandling): PrivateScope, Public, HideBySig, SpecialName
    get_FloatParseHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_FloatParseHandling(FloatParseHandling): PrivateScope, Public, HideBySig, SpecialName
    get_StringEscapeHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_StringEscapeHandling(StringEscapeHandling): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_CheckAdditionalContent(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckAdditionalContent(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.JsonTextReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonReader
    Void .ctor(System.IO.TextReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.IJsonLineInfo
  Properties:
    Newtonsoft.Json.JsonNameTable PropertyNameTable 'get set' : 
    Newtonsoft.Json.IArrayPool`1[System.Char] ArrayPool 'get set' : 
    Int32 LineNumber 'get ' : 
    Int32 LinePosition 'get ' : 
  Methods:
    ReadAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoReadAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    ReadAsBooleanAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoReadAsBooleanAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    ReadAsBytesAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoReadAsBytesAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    ReadAsDateTimeAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoReadAsDateTimeAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    ReadAsDateTimeOffsetAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoReadAsDateTimeOffsetAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    ReadAsDecimalAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoReadAsDecimalAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    ReadAsDoubleAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoReadAsDoubleAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    ReadAsInt32Async(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoReadAsInt32Async(CancellationToken): PrivateScope, Assembly, HideBySig
    ReadAsStringAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoReadAsStringAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    get_PropertyNameTable(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyNameTable(JsonNameTable): PrivateScope, Public, HideBySig, SpecialName
    get_ArrayPool(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrayPool(IArrayPool`1): PrivateScope, Public, HideBySig, SpecialName
    Read(): PrivateScope, Public, Virtual, HideBySig
    ReadAsInt32(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTime(): PrivateScope, Public, Virtual, HideBySig
    ReadAsString(): PrivateScope, Public, Virtual, HideBySig
    ReadAsBytes(): PrivateScope, Public, Virtual, HideBySig
    ReadAsBoolean(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTimeOffset(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDecimal(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDouble(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    HasLineInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_LineNumber(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LinePosition(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Newtonsoft.Json.ReadType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.ReadType Read = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsInt32 = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsInt64 = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsBytes = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsString = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsDecimal = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsDateTime = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsDateTimeOffset = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsDouble = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReadType ReadAsBoolean = 9 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.JsonTextWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonWriter
    Void .ctor(System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.IArrayPool`1[System.Char] ArrayPool 'get set' : 
    Int32 Indentation 'get set' : 
    Char QuoteChar 'get set' : 
    Char IndentChar 'get set' : 
    Boolean QuoteName 'get set' : 
  Methods:
    WriteValue(Guid): PrivateScope, Public, Virtual, HideBySig
    WriteValue(TimeSpan): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Uri): PrivateScope, Public, Virtual, HideBySig
    WriteComment(String): PrivateScope, Public, Virtual, HideBySig
    WriteWhitespace(String): PrivateScope, Public, Virtual, HideBySig
    FlushAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoFlushAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    DoWriteValueDelimiterAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    DoWriteEndAsync(JsonToken, CancellationToken): PrivateScope, Assembly, HideBySig
    CloseAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoCloseAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    WriteEndAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteIndentAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    DoWriteIndentSpaceAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    WriteRawAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteRawAsync(String, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteNullAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteNullAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    WriteIntegerValueAsync(Int64, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteIntegerValueAsync(UInt64, CancellationToken): PrivateScope, Assembly, HideBySig
    WritePropertyNameAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWritePropertyNameAsync(String, CancellationToken): PrivateScope, Assembly, HideBySig
    WritePropertyNameAsync(String, Boolean, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWritePropertyNameAsync(String, Boolean, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteStartArrayAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteStartArrayAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    DoWriteStartArrayAsync(Task, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteStartObjectAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteStartObjectAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    DoWriteStartObjectAsync(Task, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteStartConstructorAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteStartConstructorAsync(String, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteUndefinedAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteUndefinedAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    WriteWhitespaceAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteWhitespaceAsync(String, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Boolean, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Boolean, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Byte, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Byte[], CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueNonNullAsync(Byte[], CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Char, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Char, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(DateTime, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(DateTime, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(DateTimeOffset, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(DateTimeOffset, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Decimal, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Decimal, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Double, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Double, Boolean, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Single, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Single, Boolean, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Guid, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Guid, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Int32, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Int64, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(BigInteger, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Object, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(SByte, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Int16, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(String, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(TimeSpan, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(TimeSpan, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(UInt32, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(UInt64, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Uri, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueNotNullAsync(Uri, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueNotNullAsync(Task, Uri, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(UInt16, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteValueAsync(Nullable`1, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteCommentAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteCommentAsync(String, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteEndArrayAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteEndConstructorAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteEndObjectAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    WriteRawValueAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DoWriteRawValueAsync(String, CancellationToken): PrivateScope, Assembly, HideBySig
    EnsureWriteBuffer(Int32, Int32): PrivateScope, Assembly, HideBySig
    get_ArrayPool(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrayPool(IArrayPool`1): PrivateScope, Public, HideBySig, SpecialName
    get_Indentation(): PrivateScope, Public, HideBySig, SpecialName
    set_Indentation(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_QuoteChar(): PrivateScope, Public, HideBySig, SpecialName
    set_QuoteChar(Char): PrivateScope, Public, HideBySig, SpecialName
    get_IndentChar(): PrivateScope, Public, HideBySig, SpecialName
    set_IndentChar(Char): PrivateScope, Public, HideBySig, SpecialName
    get_QuoteName(): PrivateScope, Public, HideBySig, SpecialName
    set_QuoteName(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    WriteStartObject(): PrivateScope, Public, Virtual, HideBySig
    WriteStartArray(): PrivateScope, Public, Virtual, HideBySig
    WriteStartConstructor(String): PrivateScope, Public, Virtual, HideBySig
    WritePropertyName(String): PrivateScope, Public, Virtual, HideBySig
    WritePropertyName(String, Boolean): PrivateScope, Public, Virtual, HideBySig
    OnStringEscapeHandlingChanged(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    WriteValue(Object): PrivateScope, Public, Virtual, HideBySig
    WriteNull(): PrivateScope, Public, Virtual, HideBySig
    WriteUndefined(): PrivateScope, Public, Virtual, HideBySig
    WriteRaw(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Single): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Double): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Boolean): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Char): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(SByte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Decimal): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTime): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte[]): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTimeOffset): PrivateScope, Public, Virtual, HideBySig
Struct Newtonsoft.Json.JsonToken: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.JsonToken None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken StartObject = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken StartArray = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken StartConstructor = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken PropertyName = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Comment = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Raw = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Integer = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Float = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken String = 9 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Boolean = 10 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Null = 11 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Undefined = 12 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken EndObject = 13 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken EndArray = 14 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken EndConstructor = 15 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Date = 16 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.JsonToken Bytes = 17 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.JsonValidatingReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Newtonsoft.Json.JsonReader
    Void .ctor(Newtonsoft.Json.JsonReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.IJsonLineInfo
  Properties:
    System.Object Value 'get ' : 
    Int32 Depth 'get ' : 
    System.String Path 'get ' : 
    Char QuoteChar 'get set' : 
    Newtonsoft.Json.JsonToken TokenType 'get ' : 
    System.Type ValueType 'get ' : 
    Newtonsoft.Json.Schema.JsonSchema Schema 'get set' : 
    Newtonsoft.Json.JsonReader Reader 'get ' : 
  Events:
    Newtonsoft.Json.Schema.ValidationEventHandler ValidationEventHandler: 
  Methods:
    add_ValidationEventHandler(ValidationEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ValidationEventHandler(ValidationEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Depth(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_QuoteChar(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TokenType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(JsonSchema): PrivateScope, Public, HideBySig, SpecialName
    get_Reader(): PrivateScope, Public, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    ReadAsInt32(): PrivateScope, Public, Virtual, HideBySig
    ReadAsBytes(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDecimal(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDouble(): PrivateScope, Public, Virtual, HideBySig
    ReadAsBoolean(): PrivateScope, Public, Virtual, HideBySig
    ReadAsString(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTime(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTimeOffset(): PrivateScope, Public, Virtual, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.JsonWriter: AutoLayout, AnsiClass, Class, Public, Abstract
  Interfaces:
    System.IDisposable
  Fields:
    State[][] StateArrayTemplate : Assembly, Static, InitOnly
  Properties:
    Boolean CloseOutput 'get set' : 
    Boolean AutoCompleteOnClose 'get set' : 
    Newtonsoft.Json.WriteState WriteState 'get ' : 
    System.String ContainerPath 'get ' : 
    System.String Path 'get ' : 
    Newtonsoft.Json.Formatting Formatting 'get set' : 
    Newtonsoft.Json.DateFormatHandling DateFormatHandling 'get set' : 
    Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling 'get set' : 
    Newtonsoft.Json.StringEscapeHandling StringEscapeHandling 'get set' : 
    Newtonsoft.Json.FloatFormatHandling FloatFormatHandling 'get set' : 
    System.String DateFormatString 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    InternalWriteRaw(): PrivateScope, Assembly, HideBySig
    InternalWriteStart(JsonToken, JsonContainerType): PrivateScope, Assembly, HideBySig
    InternalWriteValue(JsonToken): PrivateScope, Assembly, HideBySig
    InternalWriteWhitespace(String): PrivateScope, Assembly, HideBySig
    InternalWriteComment(): PrivateScope, Assembly, HideBySig
    AutoCompleteAsync(JsonToken, CancellationToken): PrivateScope, Assembly, HideBySig
    CloseAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FlushAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteRawAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEndAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEndInternalAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    InternalWriteEndAsync(JsonContainerType, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteEndArrayAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEndConstructorAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEndObjectAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteNullAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WritePropertyNameAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WritePropertyNameAsync(String, Boolean, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InternalWritePropertyNameAsync(String, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteStartArrayAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InternalWriteStartAsync(JsonToken, JsonContainerType, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteCommentAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InternalWriteCommentAsync(CancellationToken): PrivateScope, Assembly, HideBySig
    WriteRawValueAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteStartConstructorAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteStartObjectAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteTokenAsync(JsonReader, CancellationToken(Optional, HasDefault)): PrivateScope, Public, HideBySig
    WriteTokenAsync(JsonReader, Boolean, CancellationToken(Optional, HasDefault)): PrivateScope, Public, HideBySig
    WriteTokenAsync(JsonToken, CancellationToken(Optional, HasDefault)): PrivateScope, Public, HideBySig
    WriteTokenAsync(JsonToken, Object, CancellationToken(Optional, HasDefault)): PrivateScope, Public, HideBySig
    WriteTokenAsync(JsonReader, Boolean, Boolean, Boolean, CancellationToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    WriteTokenSyncReadingAsync(JsonReader, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(Boolean, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Byte, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Byte[], CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Char, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(DateTime, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(DateTimeOffset, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Decimal, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Double, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Single, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Guid, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Int32, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Int64, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Object, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(SByte, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Int16, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(TimeSpan, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(UInt32, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(UInt64, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Uri, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(UInt16, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValueAsync(Nullable`1, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteUndefinedAsync(CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteWhitespaceAsync(String, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InternalWriteValueAsync(JsonToken, CancellationToken): PrivateScope, Assembly, HideBySig
    WriteValueAsync(JsonWriter, PrimitiveTypeCode, Object, CancellationToken): PrivateScope, Assembly, Static, HideBySig
    BuildStateArray(): PrivateScope, Assembly, Static, HideBySig
    get_CloseOutput(): PrivateScope, Public, HideBySig, SpecialName
    set_CloseOutput(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoCompleteOnClose(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoCompleteOnClose(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WriteState(): PrivateScope, Public, HideBySig, SpecialName
    get_ContainerPath(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    get_Formatting(): PrivateScope, Public, HideBySig, SpecialName
    set_Formatting(Formatting): PrivateScope, Public, HideBySig, SpecialName
    get_DateFormatHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateFormatHandling(DateFormatHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeZoneHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeZoneHandling(DateTimeZoneHandling): PrivateScope, Public, HideBySig, SpecialName
    get_StringEscapeHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_StringEscapeHandling(StringEscapeHandling): PrivateScope, Public, HideBySig, SpecialName
    OnStringEscapeHandlingChanged(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_FloatFormatHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_FloatFormatHandling(FloatFormatHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DateFormatString(): PrivateScope, Public, HideBySig, SpecialName
    set_DateFormatString(String): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    UpdateScopeWithFinishedValue(): PrivateScope, Assembly, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteStartObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEndObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteStartArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEndArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteStartConstructor(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEndConstructor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WritePropertyName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WritePropertyName(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteToken(JsonReader): PrivateScope, Public, HideBySig
    WriteToken(JsonReader, Boolean): PrivateScope, Public, HideBySig
    WriteToken(JsonToken, Object): PrivateScope, Public, HideBySig
    WriteToken(JsonToken): PrivateScope, Public, HideBySig
    WriteToken(JsonReader, Boolean, Boolean, Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    AutoComplete(JsonToken): PrivateScope, Assembly, HideBySig
    WriteNull(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteUndefined(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteRaw(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteRawValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Int16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(DateTimeOffset): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Guid): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Uri): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteComment(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteWhitespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteValue(JsonWriter, PrimitiveTypeCode, Object): PrivateScope, Assembly, Static, HideBySig
    InternalWriteEnd(JsonContainerType): PrivateScope, Assembly, HideBySig
    InternalWritePropertyName(String): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.JsonWriterException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Newtonsoft.Json.JsonException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Path 'get ' : 
  Methods:
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    Create(JsonWriter, String, Exception): PrivateScope, Assembly, Static, HideBySig
    Create(String, String, Exception): PrivateScope, Assembly, Static, HideBySig
Struct Newtonsoft.Json.MemberSerialization: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.MemberSerialization OptOut = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.MemberSerialization OptIn = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.MemberSerialization Fields = 2 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.MetadataPropertyHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.MetadataPropertyHandling Default = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.MetadataPropertyHandling ReadAhead = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.MetadataPropertyHandling Ignore = 2 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.MissingMemberHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.MissingMemberHandling Ignore = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.MissingMemberHandling Error = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.NullValueHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.NullValueHandling Include = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.NullValueHandling Ignore = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.ObjectCreationHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.ObjectCreationHandling Auto = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ObjectCreationHandling Reuse = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ObjectCreationHandling Replace = 2 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.PreserveReferencesHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.PreserveReferencesHandling None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.PreserveReferencesHandling Objects = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.PreserveReferencesHandling Arrays = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.PreserveReferencesHandling All = 3 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.ReferenceLoopHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.ReferenceLoopHandling Error = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReferenceLoopHandling Ignore = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.ReferenceLoopHandling Serialize = 2 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.Required: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Required Default = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Required AllowNull = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Required Always = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Required DisallowNull = 3 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.StringEscapeHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.StringEscapeHandling Default = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.StringEscapeHandling EscapeNonAscii = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.StringEscapeHandling EscapeHtml = 2 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.TypeNameAssemblyFormatHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.TypeNameAssemblyFormatHandling Simple = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameAssemblyFormatHandling Full = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.TypeNameHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.TypeNameHandling None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameHandling Objects = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameHandling Arrays = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameHandling All = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.TypeNameHandling Auto = 4 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.WriteState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.WriteState Error = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Closed = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Object = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Array = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Constructor = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Property = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.WriteState Start = 6 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Utilities.AsyncUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Threading.Tasks.Task`1[System.Boolean] False : Public, Static, InitOnly
    System.Threading.Tasks.Task`1[System.Boolean] True : Public, Static, InitOnly
    System.Threading.Tasks.Task CompletedTask : Assembly, Static, InitOnly
  Methods:
    ToAsync(Boolean): PrivateScope, Assembly, Static, HideBySig
    CancelIfRequestedAsync(CancellationToken): PrivateScope, Public, Static, HideBySig
    CancelIfRequestedAsync(CancellationToken): PrivateScope, Public, Static, HideBySig
    FromCanceled(CancellationToken): PrivateScope, Public, Static, HideBySig
    FromCanceled(CancellationToken): PrivateScope, Public, Static, HideBySig
    WriteAsync(TextWriter, Char, CancellationToken): PrivateScope, Public, Static, HideBySig
    WriteAsync(TextWriter, String, CancellationToken): PrivateScope, Public, Static, HideBySig
    WriteAsync(TextWriter, Char[], Int32, Int32, CancellationToken): PrivateScope, Public, Static, HideBySig
    ReadAsync(TextReader, Char[], Int32, Int32, CancellationToken): PrivateScope, Public, Static, HideBySig
    IsCompletedSucessfully(Task): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.Base64Encoder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Encode(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
    EncodeAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, HideBySig
    FlushAsync(CancellationToken): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.BidirectionalDictionary`2[TFirst,TSecond]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TFirst
  Type parameter: TSecond
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEqualityComparer`1[TFirst], System.Collections.Generic.IEqualityComparer`1[TSecond]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEqualityComparer`1[TFirst], System.Collections.Generic.IEqualityComparer`1[TSecond], System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Set(TFirst, TSecond): PrivateScope, Public, HideBySig
    TryGetByFirst(TFirst, TSecond&(Out)): PrivateScope, Public, HideBySig
    TryGetBySecond(TSecond, TFirst&(Out)): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.CollectionUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsNullOrEmpty(ICollection`1): PrivateScope, Public, Static, HideBySig
    AddRange(IList`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    IsDictionaryType(Type): PrivateScope, Public, Static, HideBySig
    ResolveEnumerableCollectionConstructor(Type, Type): PrivateScope, Public, Static, HideBySig
    ResolveEnumerableCollectionConstructor(Type, Type, Type): PrivateScope, Public, Static, HideBySig
    AddDistinct(IList`1, T): PrivateScope, Public, Static, HideBySig
    AddDistinct(IList`1, T, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ContainsValue(IEnumerable`1, TSource, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    AddRangeDistinct(IList`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    IndexOf(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Contains(List`1, T, IEqualityComparer): PrivateScope, Public, Static, HideBySig
    IndexOfReference(List`1, T): PrivateScope, Public, Static, HideBySig
    FastReverse(List`1): PrivateScope, Public, Static, HideBySig
    ToMultidimensionalArray(IList, Type, Int32): PrivateScope, Public, Static, HideBySig
    ArrayEmpty(): PrivateScope, Public, Static, HideBySig
Interface Newtonsoft.Json.Utilities.IWrappedCollection: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    System.Object UnderlyingCollection 'get ' : 
  Methods:
    get_UnderlyingCollection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Utilities.CollectionWrapper`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Collections.IList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.ICollection`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    Newtonsoft.Json.Utilities.IWrappedCollection
    System.Collections.IList
    System.Collections.ICollection
  Properties:
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Object UnderlyingCollection 'get ' : 
  Methods:
    Add(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_UnderlyingCollection(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Newtonsoft.Json.Utilities.PrimitiveTypeCode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Empty = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Object = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Char = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode CharNullable = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Boolean = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode BooleanNullable = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode SByte = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode SByteNullable = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Int16 = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Int16Nullable = 9 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt16 = 10 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt16Nullable = 11 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Int32 = 12 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Int32Nullable = 13 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Byte = 14 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode ByteNullable = 15 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt32 = 16 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt32Nullable = 17 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Int64 = 18 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Int64Nullable = 19 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt64 = 20 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt64Nullable = 21 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Single = 22 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode SingleNullable = 23 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Double = 24 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode DoubleNullable = 25 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTime = 26 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTimeNullable = 27 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTimeOffset = 28 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTimeOffsetNullable = 29 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Decimal = 30 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode DecimalNullable = 31 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Guid = 32 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode GuidNullable = 33 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode TimeSpan = 34 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode TimeSpanNullable = 35 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode BigInteger = 36 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode BigIntegerNullable = 37 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Uri = 38 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode String = 39 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode Bytes = 40 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.PrimitiveTypeCode DBNull = 41 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Utilities.TypeInformation: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Type, Newtonsoft.Json.Utilities.PrimitiveTypeCode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Type 'get ' : 
    Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeCode(): PrivateScope, Public, HideBySig, SpecialName
Struct Newtonsoft.Json.Utilities.ParseResult: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Utilities.ParseResult None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.ParseResult Success = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.ParseResult Overflow = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.ParseResult Invalid = 3 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Utilities.ConvertUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetTypeCode(Type): PrivateScope, Public, Static, HideBySig
    GetTypeCode(Type, Boolean&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeInformation(IConvertible): PrivateScope, Public, Static, HideBySig
    IsConvertible(Type): PrivateScope, Public, Static, HideBySig
    ParseTimeSpan(String): PrivateScope, Public, Static, HideBySig
    ToBigInteger(Object): PrivateScope, Assembly, Static, HideBySig
    FromBigInteger(BigInteger, Type): PrivateScope, Public, Static, HideBySig
    Convert(Object, CultureInfo, Type): PrivateScope, Public, Static, HideBySig
    ConvertOrCast(Object, CultureInfo, Type): PrivateScope, Public, Static, HideBySig
    VersionTryParse(String, Version&(Out)): PrivateScope, Public, Static, HideBySig
    IsInteger(Object): PrivateScope, Public, Static, HideBySig
    Int32TryParse(Char[], Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    Int64TryParse(Char[], Int32, Int32, Int64&(Out)): PrivateScope, Public, Static, HideBySig
    DecimalTryParse(Char[], Int32, Int32, Decimal&(Out)): PrivateScope, Public, Static, HideBySig
    TryConvertGuid(String, Guid&(Out)): PrivateScope, Public, Static, HideBySig
    TryHexTextToInt(Char[], Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
Struct Newtonsoft.Json.Utilities.ParserTimeZone: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Utilities.ParserTimeZone Unspecified = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.ParserTimeZone Utc = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.ParserTimeZone LocalWestOfUtc = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Utilities.ParserTimeZone LocalEastOfUtc = 3 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.Utilities.DateTimeParser: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed
  :System.ValueType
  Fields:
    Int32 Year : Public
    Int32 Month : Public
    Int32 Day : Public
    Int32 Hour : Public
    Int32 Minute : Public
    Int32 Second : Public
    Int32 Fraction : Public
    Int32 ZoneHour : Public
    Int32 ZoneMinute : Public
    Newtonsoft.Json.Utilities.ParserTimeZone Zone : Public
  Methods:
    Parse(Char[], Int32, Int32): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.DateTimeUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Int64 InitialJavaScriptDateTicks : Assembly, Static, InitOnly
  Methods:
    GetUtcOffset(DateTime): PrivateScope, Public, Static, HideBySig
    ToSerializationMode(DateTimeKind): PrivateScope, Public, Static, HideBySig
    EnsureDateTime(DateTime, DateTimeZoneHandling): PrivateScope, Assembly, Static, HideBySig
    ConvertDateTimeToJavaScriptTicks(DateTime, TimeSpan): PrivateScope, Assembly, Static, HideBySig
    ConvertDateTimeToJavaScriptTicks(DateTime): PrivateScope, Assembly, Static, HideBySig
    ConvertDateTimeToJavaScriptTicks(DateTime, Boolean): PrivateScope, Assembly, Static, HideBySig
    ConvertJavaScriptTicksToDateTime(Int64): PrivateScope, Assembly, Static, HideBySig
    TryParseDateTimeIso(StringReference, DateTimeZoneHandling, DateTime&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseDateTimeOffsetIso(StringReference, DateTimeOffset&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseDateTime(StringReference, DateTimeZoneHandling, String, CultureInfo, DateTime&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseDateTime(String, DateTimeZoneHandling, String, CultureInfo, DateTime&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseDateTimeOffset(StringReference, String, CultureInfo, DateTimeOffset&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseDateTimeOffset(String, String, CultureInfo, DateTimeOffset&(Out)): PrivateScope, Assembly, Static, HideBySig
    WriteDateTimeString(TextWriter, DateTime, DateFormatHandling, String, CultureInfo): PrivateScope, Assembly, Static, HideBySig
    WriteDateTimeString(Char[], Int32, DateTime, Nullable`1, DateTimeKind, DateFormatHandling): PrivateScope, Assembly, Static, HideBySig
    WriteDefaultIsoDate(Char[], Int32, DateTime): PrivateScope, Assembly, Static, HideBySig
    WriteDateTimeOffset(Char[], Int32, TimeSpan, DateFormatHandling): PrivateScope, Assembly, Static, HideBySig
    WriteDateTimeOffsetString(TextWriter, DateTimeOffset, DateFormatHandling, String, CultureInfo): PrivateScope, Assembly, Static, HideBySig
Interface Newtonsoft.Json.Utilities.IWrappedDictionary: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.IDictionary
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    System.Object UnderlyingDictionary 'get ' : 
  Methods:
    get_UnderlyingDictionary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Utilities.DictionaryWrapper`2[TKey,TValue]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IDictionary`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IReadOnlyDictionary`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[TKey,TValue]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.IEnumerable
    Newtonsoft.Json.Utilities.IWrappedDictionary
    System.Collections.IDictionary
    System.Collections.ICollection
  Properties:
    System.Collections.Generic.IDictionary`2[TKey,TValue] GenericDictionary 'get ' : 
    System.Collections.Generic.ICollection`1[TKey] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[TValue] Values 'get ' : 
    TValue Item [TKey] 'get set' : 
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Object UnderlyingDictionary 'get ' : 
  Methods:
    get_GenericDictionary(): PrivateScope, Assembly, HideBySig, SpecialName
    Add(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(TKey, TValue&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(KeyValuePair`2[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_UnderlyingDictionary(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Utilities.DynamicProxy`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDynamicMemberNames(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryBinaryOperation(T, BinaryOperationBinder, Object, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryConvert(T, ConvertBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryCreateInstance(T, CreateInstanceBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryDeleteIndex(T, DeleteIndexBinder, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryDeleteMember(T, DeleteMemberBinder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryGetIndex(T, GetIndexBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryGetMember(T, GetMemberBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryInvoke(T, InvokeBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryInvokeMember(T, InvokeMemberBinder, Object[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrySetIndex(T, SetIndexBinder, Object[], Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrySetMember(T, SetMemberBinder, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryUnaryOperation(T, UnaryOperationBinder, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
  :System.Dynamic.DynamicMetaObject
    Void .ctor(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy`1[T]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    BindGetMember(GetMemberBinder): PrivateScope, Public, Virtual, HideBySig
    BindSetMember(SetMemberBinder, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig
    BindDeleteMember(DeleteMemberBinder): PrivateScope, Public, Virtual, HideBySig
    BindConvert(ConvertBinder): PrivateScope, Public, Virtual, HideBySig
    BindInvokeMember(InvokeMemberBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig
    BindCreateInstance(CreateInstanceBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig
    BindInvoke(InvokeBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig
    BindBinaryOperation(BinaryOperationBinder, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig
    BindUnaryOperation(UnaryOperationBinder): PrivateScope, Public, Virtual, HideBySig
    BindGetIndex(GetIndexBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig
    BindSetIndex(SetIndexBinder, DynamicMetaObject[], DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig
    BindDeleteIndex(DeleteIndexBinder, DynamicMetaObject[]): PrivateScope, Public, Virtual, HideBySig
    GetDynamicMemberNames(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.DynamicReflectionDelegateFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Utilities.ReflectionDelegateFactory
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Utilities.DynamicReflectionDelegateFactory Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    CreateParameterizedConstructor(MethodBase): PrivateScope, Public, Virtual, HideBySig
    CreateMethodCall(MethodBase): PrivateScope, Public, Virtual, HideBySig
    CreateDefaultConstructor(Type): PrivateScope, Public, Virtual, HideBySig
    CreateGet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig
    CreateGet(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    CreateSet(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    GenerateCreateSetFieldIL(FieldInfo, ILGenerator): PrivateScope, Assembly, Static, HideBySig
    CreateSet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig
    GenerateCreateSetPropertyIL(PropertyInfo, ILGenerator): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Utilities.DynamicUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetDynamicMemberNames(IDynamicMetaObjectProvider): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.NoThrowGetBinderMember: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Dynamic.GetMemberBinder
    Void .ctor(System.Dynamic.GetMemberBinder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FallbackGetMember(DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.NoThrowSetBinderMember: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Dynamic.SetMemberBinder
    Void .ctor(System.Dynamic.SetMemberBinder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FallbackSetMember(DynamicMetaObject, DynamicMetaObject, DynamicMetaObject): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.NoThrowExpressionVisitor: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Linq.Expressions.ExpressionVisitor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object ErrorResult : Assembly, Static, InitOnly
Class Newtonsoft.Json.Utilities.EnumInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Boolean, UInt64[], System.String[], System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean IsFlags : Public, InitOnly
    UInt64[] Values : Public, InitOnly
    System.String[] Names : Public, InitOnly
    System.String[] ResolvedNames : Public, InitOnly
Class Newtonsoft.Json.Utilities.EnumUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetFlagsValues(T): PrivateScope, Public, Static, HideBySig
    TryToString(Type, Object, Boolean, String&(Out)): PrivateScope, Public, Static, HideBySig
    TryToString(Type, Object, NamingStrategy, String&(Out)): PrivateScope, Public, Static, HideBySig
    GetEnumValuesAndNames(Type): PrivateScope, Public, Static, HideBySig
    ParseEnum(Type, NamingStrategy, String, Boolean): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Utilities.ReflectionDelegateFactory
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Utilities.ReflectionDelegateFactory Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    CreateParameterizedConstructor(MethodBase): PrivateScope, Public, Virtual, HideBySig
    CreateMethodCall(MethodBase): PrivateScope, Public, Virtual, HideBySig
    CreateDefaultConstructor(Type): PrivateScope, Public, Virtual, HideBySig
    CreateGet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig
    CreateGet(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    CreateSet(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    CreateSet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.FSharpFunction: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Object, Newtonsoft.Json.Utilities.MethodCall`2[System.Object,System.Object]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object[]): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.FSharpUtils: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Fields:
    System.String FSharpSetTypeName = FSharpSet`1 : Public, Static, Literal, HasDefault
    System.String FSharpListTypeName = FSharpList`1 : Public, Static, Literal, HasDefault
    System.String FSharpMapTypeName = FSharpMap`2 : Public, Static, Literal, HasDefault
  Properties:
    Newtonsoft.Json.Utilities.FSharpUtils Instance 'get ' : 
    System.Reflection.Assembly FSharpCoreAssembly 'get set' : 
    Newtonsoft.Json.Utilities.MethodCall`2[System.Object,System.Object] IsUnion 'get set' : 
    Newtonsoft.Json.Utilities.MethodCall`2[System.Object,System.Object] GetUnionCases 'get set' : 
    Newtonsoft.Json.Utilities.MethodCall`2[System.Object,System.Object] PreComputeUnionTagReader 'get set' : 
    Newtonsoft.Json.Utilities.MethodCall`2[System.Object,System.Object] PreComputeUnionReader 'get set' : 
    Newtonsoft.Json.Utilities.MethodCall`2[System.Object,System.Object] PreComputeUnionConstructor 'get set' : 
    System.Func`2[System.Object,System.Object] GetUnionCaseInfoDeclaringType 'get set' : 
    System.Func`2[System.Object,System.Object] GetUnionCaseInfoName 'get set' : 
    System.Func`2[System.Object,System.Object] GetUnionCaseInfoTag 'get set' : 
    Newtonsoft.Json.Utilities.MethodCall`2[System.Object,System.Object] GetUnionCaseInfoFields 'get set' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FSharpCoreAssembly(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnion(): PrivateScope, Public, HideBySig, SpecialName
    get_GetUnionCases(): PrivateScope, Public, HideBySig, SpecialName
    get_PreComputeUnionTagReader(): PrivateScope, Public, HideBySig, SpecialName
    get_PreComputeUnionReader(): PrivateScope, Public, HideBySig, SpecialName
    get_PreComputeUnionConstructor(): PrivateScope, Public, HideBySig, SpecialName
    get_GetUnionCaseInfoDeclaringType(): PrivateScope, Public, HideBySig, SpecialName
    get_GetUnionCaseInfoName(): PrivateScope, Public, HideBySig, SpecialName
    get_GetUnionCaseInfoTag(): PrivateScope, Public, HideBySig, SpecialName
    get_GetUnionCaseInfoFields(): PrivateScope, Public, HideBySig, SpecialName
    EnsureInitialized(Assembly): PrivateScope, Public, Static, HideBySig
    CreateSeq(Type): PrivateScope, Public, HideBySig
    CreateMap(Type, Type): PrivateScope, Public, HideBySig
    BuildMapCreator(): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.ILGeneratorExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    PushInstance(ILGenerator, Type): PrivateScope, Public, Static, HideBySig
    PushArrayInstance(ILGenerator, Int32, Int32): PrivateScope, Public, Static, HideBySig
    BoxIfNeeded(ILGenerator, Type): PrivateScope, Public, Static, HideBySig
    UnboxIfNeeded(ILGenerator, Type): PrivateScope, Public, Static, HideBySig
    CallMethod(ILGenerator, MethodInfo): PrivateScope, Public, Static, HideBySig
    Return(ILGenerator): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.ImmutableCollectionsUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryBuildImmutableForArrayContract(Type, Type, Type&(Out), ObjectConstructor`1&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryBuildImmutableForDictionaryContract(Type, Type, Type, Type&(Out), ObjectConstructor`1&(Out)): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Utilities.BufferUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    RentBuffer(IArrayPool`1, Int32): PrivateScope, Public, Static, HideBySig
    ReturnBuffer(IArrayPool`1, Char[]): PrivateScope, Public, Static, HideBySig
    EnsureBufferSize(IArrayPool`1, Int32, Char[]): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.JavaScriptUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Boolean[] SingleQuoteCharEscapeFlags : Assembly, Static, InitOnly
    Boolean[] DoubleQuoteCharEscapeFlags : Assembly, Static, InitOnly
    Boolean[] HtmlCharEscapeFlags : Assembly, Static, InitOnly
  Methods:
    GetCharEscapeFlags(StringEscapeHandling, Char): PrivateScope, Public, Static, HideBySig
    ShouldEscapeJavaScriptString(String, Boolean[]): PrivateScope, Public, Static, HideBySig
    WriteEscapedJavaScriptString(TextWriter, String, Char, Boolean, Boolean[], StringEscapeHandling, IArrayPool`1, Char[]&): PrivateScope, Public, Static, HideBySig
    ToEscapedJavaScriptString(String, Char, Boolean, StringEscapeHandling): PrivateScope, Public, Static, HideBySig
    WriteEscapedJavaScriptStringAsync(TextWriter, String, Char, Boolean, Boolean[], StringEscapeHandling, JsonTextWriter, Char[], CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WriteCharAsync(Task, TextWriter, Char, CancellationToken): PrivateScope, Public, Static, HideBySig
    TryGetDateFromConstructorJson(JsonReader, DateTime&(Out), String&(Out)): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.JsonTokenUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsEndToken(JsonToken): PrivateScope, Assembly, Static, HideBySig
    IsStartToken(JsonToken): PrivateScope, Assembly, Static, HideBySig
    IsPrimitiveToken(JsonToken): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Utilities.ReflectionDelegateFactory
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Utilities.ReflectionDelegateFactory Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    CreateParameterizedConstructor(MethodBase): PrivateScope, Public, Virtual, HideBySig
    CreateMethodCall(MethodBase): PrivateScope, Public, Virtual, HideBySig
    CreateDefaultConstructor(Type): PrivateScope, Public, Virtual, HideBySig
    CreateGet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig
    CreateGet(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    CreateSet(FieldInfo): PrivateScope, Public, Virtual, HideBySig
    CreateSet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.MathUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IntLength(UInt64): PrivateScope, Public, Static, HideBySig
    IntToHex(Int32): PrivateScope, Public, Static, HideBySig
    Min(Nullable`1, Nullable`1): PrivateScope, Public, Static, HideBySig
    Max(Nullable`1, Nullable`1): PrivateScope, Public, Static, HideBySig
    Max(Nullable`1, Nullable`1): PrivateScope, Public, Static, HideBySig
    ApproxEquals(Double, Double): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.MethodCall`2[T,TResult]: AutoLayout, AnsiClass, Class, Sealed
  Type parameter: T
  Type parameter: TResult
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, Object[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Utilities.Creator`1[T]: AutoLayout, AnsiClass, Class, Sealed
  Type parameter: T
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Utilities.MiscellaneousUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Assert(Boolean, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ValueEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    CreateArgumentOutOfRangeException(String, Object, String): PrivateScope, Public, Static, HideBySig
    ToString(Object): PrivateScope, Public, Static, HideBySig
    ByteArrayCompare(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    GetPrefix(String): PrivateScope, Public, Static, HideBySig
    GetLocalName(String): PrivateScope, Public, Static, HideBySig
    GetQualifiedNameParts(String, String&(Out), String&(Out)): PrivateScope, Public, Static, HideBySig
    GetRegexOptions(String): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Utilities.ReflectionDelegateFactory: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    CreateGet(MemberInfo): PrivateScope, Public, HideBySig
    CreateSet(MemberInfo): PrivateScope, Public, HideBySig
    CreateMethodCall(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateParameterizedConstructor(MethodBase): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateDefaultConstructor(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateGet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateGet(FieldInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSet(FieldInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSet(PropertyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Newtonsoft.Json.Utilities.ReflectionMember: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type MemberType 'get set' : 
    System.Func`2[System.Object,System.Object] Getter 'get set' : 
    System.Action`2[System.Object,System.Object] Setter 'get set' : 
  Methods:
    get_MemberType(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Getter(): PrivateScope, Public, HideBySig, SpecialName
    set_Getter(Func`2): PrivateScope, Public, HideBySig, SpecialName
    get_Setter(): PrivateScope, Public, HideBySig, SpecialName
    set_Setter(Action`2): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Utilities.ReflectionObject: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Properties:
    Newtonsoft.Json.Serialization.ObjectConstructor`1[System.Object] Creator 'get ' : 
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Utilities.ReflectionMember] Members 'get ' : 
  Methods:
    get_Creator(): PrivateScope, Public, HideBySig, SpecialName
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
    GetValue(Object, String): PrivateScope, Public, HideBySig
    SetValue(Object, String, Object): PrivateScope, Public, HideBySig
    GetType(String): PrivateScope, Public, HideBySig
    Create(Type, String[]): PrivateScope, Public, Static, HideBySig
    Create(Type, MethodBase, String[]): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.ReflectionUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    System.Type[] EmptyTypes : Public, Static, InitOnly
  Methods:
    IsVirtual(PropertyInfo): PrivateScope, Public, Static, HideBySig
    GetBaseDefinition(PropertyInfo): PrivateScope, Public, Static, HideBySig
    IsPublic(PropertyInfo): PrivateScope, Public, Static, HideBySig
    GetObjectType(Object): PrivateScope, Public, Static, HideBySig
    GetTypeName(Type, TypeNameAssemblyFormatHandling, ISerializationBinder): PrivateScope, Public, Static, HideBySig
    HasDefaultConstructor(Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetDefaultConstructor(Type): PrivateScope, Public, Static, HideBySig
    GetDefaultConstructor(Type, Boolean): PrivateScope, Public, Static, HideBySig
    IsNullable(Type): PrivateScope, Public, Static, HideBySig
    IsNullableType(Type): PrivateScope, Public, Static, HideBySig
    EnsureNotNullableType(Type): PrivateScope, Public, Static, HideBySig
    EnsureNotByRefType(Type): PrivateScope, Public, Static, HideBySig
    IsGenericDefinition(Type, Type): PrivateScope, Public, Static, HideBySig
    ImplementsGenericDefinition(Type, Type): PrivateScope, Public, Static, HideBySig
    ImplementsGenericDefinition(Type, Type, Type&(Out)): PrivateScope, Public, Static, HideBySig
    InheritsGenericDefinition(Type, Type): PrivateScope, Public, Static, HideBySig
    InheritsGenericDefinition(Type, Type, Type&(Out)): PrivateScope, Public, Static, HideBySig
    GetCollectionItemType(Type): PrivateScope, Public, Static, HideBySig
    GetDictionaryKeyValueTypes(Type, Type&(Out), Type&(Out)): PrivateScope, Public, Static, HideBySig
    GetMemberUnderlyingType(MemberInfo): PrivateScope, Public, Static, HideBySig
    IsByRefLikeType(Type): PrivateScope, Public, Static, HideBySig
    IsIndexedProperty(PropertyInfo): PrivateScope, Public, Static, HideBySig
    GetMemberValue(MemberInfo, Object): PrivateScope, Public, Static, HideBySig
    SetMemberValue(MemberInfo, Object, Object): PrivateScope, Public, Static, HideBySig
    CanReadMemberValue(MemberInfo, Boolean): PrivateScope, Public, Static, HideBySig
    CanSetMemberValue(MemberInfo, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    GetFieldsAndProperties(Type, BindingFlags): PrivateScope, Public, Static, HideBySig
    GetAttribute(Object): PrivateScope, Public, Static, HideBySig
    GetAttribute(Object, Boolean): PrivateScope, Public, Static, HideBySig
    GetAttributes(Object, Boolean): PrivateScope, Public, Static, HideBySig
    GetAttributes(Object, Type, Boolean): PrivateScope, Public, Static, HideBySig
    SplitFullyQualifiedTypeName(String): PrivateScope, Public, Static, HideBySig
    GetMemberInfoFromType(Type, MemberInfo): PrivateScope, Public, Static, HideBySig
    GetFields(Type, BindingFlags): PrivateScope, Public, Static, HideBySig
    GetProperties(Type, BindingFlags): PrivateScope, Public, Static, HideBySig
    RemoveFlag(BindingFlags, BindingFlags): PrivateScope, Public, Static, HideBySig
    IsMethodOverridden(Type, Type, String): PrivateScope, Public, Static, HideBySig
    GetDefaultValue(Type): PrivateScope, Public, Static, HideBySig
Struct Newtonsoft.Json.Utilities.StringBuffer: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Newtonsoft.Json.IArrayPool`1[System.Char], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Position 'get set' : 
    Boolean IsEmpty 'get ' : 
    Char[] InternalBuffer 'get ' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    Append(IArrayPool`1, Char): PrivateScope, Public, HideBySig
    Append(IArrayPool`1, Char[], Int32, Int32): PrivateScope, Public, HideBySig
    Clear(IArrayPool`1): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(Int32, Int32): PrivateScope, Public, HideBySig
    get_InternalBuffer(): PrivateScope, Public, HideBySig, SpecialName
Struct Newtonsoft.Json.Utilities.StringReference: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Char[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Char Item [Int32] 'get ' : 
    Char[] Chars 'get ' : 
    Int32 StartIndex 'get ' : 
    Int32 Length 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Chars(): PrivateScope, Public, HideBySig, SpecialName
    get_StartIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Utilities.StringReferenceExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IndexOf(StringReference, Char, Int32, Int32): PrivateScope, Public, Static, HideBySig
    StartsWith(StringReference, String): PrivateScope, Public, Static, HideBySig
    EndsWith(StringReference, String): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.StringUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String CarriageReturnLineFeed = 
 : Public, Static, Literal, HasDefault
    System.String Empty =  : Public, Static, Literal, HasDefault
    Char CarriageReturn =  : Public, Static, Literal, HasDefault
    Char LineFeed = 
 : Public, Static, Literal, HasDefault
    Char Tab = 	 : Public, Static, Literal, HasDefault
  Methods:
    IsNullOrEmpty(String): PrivateScope, Public, Static, HideBySig
    FormatWith(String, IFormatProvider, Object): PrivateScope, Public, Static, HideBySig
    FormatWith(String, IFormatProvider, Object, Object): PrivateScope, Public, Static, HideBySig
    FormatWith(String, IFormatProvider, Object, Object, Object): PrivateScope, Public, Static, HideBySig
    FormatWith(String, IFormatProvider, Object, Object, Object, Object): PrivateScope, Public, Static, HideBySig
    IsWhiteSpace(String): PrivateScope, Public, Static, HideBySig
    CreateStringWriter(Int32): PrivateScope, Public, Static, HideBySig
    ToCharAsUnicode(Char, Char[]): PrivateScope, Public, Static, HideBySig
    ForgivingCaseSensitiveFind(IEnumerable`1, Func`2, String): PrivateScope, Public, Static, HideBySig
    ToCamelCase(String): PrivateScope, Public, Static, HideBySig
    ToSnakeCase(String): PrivateScope, Public, Static, HideBySig
    ToKebabCase(String): PrivateScope, Public, Static, HideBySig
    IsHighSurrogate(Char): PrivateScope, Public, Static, HideBySig
    IsLowSurrogate(Char): PrivateScope, Public, Static, HideBySig
    StartsWith(String, Char): PrivateScope, Public, Static, HideBySig
    EndsWith(String, Char): PrivateScope, Public, Static, HideBySig
    Trim(String, Int32, Int32): PrivateScope, Public, Static, HideBySig
Struct Newtonsoft.Json.Utilities.StructMultiKey`2[T1,T2]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  :System.ValueType
    Void .ctor(T1, T2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Newtonsoft.Json.Utilities.StructMultiKey`2[T1,T2]]
  Fields:
    T1 Value1 : Public, InitOnly
    T2 Value2 : Public, InitOnly
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(StructMultiKey`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Utilities.ThreadSafeStore`2[TKey,TValue]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(System.Func`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Get(TKey): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Utilities.TypeExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Method(Delegate): PrivateScope, Public, Static, HideBySig
    MemberType(MemberInfo): PrivateScope, Public, Static, HideBySig
    ContainsGenericParameters(Type): PrivateScope, Public, Static, HideBySig
    IsInterface(Type): PrivateScope, Public, Static, HideBySig
    IsGenericType(Type): PrivateScope, Public, Static, HideBySig
    IsGenericTypeDefinition(Type): PrivateScope, Public, Static, HideBySig
    BaseType(Type): PrivateScope, Public, Static, HideBySig
    Assembly(Type): PrivateScope, Public, Static, HideBySig
    IsEnum(Type): PrivateScope, Public, Static, HideBySig
    IsClass(Type): PrivateScope, Public, Static, HideBySig
    IsSealed(Type): PrivateScope, Public, Static, HideBySig
    IsAbstract(Type): PrivateScope, Public, Static, HideBySig
    IsVisible(Type): PrivateScope, Public, Static, HideBySig
    IsValueType(Type): PrivateScope, Public, Static, HideBySig
    IsPrimitive(Type): PrivateScope, Public, Static, HideBySig
    AssignableToTypeName(Type, String, Boolean, Type&(Out)): PrivateScope, Public, Static, HideBySig
    AssignableToTypeName(Type, String, Boolean): PrivateScope, Public, Static, HideBySig
    ImplementInterface(Type, Type): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.ValidationUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ArgumentNotNull(Object, String): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Serialization.CachedAttributeGetter`1[T]: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Type parameter: T, System.Attribute
  Methods:
    GetAttribute(Object): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Serialization.CamelCaseNamingStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.NamingStrategy
    Void .ctor(Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.DefaultContractResolver
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ResolveContract(Type): PrivateScope, Public, Virtual, HideBySig
    GetNameTable(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Newtonsoft.Json.Serialization.DefaultContractResolver: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IContractResolver
  Properties:
    Newtonsoft.Json.Serialization.IContractResolver Instance 'get ' : 
    Boolean DynamicCodeGeneration 'get ' : 
    System.Reflection.BindingFlags DefaultMembersSearchFlags 'get set' :  (Obsolete)
    Boolean SerializeCompilerGeneratedMembers 'get set' : 
    Boolean IgnoreSerializableInterface 'get set' : 
    Boolean IgnoreSerializableAttribute 'get set' : 
    Boolean IgnoreIsSpecifiedMembers 'get set' : 
    Boolean IgnoreShouldSerializeMembers 'get set' : 
    Newtonsoft.Json.Serialization.NamingStrategy NamingStrategy 'get set' : 
  Methods:
    get_Instance(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DynamicCodeGeneration(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultMembersSearchFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultMembersSearchFlags(BindingFlags): PrivateScope, Public, HideBySig, SpecialName
    get_SerializeCompilerGeneratedMembers(): PrivateScope, Public, HideBySig, SpecialName
    set_SerializeCompilerGeneratedMembers(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreSerializableInterface(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreSerializableInterface(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreSerializableAttribute(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreSerializableAttribute(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreIsSpecifiedMembers(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreIsSpecifiedMembers(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreShouldSerializeMembers(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreShouldSerializeMembers(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NamingStrategy(): PrivateScope, Public, HideBySig, SpecialName
    set_NamingStrategy(NamingStrategy): PrivateScope, Public, HideBySig, SpecialName
    ResolveContract(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsJsonPrimitiveType(Type): PrivateScope, Assembly, Static, HideBySig
    IsIConvertible(Type): PrivateScope, Assembly, Static, HideBySig
    CanConvertToString(Type): PrivateScope, Assembly, Static, HideBySig
    GetClrTypeFullName(Type): PrivateScope, Assembly, Static, HideBySig
    GetNameTable(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetResolvedPropertyName(String): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Serialization.DefaultNamingStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.NamingStrategy
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Serialization.DefaultReferenceResolver: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IReferenceResolver
  Methods:
    ResolveReference(Object, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetReference(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddReference(Object, String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsReferenced(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.DefaultSerializationBinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Runtime.Serialization.SerializationBinder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.ISerializationBinder
  Fields:
    Newtonsoft.Json.Serialization.DefaultSerializationBinder Instance : Assembly, Static, InitOnly
  Methods:
    BindToType(String, String): PrivateScope, Public, Virtual, HideBySig
    BindToName(Type, String&(Out), String&(Out)): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Serialization.DiagnosticsTraceWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.ITraceWriter
  Properties:
    System.Diagnostics.TraceLevel LevelFilter 'get set' : 
  Methods:
    get_LevelFilter(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LevelFilter(TraceLevel): PrivateScope, Public, HideBySig, SpecialName
    Trace(TraceLevel, String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.DynamicValueProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Reflection.MemberInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IValueProvider
  Methods:
    SetValue(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetValue(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.ErrorContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object, System.Object, System.String, System.Exception): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Traced 'get set' : 
    System.Exception Error 'get ' : 
    System.Object OriginalObject 'get ' : 
    System.Object Member 'get ' : 
    System.String Path 'get ' : 
    Boolean Handled 'get set' : 
  Methods:
    get_Traced(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Traced(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalObject(): PrivateScope, Public, HideBySig, SpecialName
    get_Member(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    get_Handled(): PrivateScope, Public, HideBySig, SpecialName
    set_Handled(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.ErrorEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.Object, Newtonsoft.Json.Serialization.ErrorContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object CurrentObject 'get ' : 
    Newtonsoft.Json.Serialization.ErrorContext ErrorContext 'get ' : 
  Methods:
    get_CurrentObject(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorContext(): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.ExpressionValueProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Reflection.MemberInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IValueProvider
  Methods:
    SetValue(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetValue(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Newtonsoft.Json.Serialization.IAttributeProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetAttributes(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAttributes(Type, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Newtonsoft.Json.Serialization.IContractResolver: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ResolveContract(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Newtonsoft.Json.Serialization.IReferenceResolver: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ResolveReference(Object, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetReference(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsReferenced(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddReference(Object, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Newtonsoft.Json.Serialization.ISerializationBinder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    BindToType(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BindToName(Type, String&(Out), String&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Newtonsoft.Json.Serialization.ITraceWriter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Diagnostics.TraceLevel LevelFilter 'get ' : 
  Methods:
    get_LevelFilter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Trace(TraceLevel, String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Newtonsoft.Json.Serialization.IValueProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    SetValue(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetValue(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Newtonsoft.Json.Serialization.JsonArrayContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContainerContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type CollectionItemType 'get ' : 
    Boolean IsMultidimensionalArray 'get ' : 
    Boolean IsArray 'get ' : 
    Boolean ShouldCreateWrapper 'get ' : 
    Boolean CanDeserialize 'get set' : 
    Newtonsoft.Json.Serialization.ObjectConstructor`1[System.Object] ParameterizedCreator 'get ' : 
    Newtonsoft.Json.Serialization.ObjectConstructor`1[System.Object] OverrideCreator 'get set' : 
    Boolean HasParameterizedCreator 'get set' : 
    Boolean HasParameterizedCreatorInternal 'get ' : 
  Methods:
    get_CollectionItemType(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMultidimensionalArray(): PrivateScope, Public, HideBySig, SpecialName
    get_IsArray(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldCreateWrapper(): PrivateScope, Assembly, HideBySig, SpecialName
    get_CanDeserialize(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ParameterizedCreator(): PrivateScope, Assembly, HideBySig, SpecialName
    get_OverrideCreator(): PrivateScope, Public, HideBySig, SpecialName
    set_OverrideCreator(ObjectConstructor`1): PrivateScope, Public, HideBySig, SpecialName
    get_HasParameterizedCreator(): PrivateScope, Public, HideBySig, SpecialName
    set_HasParameterizedCreator(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasParameterizedCreatorInternal(): PrivateScope, Assembly, HideBySig, SpecialName
    CreateWrapper(Object): PrivateScope, Assembly, HideBySig
    CreateTemporaryCollection(): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.Serialization.JsonContainerContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContract
    Void .ctor(System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Serialization.JsonContract ItemContract 'get set' : 
    Newtonsoft.Json.Serialization.JsonContract FinalItemContract 'get ' : 
    Newtonsoft.Json.JsonConverter ItemConverter 'get set' : 
    System.Nullable`1[System.Boolean] ItemIsReference 'get set' : 
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] ItemReferenceLoopHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] ItemTypeNameHandling 'get set' : 
  Methods:
    get_ItemContract(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ItemContract(JsonContract): PrivateScope, Assembly, HideBySig, SpecialName
    get_FinalItemContract(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ItemConverter(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemConverter(JsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_ItemIsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemIsReference(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemReferenceLoopHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemTypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemTypeNameHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
Struct Newtonsoft.Json.Serialization.JsonContractType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Serialization.JsonContractType None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Object = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Array = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Primitive = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType String = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Dictionary = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Dynamic = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Serializable = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Serialization.JsonContractType Linq = 8 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Serialization.SerializationCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, StreamingContext, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.SerializationErrorCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, StreamingContext, ErrorContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, StreamingContext, ErrorContext, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.ExtensionDataSetter: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, String, Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.ExtensionDataGetter: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.JsonContract: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean IsNullable : Assembly
    Boolean IsConvertable : Assembly
    Boolean IsEnum : Assembly
    System.Type NonNullableUnderlyingType : Assembly
    Newtonsoft.Json.ReadType InternalReadType : Assembly
    Newtonsoft.Json.Serialization.JsonContractType ContractType : Assembly
    Boolean IsReadOnlyOrFixedSize : Assembly
    Boolean IsSealed : Assembly
    Boolean IsInstantiable : Assembly
  Properties:
    System.Type UnderlyingType 'get ' : 
    System.Type CreatedType 'get set' : 
    System.Nullable`1[System.Boolean] IsReference 'get set' : 
    Newtonsoft.Json.JsonConverter Converter 'get set' : 
    Newtonsoft.Json.JsonConverter InternalConverter 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Serialization.SerializationCallback] OnDeserializedCallbacks 'get ' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Serialization.SerializationCallback] OnDeserializingCallbacks 'get ' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Serialization.SerializationCallback] OnSerializedCallbacks 'get ' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Serialization.SerializationCallback] OnSerializingCallbacks 'get ' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Serialization.SerializationErrorCallback] OnErrorCallbacks 'get ' : 
    System.Func`1[System.Object] DefaultCreator 'get set' : 
    Boolean DefaultCreatorNonPublic 'get set' : 
  Methods:
    get_UnderlyingType(): PrivateScope, Public, HideBySig, SpecialName
    get_CreatedType(): PrivateScope, Public, HideBySig, SpecialName
    set_CreatedType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_IsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReference(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Converter(): PrivateScope, Public, HideBySig, SpecialName
    set_Converter(JsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_InternalConverter(): PrivateScope, Public, HideBySig, SpecialName
    set_InternalConverter(JsonConverter): PrivateScope, Assembly, HideBySig, SpecialName
    get_OnDeserializedCallbacks(): PrivateScope, Public, HideBySig, SpecialName
    get_OnDeserializingCallbacks(): PrivateScope, Public, HideBySig, SpecialName
    get_OnSerializedCallbacks(): PrivateScope, Public, HideBySig, SpecialName
    get_OnSerializingCallbacks(): PrivateScope, Public, HideBySig, SpecialName
    get_OnErrorCallbacks(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultCreator(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultCreator(Func`1): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultCreatorNonPublic(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultCreatorNonPublic(Boolean): PrivateScope, Public, HideBySig, SpecialName
    InvokeOnSerializing(Object, StreamingContext): PrivateScope, Assembly, HideBySig
    InvokeOnSerialized(Object, StreamingContext): PrivateScope, Assembly, HideBySig
    InvokeOnDeserializing(Object, StreamingContext): PrivateScope, Assembly, HideBySig
    InvokeOnDeserialized(Object, StreamingContext): PrivateScope, Assembly, HideBySig
    InvokeOnError(Object, StreamingContext, ErrorContext): PrivateScope, Assembly, HideBySig
    CreateSerializationCallback(MethodInfo): PrivateScope, Assembly, Static, HideBySig
    CreateSerializationErrorCallback(MethodInfo): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Serialization.JsonDictionaryContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContainerContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Func`2[System.String,System.String] DictionaryKeyResolver 'get set' : 
    System.Type DictionaryKeyType 'get ' : 
    System.Type DictionaryValueType 'get ' : 
    Newtonsoft.Json.Serialization.JsonContract KeyContract 'get set' : 
    Boolean ShouldCreateWrapper 'get ' : 
    Newtonsoft.Json.Serialization.ObjectConstructor`1[System.Object] ParameterizedCreator 'get ' : 
    Newtonsoft.Json.Serialization.ObjectConstructor`1[System.Object] OverrideCreator 'get set' : 
    Boolean HasParameterizedCreator 'get set' : 
    Boolean HasParameterizedCreatorInternal 'get ' : 
  Methods:
    get_DictionaryKeyResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_DictionaryKeyResolver(Func`2): PrivateScope, Public, HideBySig, SpecialName
    get_DictionaryKeyType(): PrivateScope, Public, HideBySig, SpecialName
    get_DictionaryValueType(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyContract(): PrivateScope, Assembly, HideBySig, SpecialName
    set_KeyContract(JsonContract): PrivateScope, Assembly, HideBySig, SpecialName
    get_ShouldCreateWrapper(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ParameterizedCreator(): PrivateScope, Assembly, HideBySig, SpecialName
    get_OverrideCreator(): PrivateScope, Public, HideBySig, SpecialName
    set_OverrideCreator(ObjectConstructor`1): PrivateScope, Public, HideBySig, SpecialName
    get_HasParameterizedCreator(): PrivateScope, Public, HideBySig, SpecialName
    set_HasParameterizedCreator(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasParameterizedCreatorInternal(): PrivateScope, Assembly, HideBySig, SpecialName
    CreateWrapper(Object): PrivateScope, Assembly, HideBySig
    CreateTemporaryDictionary(): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.Serialization.JsonDynamicContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContainerContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Serialization.JsonPropertyCollection Properties 'get ' : 
    System.Func`2[System.String,System.String] PropertyNameResolver 'get set' : 
  Methods:
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyNameResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyNameResolver(Func`2): PrivateScope, Public, HideBySig, SpecialName
    TryGetMember(IDynamicMetaObjectProvider, String, Object&(Out)): PrivateScope, Assembly, HideBySig
    TrySetMember(IDynamicMetaObjectProvider, String, Object): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.Serialization.JsonFormatterConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.IFormatterConverter
  Methods:
    Convert(Object, Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Convert(Object, TypeCode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToBoolean(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToByte(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToChar(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToDateTime(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToDecimal(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToDouble(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToInt16(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToInt32(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToInt64(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToSByte(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToSingle(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToUInt16(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToUInt32(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToUInt64(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.JsonISerializableContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContainerContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Serialization.ObjectConstructor`1[System.Object] ISerializableCreator 'get set' : 
  Methods:
    get_ISerializableCreator(): PrivateScope, Public, HideBySig, SpecialName
    set_ISerializableCreator(ObjectConstructor`1): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.JsonLinqContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Serialization.JsonObjectContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContainerContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean ExtensionDataIsJToken : Assembly
  Properties:
    Newtonsoft.Json.MemberSerialization MemberSerialization 'get set' : 
    System.Nullable`1[Newtonsoft.Json.MissingMemberHandling] MissingMemberHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.Required] ItemRequired 'get set' : 
    System.Nullable`1[Newtonsoft.Json.NullValueHandling] ItemNullValueHandling 'get set' : 
    Newtonsoft.Json.Serialization.JsonPropertyCollection Properties 'get ' : 
    Newtonsoft.Json.Serialization.JsonPropertyCollection CreatorParameters 'get ' : 
    Newtonsoft.Json.Serialization.ObjectConstructor`1[System.Object] OverrideCreator 'get set' : 
    Newtonsoft.Json.Serialization.ObjectConstructor`1[System.Object] ParameterizedCreator 'get set' : 
    Newtonsoft.Json.Serialization.ExtensionDataSetter ExtensionDataSetter 'get set' : 
    Newtonsoft.Json.Serialization.ExtensionDataGetter ExtensionDataGetter 'get set' : 
    System.Type ExtensionDataValueType 'get set' : 
    System.Func`2[System.String,System.String] ExtensionDataNameResolver 'get set' : 
    Boolean HasRequiredOrDefaultValueProperties 'get ' : 
  Methods:
    get_MemberSerialization(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberSerialization(MemberSerialization): PrivateScope, Public, HideBySig, SpecialName
    get_MissingMemberHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_MissingMemberHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemRequired(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemRequired(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemNullValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemNullValueHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    get_CreatorParameters(): PrivateScope, Public, HideBySig, SpecialName
    get_OverrideCreator(): PrivateScope, Public, HideBySig, SpecialName
    set_OverrideCreator(ObjectConstructor`1): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterizedCreator(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ParameterizedCreator(ObjectConstructor`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_ExtensionDataSetter(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtensionDataSetter(ExtensionDataSetter): PrivateScope, Public, HideBySig, SpecialName
    get_ExtensionDataGetter(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtensionDataGetter(ExtensionDataGetter): PrivateScope, Public, HideBySig, SpecialName
    get_ExtensionDataValueType(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtensionDataValueType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_ExtensionDataNameResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtensionDataNameResolver(Func`2): PrivateScope, Public, HideBySig, SpecialName
    get_HasRequiredOrDefaultValueProperties(): PrivateScope, Assembly, HideBySig, SpecialName
    GetUninitializedObject(): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.Serialization.JsonPrimitiveContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode 'get set' : 
  Methods:
    get_TypeCode(): PrivateScope, Assembly, HideBySig, SpecialName
    set_TypeCode(PrimitiveTypeCode): PrivateScope, Assembly, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.JsonProperty: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[Newtonsoft.Json.Required] _required : Assembly
    Boolean _hasExplicitDefaultValue : Assembly
    Boolean _skipPropertyNameEscape : Assembly
  Properties:
    Newtonsoft.Json.Serialization.JsonContract PropertyContract 'get set' : 
    System.String PropertyName 'get set' : 
    System.Type DeclaringType 'get set' : 
    System.Nullable`1[System.Int32] Order 'get set' : 
    System.String UnderlyingName 'get set' : 
    Newtonsoft.Json.Serialization.IValueProvider ValueProvider 'get set' : 
    Newtonsoft.Json.Serialization.IAttributeProvider AttributeProvider 'get set' : 
    System.Type PropertyType 'get set' : 
    Newtonsoft.Json.JsonConverter Converter 'get set' : 
    Newtonsoft.Json.JsonConverter MemberConverter 'get set' :  (Obsolete)
    Boolean Ignored 'get set' : 
    Boolean Readable 'get set' : 
    Boolean Writable 'get set' : 
    Boolean HasMemberAttribute 'get set' : 
    System.Object DefaultValue 'get set' : 
    Newtonsoft.Json.Required Required 'get set' : 
    Boolean IsRequiredSpecified 'get ' : 
    System.Nullable`1[System.Boolean] IsReference 'get set' : 
    System.Nullable`1[Newtonsoft.Json.NullValueHandling] NullValueHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.DefaultValueHandling] DefaultValueHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] ReferenceLoopHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.ObjectCreationHandling] ObjectCreationHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] TypeNameHandling 'get set' : 
    System.Predicate`1[System.Object] ShouldSerialize 'get set' : 
    System.Predicate`1[System.Object] ShouldDeserialize 'get set' : 
    System.Predicate`1[System.Object] GetIsSpecified 'get set' : 
    System.Action`2[System.Object,System.Object] SetIsSpecified 'get set' : 
    Newtonsoft.Json.JsonConverter ItemConverter 'get set' : 
    System.Nullable`1[System.Boolean] ItemIsReference 'get set' : 
    System.Nullable`1[Newtonsoft.Json.TypeNameHandling] ItemTypeNameHandling 'get set' : 
    System.Nullable`1[Newtonsoft.Json.ReferenceLoopHandling] ItemReferenceLoopHandling 'get set' : 
  Methods:
    get_PropertyContract(): PrivateScope, Assembly, HideBySig, SpecialName
    set_PropertyContract(JsonContract): PrivateScope, Assembly, HideBySig, SpecialName
    get_PropertyName(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyName(String): PrivateScope, Public, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, HideBySig, SpecialName
    set_DeclaringType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    set_Order(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_UnderlyingName(): PrivateScope, Public, HideBySig, SpecialName
    set_UnderlyingName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ValueProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueProvider(IValueProvider): PrivateScope, Public, HideBySig, SpecialName
    get_AttributeProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_AttributeProvider(IAttributeProvider): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyType(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Converter(): PrivateScope, Public, HideBySig, SpecialName
    set_Converter(JsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_MemberConverter(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberConverter(JsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_Ignored(): PrivateScope, Public, HideBySig, SpecialName
    set_Ignored(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Readable(): PrivateScope, Public, HideBySig, SpecialName
    set_Readable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Writable(): PrivateScope, Public, HideBySig, SpecialName
    set_Writable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HasMemberAttribute(): PrivateScope, Public, HideBySig, SpecialName
    set_HasMemberAttribute(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValue(Object): PrivateScope, Public, HideBySig, SpecialName
    GetResolvedDefaultValue(): PrivateScope, Assembly, HideBySig
    get_Required(): PrivateScope, Public, HideBySig, SpecialName
    set_Required(Required): PrivateScope, Public, HideBySig, SpecialName
    get_IsRequiredSpecified(): PrivateScope, Public, HideBySig, SpecialName
    get_IsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReference(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_NullValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_NullValueHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValueHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceLoopHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectCreationHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectCreationHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_TypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeNameHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ShouldSerialize(): PrivateScope, Public, HideBySig, SpecialName
    set_ShouldSerialize(Predicate`1): PrivateScope, Public, HideBySig, SpecialName
    get_ShouldDeserialize(): PrivateScope, Public, HideBySig, SpecialName
    set_ShouldDeserialize(Predicate`1): PrivateScope, Public, HideBySig, SpecialName
    get_GetIsSpecified(): PrivateScope, Public, HideBySig, SpecialName
    set_GetIsSpecified(Predicate`1): PrivateScope, Public, HideBySig, SpecialName
    get_SetIsSpecified(): PrivateScope, Public, HideBySig, SpecialName
    set_SetIsSpecified(Action`2): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_ItemConverter(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemConverter(JsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_ItemIsReference(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemIsReference(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemTypeNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemTypeNameHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemReferenceLoopHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemReferenceLoopHandling(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    WritePropertyName(JsonWriter): PrivateScope, Assembly, HideBySig
Class Newtonsoft.Json.Serialization.JsonPropertyCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.ObjectModel.KeyedCollection`2[System.String,Newtonsoft.Json.Serialization.JsonProperty]
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddProperty(JsonProperty): PrivateScope, Public, HideBySig
    GetClosestMatchProperty(String): PrivateScope, Public, HideBySig
    GetProperty(String, StringComparison): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Serialization.JsonSerializerInternalBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Fields:
    Newtonsoft.Json.JsonSerializer Serializer : Assembly, InitOnly
    Newtonsoft.Json.Serialization.ITraceWriter TraceWriter : Assembly, InitOnly
  Properties:
    Newtonsoft.Json.Utilities.BidirectionalDictionary`2[System.String,System.Object] DefaultReferenceMappings 'get ' : 
  Methods:
    get_DefaultReferenceMappings(): PrivateScope, Assembly, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.JsonSerializerInternalReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonSerializerInternalBase
    Void .ctor(Newtonsoft.Json.JsonSerializer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Populate(JsonReader, Object): PrivateScope, Public, HideBySig
    Deserialize(JsonReader, Type, Boolean): PrivateScope, Public, HideBySig
    GetExpectedDescription(JsonContract): PrivateScope, Assembly, HideBySig
    CreateISerializableItem(JToken, Type, JsonISerializableContract, JsonProperty): PrivateScope, Assembly, HideBySig
    CreateNewObject(JsonReader, JsonObjectContract, JsonProperty, JsonProperty, String, Boolean&(Out)): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Serialization.JsonSerializerInternalWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonSerializerInternalBase
    Void .ctor(Newtonsoft.Json.JsonSerializer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Serialize(JsonWriter, Object, Type): PrivateScope, Public, HideBySig
    TryConvertToString(Object, Type, String&(Out)): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Serialization.JsonSerializerProxy: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.JsonSerializer
    Void .ctor(Newtonsoft.Json.Serialization.JsonSerializerInternalReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Serialization.IReferenceResolver ReferenceResolver 'get set' : 
    Newtonsoft.Json.Serialization.ITraceWriter TraceWriter 'get set' : 
    System.Collections.IEqualityComparer EqualityComparer 'get set' : 
    Newtonsoft.Json.JsonConverterCollection Converters 'get ' : 
    Newtonsoft.Json.DefaultValueHandling DefaultValueHandling 'get set' : 
    Newtonsoft.Json.Serialization.IContractResolver ContractResolver 'get set' : 
    Newtonsoft.Json.MissingMemberHandling MissingMemberHandling 'get set' : 
    Newtonsoft.Json.NullValueHandling NullValueHandling 'get set' : 
    Newtonsoft.Json.ObjectCreationHandling ObjectCreationHandling 'get set' : 
    Newtonsoft.Json.ReferenceLoopHandling ReferenceLoopHandling 'get set' : 
    Newtonsoft.Json.PreserveReferencesHandling PreserveReferencesHandling 'get set' : 
    Newtonsoft.Json.TypeNameHandling TypeNameHandling 'get set' : 
    Newtonsoft.Json.MetadataPropertyHandling MetadataPropertyHandling 'get set' : 
    System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TypeNameAssemblyFormat 'get set' :  (Obsolete)
    Newtonsoft.Json.TypeNameAssemblyFormatHandling TypeNameAssemblyFormatHandling 'get set' : 
    Newtonsoft.Json.ConstructorHandling ConstructorHandling 'get set' : 
    System.Runtime.Serialization.SerializationBinder Binder 'get set' :  (Obsolete)
    Newtonsoft.Json.Serialization.ISerializationBinder SerializationBinder 'get set' : 
    System.Runtime.Serialization.StreamingContext Context 'get set' : 
    Newtonsoft.Json.Formatting Formatting 'get set' : 
    Newtonsoft.Json.DateFormatHandling DateFormatHandling 'get set' : 
    Newtonsoft.Json.DateTimeZoneHandling DateTimeZoneHandling 'get set' : 
    Newtonsoft.Json.DateParseHandling DateParseHandling 'get set' : 
    Newtonsoft.Json.FloatFormatHandling FloatFormatHandling 'get set' : 
    Newtonsoft.Json.FloatParseHandling FloatParseHandling 'get set' : 
    Newtonsoft.Json.StringEscapeHandling StringEscapeHandling 'get set' : 
    System.String DateFormatString 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.Nullable`1[System.Int32] MaxDepth 'get set' : 
    Boolean CheckAdditionalContent 'get set' : 
  Events:
    System.EventHandler`1[Newtonsoft.Json.Serialization.ErrorEventArgs] Error: 
  Methods:
    add_Error(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, SpecialName
    remove_Error(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ReferenceResolver(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReferenceResolver(IReferenceResolver): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TraceWriter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TraceWriter(ITraceWriter): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_EqualityComparer(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_EqualityComparer(IEqualityComparer): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Converters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DefaultValueHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DefaultValueHandling(DefaultValueHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContractResolver(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ContractResolver(IContractResolver): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MissingMemberHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_MissingMemberHandling(MissingMemberHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NullValueHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_NullValueHandling(NullValueHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ObjectCreationHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ObjectCreationHandling(ObjectCreationHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ReferenceLoopHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReferenceLoopHandling(ReferenceLoopHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PreserveReferencesHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_PreserveReferencesHandling(PreserveReferencesHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TypeNameHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TypeNameHandling(TypeNameHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MetadataPropertyHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_MetadataPropertyHandling(MetadataPropertyHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TypeNameAssemblyFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TypeNameAssemblyFormat(FormatterAssemblyStyle): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TypeNameAssemblyFormatHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TypeNameAssemblyFormatHandling(TypeNameAssemblyFormatHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ConstructorHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ConstructorHandling(ConstructorHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Binder(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Binder(SerializationBinder): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SerializationBinder(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_SerializationBinder(ISerializationBinder): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Context(StreamingContext): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Formatting(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Formatting(Formatting): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DateFormatHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DateFormatHandling(DateFormatHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DateTimeZoneHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DateTimeZoneHandling(DateTimeZoneHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DateParseHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DateParseHandling(DateParseHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FloatFormatHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_FloatFormatHandling(FloatFormatHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FloatParseHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_FloatParseHandling(FloatParseHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_StringEscapeHandling(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_StringEscapeHandling(StringEscapeHandling): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DateFormatString(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DateFormatString(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_MaxDepth(Nullable`1): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CheckAdditionalContent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CheckAdditionalContent(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetInternalSerializer(): PrivateScope, Assembly, HideBySig
    DeserializeInternal(JsonReader, Type): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    PopulateInternal(JsonReader, Object): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SerializeInternal(JsonWriter, Object, Type): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Newtonsoft.Json.Serialization.JsonStringContract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.JsonPrimitiveContract
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Serialization.JsonTypeReflector: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String IdPropertyName = $id : Public, Static, Literal, HasDefault
    System.String RefPropertyName = $ref : Public, Static, Literal, HasDefault
    System.String TypePropertyName = $type : Public, Static, Literal, HasDefault
    System.String ValuePropertyName = $value : Public, Static, Literal, HasDefault
    System.String ArrayValuesPropertyName = $values : Public, Static, Literal, HasDefault
    System.String ShouldSerializePrefix = ShouldSerialize : Public, Static, Literal, HasDefault
    System.String SpecifiedPostfix = Specified : Public, Static, Literal, HasDefault
    System.String ConcurrentDictionaryTypeName = System.Collections.Concurrent.ConcurrentDictionary`2 : Public, Static, Literal, HasDefault
  Properties:
    Boolean DynamicCodeGeneration 'get ' : 
    Boolean FullyTrusted 'get ' : 
    Newtonsoft.Json.Utilities.ReflectionDelegateFactory ReflectionDelegateFactory 'get ' : 
  Methods:
    GetCachedAttribute(Object): PrivateScope, Public, Static, HideBySig
    CanTypeDescriptorConvertString(Type, TypeConverter&(Out)): PrivateScope, Public, Static, HideBySig
    GetDataContractAttribute(Type): PrivateScope, Public, Static, HideBySig
    GetDataMemberAttribute(MemberInfo): PrivateScope, Public, Static, HideBySig
    GetObjectMemberSerialization(Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetJsonConverter(Object): PrivateScope, Public, Static, HideBySig
    CreateJsonConverterInstance(Type, Object[]): PrivateScope, Public, Static, HideBySig
    CreateNamingStrategyInstance(Type, Object[]): PrivateScope, Public, Static, HideBySig
    GetContainerNamingStrategy(JsonContainerAttribute): PrivateScope, Public, Static, HideBySig
    IsNonSerializable(Object): PrivateScope, Public, Static, HideBySig
    IsSerializable(Object): PrivateScope, Public, Static, HideBySig
    GetAttribute(Object): PrivateScope, Public, Static, HideBySig
    get_DynamicCodeGeneration(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FullyTrusted(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ReflectionDelegateFactory(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.KebabCaseNamingStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.NamingStrategy
    Void .ctor(Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Serialization.MemoryTraceWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.ITraceWriter
  Properties:
    System.Diagnostics.TraceLevel LevelFilter 'get set' : 
  Methods:
    get_LevelFilter(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LevelFilter(TraceLevel): PrivateScope, Public, HideBySig, SpecialName
    Trace(TraceLevel, String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetTraceMessages(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Serialization.NamingStrategy: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Boolean ProcessDictionaryKeys 'get set' : 
    Boolean ProcessExtensionDataNames 'get set' : 
    Boolean OverrideSpecifiedNames 'get set' : 
  Methods:
    get_ProcessDictionaryKeys(): PrivateScope, Public, HideBySig, SpecialName
    set_ProcessDictionaryKeys(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ProcessExtensionDataNames(): PrivateScope, Public, HideBySig, SpecialName
    set_ProcessExtensionDataNames(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OverrideSpecifiedNames(): PrivateScope, Public, HideBySig, SpecialName
    set_OverrideSpecifiedNames(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetPropertyName(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetExtensionDataName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDictionaryKey(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Serialization.ObjectConstructor`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.OnErrorAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Serialization.ReflectionAttributeProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IAttributeProvider
  Methods:
    GetAttributes(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetAttributes(Type, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.ReflectionValueProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Reflection.MemberInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.IValueProvider
  Methods:
    SetValue(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetValue(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.SerializationBinderAdapter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Runtime.Serialization.SerializationBinder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Serialization.ISerializationBinder
  Fields:
    System.Runtime.Serialization.SerializationBinder SerializationBinder : Public, InitOnly
  Methods:
    BindToType(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BindToName(Type, String&(Out), String&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Serialization.NamingStrategy
    Void .ctor(Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Serialization.TraceJsonReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.JsonReader
    Void .ctor(Newtonsoft.Json.JsonReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.IJsonLineInfo
  Properties:
    Int32 Depth 'get ' : 
    System.String Path 'get ' : 
    Char QuoteChar 'get set' : 
    Newtonsoft.Json.JsonToken TokenType 'get ' : 
    System.Object Value 'get ' : 
    System.Type ValueType 'get ' : 
  Methods:
    GetDeserializedJsonMessage(): PrivateScope, Public, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig
    ReadAsInt32(): PrivateScope, Public, Virtual, HideBySig
    ReadAsString(): PrivateScope, Public, Virtual, HideBySig
    ReadAsBytes(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDecimal(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDouble(): PrivateScope, Public, Virtual, HideBySig
    ReadAsBoolean(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTime(): PrivateScope, Public, Virtual, HideBySig
    ReadAsDateTimeOffset(): PrivateScope, Public, Virtual, HideBySig
    WriteCurrentToken(): PrivateScope, Public, HideBySig
    get_Depth(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_QuoteChar(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TokenType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ValueType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Serialization.TraceJsonWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.JsonWriter
    Void .ctor(Newtonsoft.Json.JsonWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetSerializedJsonMessage(): PrivateScope, Public, HideBySig
    WriteValue(Decimal): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Boolean): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Char): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte[]): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTime): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTimeOffset): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Double): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteUndefined(): PrivateScope, Public, Virtual, HideBySig
    WriteNull(): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Single): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Guid): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Object): PrivateScope, Public, Virtual, HideBySig
    WriteValue(SByte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(TimeSpan): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Uri): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Nullable`1): PrivateScope, Public, Virtual, HideBySig
    WriteWhitespace(String): PrivateScope, Public, Virtual, HideBySig
    WriteComment(String): PrivateScope, Public, Virtual, HideBySig
    WriteStartArray(): PrivateScope, Public, Virtual, HideBySig
    WriteEndArray(): PrivateScope, Public, Virtual, HideBySig
    WriteStartConstructor(String): PrivateScope, Public, Virtual, HideBySig
    WriteEndConstructor(): PrivateScope, Public, Virtual, HideBySig
    WritePropertyName(String): PrivateScope, Public, Virtual, HideBySig
    WritePropertyName(String, Boolean): PrivateScope, Public, Virtual, HideBySig
    WriteStartObject(): PrivateScope, Public, Virtual, HideBySig
    WriteEndObject(): PrivateScope, Public, Virtual, HideBySig
    WriteRawValue(String): PrivateScope, Public, Virtual, HideBySig
    WriteRaw(String): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Schema.Extensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit (Obsolete)
  Methods:
    IsValid(JToken, JsonSchema): PrivateScope, Public, Static, HideBySig (Obsolete)
    IsValid(JToken, JsonSchema, IList`1&(Out)): PrivateScope, Public, Static, HideBySig (Obsolete)
    Validate(JToken, JsonSchema): PrivateScope, Public, Static, HideBySig (Obsolete)
    Validate(JToken, JsonSchema, ValidationEventHandler): PrivateScope, Public, Static, HideBySig (Obsolete)
Class Newtonsoft.Json.Schema.JsonSchema: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Id 'get set' : 
    System.String Title 'get set' : 
    System.Nullable`1[System.Boolean] Required 'get set' : 
    System.Nullable`1[System.Boolean] ReadOnly 'get set' : 
    System.Nullable`1[System.Boolean] Hidden 'get set' : 
    System.Nullable`1[System.Boolean] Transient 'get set' : 
    System.String Description 'get set' : 
    System.Nullable`1[Newtonsoft.Json.Schema.JsonSchemaType] Type 'get set' : 
    System.String Pattern 'get set' : 
    System.Nullable`1[System.Int32] MinimumLength 'get set' : 
    System.Nullable`1[System.Int32] MaximumLength 'get set' : 
    System.Nullable`1[System.Double] DivisibleBy 'get set' : 
    System.Nullable`1[System.Double] Minimum 'get set' : 
    System.Nullable`1[System.Double] Maximum 'get set' : 
    System.Nullable`1[System.Boolean] ExclusiveMinimum 'get set' : 
    System.Nullable`1[System.Boolean] ExclusiveMaximum 'get set' : 
    System.Nullable`1[System.Int32] MinimumItems 'get set' : 
    System.Nullable`1[System.Int32] MaximumItems 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Schema.JsonSchema] Items 'get set' : 
    Boolean PositionalItemsValidation 'get set' : 
    Newtonsoft.Json.Schema.JsonSchema AdditionalItems 'get set' : 
    Boolean AllowAdditionalItems 'get set' : 
    Boolean UniqueItems 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchema] Properties 'get set' : 
    Newtonsoft.Json.Schema.JsonSchema AdditionalProperties 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchema] PatternProperties 'get set' : 
    Boolean AllowAdditionalProperties 'get set' : 
    System.String Requires 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Linq.JToken] Enum 'get set' : 
    System.Nullable`1[Newtonsoft.Json.Schema.JsonSchemaType] Disallow 'get set' : 
    Newtonsoft.Json.Linq.JToken Default 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Schema.JsonSchema] Extends 'get set' : 
    System.String Format 'get set' : 
    System.String Location 'get set' : 
    System.String InternalId 'get ' : 
    System.String DeferredReference 'get set' : 
    Boolean ReferencesResolved 'get set' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    set_Id(String): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    get_Required(): PrivateScope, Public, HideBySig, SpecialName
    set_Required(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnly(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Hidden(): PrivateScope, Public, HideBySig, SpecialName
    set_Hidden(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Transient(): PrivateScope, Public, HideBySig, SpecialName
    set_Transient(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    set_Pattern(String): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MinimumLength(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumLength(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_DivisibleBy(): PrivateScope, Public, HideBySig, SpecialName
    set_DivisibleBy(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    set_Minimum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    set_Maximum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ExclusiveMinimum(): PrivateScope, Public, HideBySig, SpecialName
    set_ExclusiveMinimum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ExclusiveMaximum(): PrivateScope, Public, HideBySig, SpecialName
    set_ExclusiveMaximum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumItems(): PrivateScope, Public, HideBySig, SpecialName
    set_MinimumItems(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumItems(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumItems(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
    set_Items(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_PositionalItemsValidation(): PrivateScope, Public, HideBySig, SpecialName
    set_PositionalItemsValidation(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalItems(): PrivateScope, Public, HideBySig, SpecialName
    set_AdditionalItems(JsonSchema): PrivateScope, Public, HideBySig, SpecialName
    get_AllowAdditionalItems(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowAdditionalItems(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UniqueItems(): PrivateScope, Public, HideBySig, SpecialName
    set_UniqueItems(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    set_Properties(IDictionary`2): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_AdditionalProperties(JsonSchema): PrivateScope, Public, HideBySig, SpecialName
    get_PatternProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternProperties(IDictionary`2): PrivateScope, Public, HideBySig, SpecialName
    get_AllowAdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowAdditionalProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Requires(): PrivateScope, Public, HideBySig, SpecialName
    set_Requires(String): PrivateScope, Public, HideBySig, SpecialName
    get_Enum(): PrivateScope, Public, HideBySig, SpecialName
    set_Enum(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Disallow(): PrivateScope, Public, HideBySig, SpecialName
    set_Disallow(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Default(): PrivateScope, Public, HideBySig, SpecialName
    set_Default(JToken): PrivateScope, Public, HideBySig, SpecialName
    get_Extends(): PrivateScope, Public, HideBySig, SpecialName
    set_Extends(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Location(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_InternalId(): PrivateScope, Assembly, HideBySig, SpecialName
    get_DeferredReference(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DeferredReference(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_ReferencesResolved(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ReferencesResolved(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    Read(JsonReader): PrivateScope, Public, Static, HideBySig
    Read(JsonReader, JsonSchemaResolver): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, JsonSchemaResolver): PrivateScope, Public, Static, HideBySig
    WriteTo(JsonWriter): PrivateScope, Public, HideBySig
    WriteTo(JsonWriter, JsonSchemaResolver): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit (Obsolete)
    Void .ctor(Newtonsoft.Json.Schema.JsonSchemaResolver): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(JsonReader): PrivateScope, Assembly, HideBySig
    MapType(String): PrivateScope, Assembly, Static, HideBySig
    MapType(JsonSchemaType): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaConstants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit (Obsolete)
  Fields:
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchemaType] JsonSchemaTypeMapping : Public, Static, InitOnly
    System.String TypePropertyName = type : Public, Static, Literal, HasDefault
    System.String PropertiesPropertyName = properties : Public, Static, Literal, HasDefault
    System.String ItemsPropertyName = items : Public, Static, Literal, HasDefault
    System.String AdditionalItemsPropertyName = additionalItems : Public, Static, Literal, HasDefault
    System.String RequiredPropertyName = required : Public, Static, Literal, HasDefault
    System.String PatternPropertiesPropertyName = patternProperties : Public, Static, Literal, HasDefault
    System.String AdditionalPropertiesPropertyName = additionalProperties : Public, Static, Literal, HasDefault
    System.String RequiresPropertyName = requires : Public, Static, Literal, HasDefault
    System.String MinimumPropertyName = minimum : Public, Static, Literal, HasDefault
    System.String MaximumPropertyName = maximum : Public, Static, Literal, HasDefault
    System.String ExclusiveMinimumPropertyName = exclusiveMinimum : Public, Static, Literal, HasDefault
    System.String ExclusiveMaximumPropertyName = exclusiveMaximum : Public, Static, Literal, HasDefault
    System.String MinimumItemsPropertyName = minItems : Public, Static, Literal, HasDefault
    System.String MaximumItemsPropertyName = maxItems : Public, Static, Literal, HasDefault
    System.String PatternPropertyName = pattern : Public, Static, Literal, HasDefault
    System.String MaximumLengthPropertyName = maxLength : Public, Static, Literal, HasDefault
    System.String MinimumLengthPropertyName = minLength : Public, Static, Literal, HasDefault
    System.String EnumPropertyName = enum : Public, Static, Literal, HasDefault
    System.String ReadOnlyPropertyName = readonly : Public, Static, Literal, HasDefault
    System.String TitlePropertyName = title : Public, Static, Literal, HasDefault
    System.String DescriptionPropertyName = description : Public, Static, Literal, HasDefault
    System.String FormatPropertyName = format : Public, Static, Literal, HasDefault
    System.String DefaultPropertyName = default : Public, Static, Literal, HasDefault
    System.String TransientPropertyName = transient : Public, Static, Literal, HasDefault
    System.String DivisibleByPropertyName = divisibleBy : Public, Static, Literal, HasDefault
    System.String HiddenPropertyName = hidden : Public, Static, Literal, HasDefault
    System.String DisallowPropertyName = disallow : Public, Static, Literal, HasDefault
    System.String ExtendsPropertyName = extends : Public, Static, Literal, HasDefault
    System.String IdPropertyName = id : Public, Static, Literal, HasDefault
    System.String UniqueItemsPropertyName = uniqueItems : Public, Static, Literal, HasDefault
    System.String OptionValuePropertyName = value : Public, Static, Literal, HasDefault
    System.String OptionLabelPropertyName = label : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Schema.JsonSchemaException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit (Obsolete)
  :Newtonsoft.Json.JsonException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception, System.String, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LineNumber 'get ' : 
    Int32 LinePosition 'get ' : 
    System.String Path 'get ' : 
  Methods:
    get_LineNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_LinePosition(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Schema.JsonSchemaGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Schema.UndefinedSchemaIdHandling UndefinedSchemaIdHandling 'get set' : 
    Newtonsoft.Json.Serialization.IContractResolver ContractResolver 'get set' : 
  Methods:
    get_UndefinedSchemaIdHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_UndefinedSchemaIdHandling(UndefinedSchemaIdHandling): PrivateScope, Public, HideBySig, SpecialName
    get_ContractResolver(): PrivateScope, Public, HideBySig, SpecialName
    set_ContractResolver(IContractResolver): PrivateScope, Public, HideBySig, SpecialName
    Generate(Type): PrivateScope, Public, HideBySig
    Generate(Type, JsonSchemaResolver): PrivateScope, Public, HideBySig
    Generate(Type, Boolean): PrivateScope, Public, HideBySig
    Generate(Type, JsonSchemaResolver, Boolean): PrivateScope, Public, HideBySig
    HasFlag(Nullable`1, JsonSchemaType): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaModel: AutoLayout, AnsiClass, Class, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Required 'get set' : 
    Newtonsoft.Json.Schema.JsonSchemaType Type 'get set' : 
    System.Nullable`1[System.Int32] MinimumLength 'get set' : 
    System.Nullable`1[System.Int32] MaximumLength 'get set' : 
    System.Nullable`1[System.Double] DivisibleBy 'get set' : 
    System.Nullable`1[System.Double] Minimum 'get set' : 
    System.Nullable`1[System.Double] Maximum 'get set' : 
    Boolean ExclusiveMinimum 'get set' : 
    Boolean ExclusiveMaximum 'get set' : 
    System.Nullable`1[System.Int32] MinimumItems 'get set' : 
    System.Nullable`1[System.Int32] MaximumItems 'get set' : 
    System.Collections.Generic.IList`1[System.String] Patterns 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Schema.JsonSchemaModel] Items 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchemaModel] Properties 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchemaModel] PatternProperties 'get set' : 
    Newtonsoft.Json.Schema.JsonSchemaModel AdditionalProperties 'get set' : 
    Newtonsoft.Json.Schema.JsonSchemaModel AdditionalItems 'get set' : 
    Boolean PositionalItemsValidation 'get set' : 
    Boolean AllowAdditionalProperties 'get set' : 
    Boolean AllowAdditionalItems 'get set' : 
    Boolean UniqueItems 'get set' : 
    System.Collections.Generic.IList`1[Newtonsoft.Json.Linq.JToken] Enum 'get set' : 
    Newtonsoft.Json.Schema.JsonSchemaType Disallow 'get set' : 
  Methods:
    get_Required(): PrivateScope, Public, HideBySig, SpecialName
    set_Required(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(JsonSchemaType): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MinimumLength(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumLength(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_DivisibleBy(): PrivateScope, Public, HideBySig, SpecialName
    set_DivisibleBy(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    set_Minimum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    set_Maximum(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ExclusiveMinimum(): PrivateScope, Public, HideBySig, SpecialName
    set_ExclusiveMinimum(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExclusiveMaximum(): PrivateScope, Public, HideBySig, SpecialName
    set_ExclusiveMaximum(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumItems(): PrivateScope, Public, HideBySig, SpecialName
    set_MinimumItems(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumItems(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumItems(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Patterns(): PrivateScope, Public, HideBySig, SpecialName
    set_Patterns(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
    set_Items(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    set_Properties(IDictionary`2): PrivateScope, Public, HideBySig, SpecialName
    get_PatternProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternProperties(IDictionary`2): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_AdditionalProperties(JsonSchemaModel): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalItems(): PrivateScope, Public, HideBySig, SpecialName
    set_AdditionalItems(JsonSchemaModel): PrivateScope, Public, HideBySig, SpecialName
    get_PositionalItemsValidation(): PrivateScope, Public, HideBySig, SpecialName
    set_PositionalItemsValidation(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowAdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowAdditionalProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllowAdditionalItems(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowAdditionalItems(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UniqueItems(): PrivateScope, Public, HideBySig, SpecialName
    set_UniqueItems(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Enum(): PrivateScope, Public, HideBySig, SpecialName
    set_Enum(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Disallow(): PrivateScope, Public, HideBySig, SpecialName
    set_Disallow(JsonSchemaType): PrivateScope, Public, HideBySig, SpecialName
    Create(IList`1): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaModelBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Build(JsonSchema): PrivateScope, Public, HideBySig
    AddSchema(JsonSchemaNode, JsonSchema): PrivateScope, Public, HideBySig
    AddProperties(IDictionary`2, IDictionary`2): PrivateScope, Public, HideBySig
    AddProperty(IDictionary`2, String, JsonSchema): PrivateScope, Public, HideBySig
    AddItem(JsonSchemaNode, Int32, JsonSchema): PrivateScope, Public, HideBySig
    AddAdditionalProperties(JsonSchemaNode, JsonSchema): PrivateScope, Public, HideBySig
    AddAdditionalItems(JsonSchemaNode, JsonSchema): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaNode: AutoLayout, AnsiClass, Class, BeforeFieldInit (Obsolete)
    Void .ctor(Newtonsoft.Json.Schema.JsonSchema): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Id 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[Newtonsoft.Json.Schema.JsonSchema] Schemas 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchemaNode] Properties 'get ' : 
    System.Collections.Generic.Dictionary`2[System.String,Newtonsoft.Json.Schema.JsonSchemaNode] PatternProperties 'get ' : 
    System.Collections.Generic.List`1[Newtonsoft.Json.Schema.JsonSchemaNode] Items 'get ' : 
    Newtonsoft.Json.Schema.JsonSchemaNode AdditionalProperties 'get set' : 
    Newtonsoft.Json.Schema.JsonSchemaNode AdditionalItems 'get set' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Schemas(): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    get_PatternProperties(): PrivateScope, Public, HideBySig, SpecialName
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_AdditionalProperties(JsonSchemaNode): PrivateScope, Public, HideBySig, SpecialName
    get_AdditionalItems(): PrivateScope, Public, HideBySig, SpecialName
    set_AdditionalItems(JsonSchemaNode): PrivateScope, Public, HideBySig, SpecialName
    Combine(JsonSchema): PrivateScope, Public, HideBySig
    GetId(IEnumerable`1): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Schema.JsonSchemaNodeCollection: AutoLayout, AnsiClass, Class, BeforeFieldInit (Obsolete)
  :System.Collections.ObjectModel.KeyedCollection`2[System.String,Newtonsoft.Json.Schema.JsonSchemaNode]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Newtonsoft.Json.Schema.JsonSchemaResolver: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[Newtonsoft.Json.Schema.JsonSchema] LoadedSchemas 'get set' : 
  Methods:
    get_LoadedSchemas(): PrivateScope, Public, HideBySig, SpecialName
    GetSchema(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Newtonsoft.Json.Schema.JsonSchemaType: AutoLayout, AnsiClass, Class, Public, Sealed (Obsolete)
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Schema.JsonSchemaType None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType String = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Float = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Integer = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Boolean = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Object = 16 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Array = 32 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Null = 64 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.JsonSchemaType Any = 127 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Schema.JsonSchemaWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit (Obsolete)
    Void .ctor(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Schema.JsonSchemaResolver): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteSchema(JsonSchema): PrivateScope, Public, HideBySig
Struct Newtonsoft.Json.Schema.UndefinedSchemaIdHandling: AutoLayout, AnsiClass, Class, Public, Sealed (Obsolete)
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Schema.UndefinedSchemaIdHandling None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.UndefinedSchemaIdHandling UseTypeName = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Schema.UndefinedSchemaIdHandling UseAssemblyQualifiedName = 2 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Schema.ValidationEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :System.EventArgs
    Void .ctor(Newtonsoft.Json.Schema.JsonSchemaException): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Schema.JsonSchemaException Exception 'get ' : 
    System.String Path 'get ' : 
    System.String Message 'get ' : 
  Methods:
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Schema.ValidationEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed (Obsolete)
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ValidationEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, ValidationEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Newtonsoft.Json.Linq.CommentHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Linq.CommentHandling Ignore = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.CommentHandling Load = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.Linq.DuplicatePropertyNameHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Linq.DuplicatePropertyNameHandling Replace = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.DuplicatePropertyNameHandling Ignore = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.DuplicatePropertyNameHandling Error = 2 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Linq.Extensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Ancestors(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AncestorsAndSelf(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Descendants(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    DescendantsAndSelf(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Properties(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Values(IEnumerable`1, Object): PrivateScope, Public, Static, HideBySig
    Values(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Values(IEnumerable`1, Object): PrivateScope, Public, Static, HideBySig
    Values(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Value(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Value(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Values(IEnumerable`1, Object): PrivateScope, Assembly, Static, HideBySig
    Children(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Children(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Convert(IEnumerable`1): PrivateScope, Assembly, Static, HideBySig
    Convert(T): PrivateScope, Assembly, Static, HideBySig
    AsJEnumerable(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AsJEnumerable(IEnumerable`1): PrivateScope, Public, Static, HideBySig
Interface Newtonsoft.Json.Linq.IJEnumerable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T, Newtonsoft.Json.Linq.JToken,  Covariant
  Interfaces:
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    Newtonsoft.Json.Linq.IJEnumerable`1[Newtonsoft.Json.Linq.JToken] Item [System.Object] 'get ' : 
  Methods:
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Linq.JArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JContainer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
    Newtonsoft.Json.Linq.JToken Item [System.Object] 'get set' : 
    Newtonsoft.Json.Linq.JToken Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    WriteToAsync(JsonWriter, CancellationToken, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    LoadAsync(JsonReader, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LoadAsync(JsonReader, JsonLoadSettings, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Load(JsonReader): PrivateScope, Public, Static, HideBySig
    Load(JsonReader, JsonLoadSettings): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, JsonLoadSettings): PrivateScope, Public, Static, HideBySig
    FromObject(Object): PrivateScope, Public, Static, HideBySig
    FromObject(Object, JsonSerializer): PrivateScope, Public, Static, HideBySig
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Object, JToken): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IndexOfItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    MergeItem(Object, JsonMergeSettings): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IndexOf(JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(JToken[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Newtonsoft.Json.Linq.JConstructor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JContainer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JConstructor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
    Newtonsoft.Json.Linq.JToken Item [System.Object] 'get set' : 
  Methods:
    WriteToAsync(JsonWriter, CancellationToken, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    LoadAsync(JsonReader, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LoadAsync(JsonReader, JsonLoadSettings, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IndexOfItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    MergeItem(Object, JsonMergeSettings): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Object, JToken): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Load(JsonReader): PrivateScope, Public, Static, HideBySig
    Load(JsonReader, JsonLoadSettings): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Linq.JContainer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Newtonsoft.Json.Linq.JToken
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JContainer): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[Newtonsoft.Json.Linq.JToken]
    System.Collections.Generic.ICollection`1[Newtonsoft.Json.Linq.JToken]
    System.ComponentModel.ITypedList
    System.ComponentModel.IBindingList
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.Specialized.INotifyCollectionChanged
  Fields:
    System.ComponentModel.ListChangedEventHandler _listChanged : Assembly
    System.ComponentModel.AddingNewEventHandler _addingNew : Assembly
    System.Collections.Specialized.NotifyCollectionChangedEventHandler _collectionChanged : Assembly
  Properties:
    Boolean HasValues 'get ' : 
    Newtonsoft.Json.Linq.JToken First 'get ' : 
    Newtonsoft.Json.Linq.JToken Last 'get ' : 
    Int32 Count 'get ' : 
  Events:
    System.ComponentModel.ListChangedEventHandler ListChanged: 
    System.ComponentModel.AddingNewEventHandler AddingNew: 
    System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged: 
  Methods:
    ReadTokenFromAsync(JsonReader, JsonLoadSettings, CancellationToken(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    add_ListChanged(ListChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_ListChanged(ListChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_AddingNew(AddingNewEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AddingNew(AddingNewEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_CollectionChanged(NotifyCollectionChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_CollectionChanged(NotifyCollectionChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CheckReentrancy(): PrivateScope, Assembly, HideBySig
    CreateChildrenCollection(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_HasValues(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ContentsEqual(JContainer): PrivateScope, Assembly, HideBySig
    get_First(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Last(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Children(): PrivateScope, Public, Virtual, HideBySig
    Values(): PrivateScope, Public, Virtual, HideBySig
    Descendants(): PrivateScope, Public, HideBySig
    DescendantsAndSelf(): PrivateScope, Public, HideBySig
    GetDescendants(Boolean): PrivateScope, Assembly, HideBySig
    IsMultiContent(Object): PrivateScope, Assembly, HideBySig
    EnsureParentToken(JToken, Boolean): PrivateScope, Assembly, HideBySig
    IndexOfItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    InsertItem(Int32, JToken, Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    RemoveItemAt(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    RemoveItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetItem(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    SetItem(Int32, JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ClearItems(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ReplaceItem(JToken, JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ContainsItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    CopyItemsTo(Array, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    IsTokenUnchanged(JToken, JToken): PrivateScope, Assembly, Static, HideBySig
    ValidateToken(JToken, JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Add(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryAdd(Object): PrivateScope, Assembly, HideBySig
    AddAndSkipParentCheck(JToken): PrivateScope, Assembly, HideBySig
    AddFirst(Object): PrivateScope, Public, HideBySig
    TryAddInternal(Int32, Object, Boolean): PrivateScope, Assembly, HideBySig
    CreateFromContent(Object): PrivateScope, Assembly, Static, HideBySig
    CreateWriter(): PrivateScope, Public, HideBySig
    ReplaceAll(Object): PrivateScope, Public, HideBySig
    RemoveAll(): PrivateScope, Public, HideBySig
    MergeItem(Object, JsonMergeSettings): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Merge(Object): PrivateScope, Public, HideBySig
    Merge(Object, JsonMergeSettings): PrivateScope, Public, HideBySig
    ReadTokenFrom(JsonReader, JsonLoadSettings): PrivateScope, Assembly, HideBySig
    ReadContentFrom(JsonReader, JsonLoadSettings): PrivateScope, Assembly, HideBySig
    ContentsHashCode(): PrivateScope, Assembly, HideBySig
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MergeEnumerableContent(JContainer, IEnumerable, JsonMergeSettings): PrivateScope, Assembly, Static, HideBySig
Struct Newtonsoft.Json.Linq.JEnumerable`1[T]: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T, Newtonsoft.Json.Linq.JToken
  :System.ValueType
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Linq.IJEnumerable`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.IEquatable`1[Newtonsoft.Json.Linq.JEnumerable`1[T]]
  Fields:
    Newtonsoft.Json.Linq.JEnumerable`1[T] Empty : Public, Static, InitOnly
  Properties:
    Newtonsoft.Json.Linq.IJEnumerable`1[Newtonsoft.Json.Linq.JToken] Item [System.Object] 'get ' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(JEnumerable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JContainer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[System.String,Newtonsoft.Json.Linq.JToken]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[System.String,Newtonsoft.Json.Linq.JToken]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.String,Newtonsoft.Json.Linq.JToken]]
    System.ComponentModel.INotifyPropertyChanged
    System.ComponentModel.ICustomTypeDescriptor
    System.ComponentModel.INotifyPropertyChanging
  Properties:
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
    Newtonsoft.Json.Linq.JToken Item [System.Object] 'get set' : 
    Newtonsoft.Json.Linq.JToken Item [System.String] 'get set' : 
  Events:
    System.ComponentModel.PropertyChangedEventHandler PropertyChanged: 
    System.ComponentModel.PropertyChangingEventHandler PropertyChanging: 
  Methods:
    WriteToAsync(JsonWriter, CancellationToken, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    LoadAsync(JsonReader, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LoadAsync(JsonReader, JsonLoadSettings, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    add_PropertyChanged(PropertyChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PropertyChanged(PropertyChangedEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_PropertyChanging(PropertyChangingEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PropertyChanging(PropertyChangingEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IndexOfItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    InsertItem(Int32, JToken, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ValidateToken(JToken, JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    MergeItem(Object, JsonMergeSettings): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    InternalPropertyChanged(JProperty): PrivateScope, Assembly, HideBySig
    InternalPropertyChanging(JProperty): PrivateScope, Assembly, HideBySig
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Properties(): PrivateScope, Public, HideBySig
    Property(String): PrivateScope, Public, HideBySig
    Property(String, StringComparison): PrivateScope, Public, HideBySig
    PropertyValues(): PrivateScope, Public, HideBySig
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Object, JToken): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(String, JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Load(JsonReader): PrivateScope, Public, Static, HideBySig
    Load(JsonReader, JsonLoadSettings): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, JsonLoadSettings): PrivateScope, Public, Static, HideBySig
    FromObject(Object): PrivateScope, Public, Static, HideBySig
    FromObject(Object, JsonSerializer): PrivateScope, Public, Static, HideBySig
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    GetValue(String): PrivateScope, Public, HideBySig
    GetValue(String, StringComparison): PrivateScope, Public, HideBySig
    TryGetValue(String, StringComparison, JToken&(Out)): PrivateScope, Public, HideBySig
    Add(String, JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(String, JToken&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Linq.JProperty: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JContainer
    Void .ctor(Newtonsoft.Json.Linq.JProperty): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    Newtonsoft.Json.Linq.JToken Value 'get set' : 
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
  Methods:
    WriteToAsync(JsonWriter, CancellationToken, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    LoadAsync(JsonReader, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LoadAsync(JsonReader, JsonLoadSettings, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(JToken): PrivateScope, Public, HideBySig, SpecialName
    GetItem(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetItem(Int32, JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    RemoveItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    RemoveItemAt(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IndexOfItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    InsertItem(Int32, JToken, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ContainsItem(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    MergeItem(Object, JsonMergeSettings): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ClearItems(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Load(JsonReader): PrivateScope, Public, Static, HideBySig
    Load(JsonReader, JsonLoadSettings): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Linq.JPropertyDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.PropertyDescriptor
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type ComponentType 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Type PropertyType 'get ' : 
  Methods:
    CanResetValue(Object): PrivateScope, Public, Virtual, HideBySig
    GetValue(Object): PrivateScope, Public, Virtual, HideBySig
    ResetValue(Object): PrivateScope, Public, Virtual, HideBySig
    SetValue(Object, Object): PrivateScope, Public, Virtual, HideBySig
    ShouldSerializeValue(Object): PrivateScope, Public, Virtual, HideBySig
    get_ComponentType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PropertyType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Linq.JPropertyKeyedCollection: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[Newtonsoft.Json.Linq.JToken]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Linq.JToken Item [System.String] 'get ' : 
    System.Collections.Generic.ICollection`1[System.String] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[Newtonsoft.Json.Linq.JToken] Values 'get ' : 
  Methods:
    Contains(String): PrivateScope, Public, HideBySig
    Remove(String): PrivateScope, Public, HideBySig
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    TryGetValue(String, JToken&(Out)): PrivateScope, Public, HideBySig
    get_Keys(): PrivateScope, Public, HideBySig, SpecialName
    get_Values(): PrivateScope, Public, HideBySig, SpecialName
    IndexOfReference(JToken): PrivateScope, Public, HideBySig
    Compare(JPropertyKeyedCollection): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Linq.JRaw: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JValue
    Void .ctor(Newtonsoft.Json.Linq.JRaw): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateAsync(JsonReader, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Create(JsonReader): PrivateScope, Public, Static, HideBySig
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Newtonsoft.Json.Linq.JsonLoadSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Linq.CommentHandling CommentHandling 'get set' : 
    Newtonsoft.Json.Linq.LineInfoHandling LineInfoHandling 'get set' : 
    Newtonsoft.Json.Linq.DuplicatePropertyNameHandling DuplicatePropertyNameHandling 'get set' : 
  Methods:
    get_CommentHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_CommentHandling(CommentHandling): PrivateScope, Public, HideBySig, SpecialName
    get_LineInfoHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_LineInfoHandling(LineInfoHandling): PrivateScope, Public, HideBySig, SpecialName
    get_DuplicatePropertyNameHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DuplicatePropertyNameHandling(DuplicatePropertyNameHandling): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Linq.JsonMergeSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Linq.MergeArrayHandling MergeArrayHandling 'get set' : 
    Newtonsoft.Json.Linq.MergeNullValueHandling MergeNullValueHandling 'get set' : 
    System.StringComparison PropertyNameComparison 'get set' : 
  Methods:
    get_MergeArrayHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_MergeArrayHandling(MergeArrayHandling): PrivateScope, Public, HideBySig, SpecialName
    get_MergeNullValueHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_MergeNullValueHandling(MergeNullValueHandling): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyNameComparison(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyNameComparison(StringComparison): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Linq.JsonSelectSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[System.TimeSpan] RegexMatchTimeout 'get set' : 
    Boolean ErrorWhenNoMatch 'get set' : 
  Methods:
    get_RegexMatchTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_RegexMatchTimeout(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorWhenNoMatch(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorWhenNoMatch(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Linq.JToken: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Linq.IJEnumerable`1[Newtonsoft.Json.Linq.JToken]
    System.Collections.Generic.IEnumerable`1[Newtonsoft.Json.Linq.JToken]
    System.Collections.IEnumerable
    Newtonsoft.Json.IJsonLineInfo
    System.ICloneable
    System.Dynamic.IDynamicMetaObjectProvider
  Properties:
    Newtonsoft.Json.Linq.JTokenEqualityComparer EqualityComparer 'get ' : 
    Newtonsoft.Json.Linq.JContainer Parent 'get set' : 
    Newtonsoft.Json.Linq.JToken Root 'get ' : 
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
    Boolean HasValues 'get ' : 
    Newtonsoft.Json.Linq.JToken Next 'get set' : 
    Newtonsoft.Json.Linq.JToken Previous 'get set' : 
    System.String Path 'get ' : 
    Newtonsoft.Json.Linq.JToken Item [System.Object] 'get set' : 
    Newtonsoft.Json.Linq.JToken First 'get ' : 
    Newtonsoft.Json.Linq.JToken Last 'get ' : 
  Methods:
    ToObject(JsonSerializer): PrivateScope, Public, HideBySig
    ToObject(Type, JsonSerializer): PrivateScope, Public, HideBySig
    ReadFrom(JsonReader): PrivateScope, Public, Static, HideBySig
    ReadFrom(JsonReader, JsonLoadSettings): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, JsonLoadSettings): PrivateScope, Public, Static, HideBySig
    Load(JsonReader, JsonLoadSettings): PrivateScope, Public, Static, HideBySig
    Load(JsonReader): PrivateScope, Public, Static, HideBySig
    SetLineInfo(IJsonLineInfo, JsonLoadSettings): PrivateScope, Assembly, HideBySig
    SetLineInfo(Int32, Int32): PrivateScope, Assembly, HideBySig
    SelectToken(String): PrivateScope, Public, HideBySig
    SelectToken(String, Boolean): PrivateScope, Public, HideBySig
    SelectToken(String, JsonSelectSettings): PrivateScope, Public, HideBySig
    SelectTokens(String): PrivateScope, Public, HideBySig
    SelectTokens(String, Boolean): PrivateScope, Public, HideBySig
    SelectTokens(String, JsonSelectSettings): PrivateScope, Public, HideBySig
    DeepClone(): PrivateScope, Public, HideBySig
    AddAnnotation(Object): PrivateScope, Public, HideBySig
    Annotation(): PrivateScope, Public, HideBySig
    Annotation(Type): PrivateScope, Public, HideBySig
    Annotations(): PrivateScope, Public, HideBySig
    Annotations(Type): PrivateScope, Public, HideBySig
    RemoveAnnotations(): PrivateScope, Public, HideBySig
    RemoveAnnotations(Type): PrivateScope, Public, HideBySig
    CopyAnnotations(JToken, JToken): PrivateScope, Assembly, HideBySig
    WriteToAsync(JsonWriter, CancellationToken, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteToAsync(JsonWriter, JsonConverter[]): PrivateScope, Public, HideBySig
    ReadFromAsync(JsonReader, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadFromAsync(JsonReader, JsonLoadSettings, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LoadAsync(JsonReader, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LoadAsync(JsonReader, JsonLoadSettings, CancellationToken(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_EqualityComparer(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    set_Parent(JContainer): PrivateScope, Assembly, HideBySig, SpecialName
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasValues(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    DeepEquals(JToken, JToken): PrivateScope, Public, Static, HideBySig
    get_Next(): PrivateScope, Public, HideBySig, SpecialName
    set_Next(JToken): PrivateScope, Assembly, HideBySig, SpecialName
    get_Previous(): PrivateScope, Public, HideBySig, SpecialName
    set_Previous(JToken): PrivateScope, Assembly, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    AddAfterSelf(Object): PrivateScope, Public, HideBySig
    AddBeforeSelf(Object): PrivateScope, Public, HideBySig
    Ancestors(): PrivateScope, Public, HideBySig
    AncestorsAndSelf(): PrivateScope, Public, HideBySig
    GetAncestors(Boolean): PrivateScope, Assembly, HideBySig
    AfterSelf(): PrivateScope, Public, HideBySig
    BeforeSelf(): PrivateScope, Public, HideBySig
    get_Item(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Object, JToken): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Value(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_First(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Last(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Children(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Children(): PrivateScope, Public, HideBySig
    Values(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(): PrivateScope, Public, HideBySig
    Replace(JToken): PrivateScope, Public, HideBySig
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(Formatting, JsonConverter[]): PrivateScope, Public, HideBySig
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(JToken): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(DateTimeOffset): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Byte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(SByte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Byte[]): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Uri): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Guid): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CreateReader(): PrivateScope, Public, HideBySig
    FromObjectInternal(Object, JsonSerializer): PrivateScope, Assembly, Static, HideBySig
    FromObject(Object): PrivateScope, Public, Static, HideBySig
    FromObject(Object, JsonSerializer): PrivateScope, Public, Static, HideBySig
    ToObject(): PrivateScope, Public, HideBySig
    ToObject(Type): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Linq.JTokenEqualityComparer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[Newtonsoft.Json.Linq.JToken]
  Methods:
    Equals(JToken, JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(JToken): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Linq.JTokenReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonReader
    Void .ctor(Newtonsoft.Json.Linq.JToken): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JToken, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.IJsonLineInfo
  Properties:
    Newtonsoft.Json.Linq.JToken CurrentToken 'get ' : 
    System.String Path 'get ' : 
  Methods:
    get_CurrentToken(): PrivateScope, Public, HideBySig, SpecialName
    Read(): PrivateScope, Public, Virtual, HideBySig
    get_Path(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct Newtonsoft.Json.Linq.JTokenType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Linq.JTokenType None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Object = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Array = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Constructor = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Property = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Comment = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Integer = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Float = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType String = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Boolean = 9 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Null = 10 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Undefined = 11 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Date = 12 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Raw = 13 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Bytes = 14 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Guid = 15 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType Uri = 16 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JTokenType TimeSpan = 17 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Linq.JTokenWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonWriter
    Void .ctor(Newtonsoft.Json.Linq.JContainer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Linq.JToken CurrentToken 'get ' : 
    Newtonsoft.Json.Linq.JToken Token 'get ' : 
  Methods:
    WriteTokenAsync(JsonReader, Boolean, Boolean, Boolean, CancellationToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_CurrentToken(): PrivateScope, Public, HideBySig, SpecialName
    get_Token(): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    WriteStartObject(): PrivateScope, Public, Virtual, HideBySig
    WriteStartArray(): PrivateScope, Public, Virtual, HideBySig
    WriteStartConstructor(String): PrivateScope, Public, Virtual, HideBySig
    WritePropertyName(String): PrivateScope, Public, Virtual, HideBySig
    AddValue(JValue, JsonToken): PrivateScope, Assembly, HideBySig
    WriteValue(Object): PrivateScope, Public, Virtual, HideBySig
    WriteNull(): PrivateScope, Public, Virtual, HideBySig
    WriteUndefined(): PrivateScope, Public, Virtual, HideBySig
    WriteRaw(String): PrivateScope, Public, Virtual, HideBySig
    WriteComment(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Single): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Double): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Boolean): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Char): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(SByte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Decimal): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTime): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTimeOffset): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte[]): PrivateScope, Public, Virtual, HideBySig
    WriteValue(TimeSpan): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Guid): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Uri): PrivateScope, Public, Virtual, HideBySig
    WriteToken(JsonReader, Boolean, Boolean, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class Newtonsoft.Json.Linq.JValue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Linq.JToken
    Void .ctor(System.Object, Newtonsoft.Json.Linq.JTokenType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Newtonsoft.Json.Linq.JValue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Decimal): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTimeOffset): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Guid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Uri): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Newtonsoft.Json.Linq.JValue]
    System.IFormattable
    System.IComparable
    System.IComparable`1[Newtonsoft.Json.Linq.JValue]
    System.IConvertible
  Properties:
    Boolean HasValues 'get ' : 
    Newtonsoft.Json.Linq.JTokenType Type 'get ' : 
    System.Object Value 'get set' : 
  Methods:
    WriteToAsync(JsonWriter, CancellationToken, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    DeepEquals(JToken): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_HasValues(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Compare(JTokenType, Object, Object): PrivateScope, Assembly, Static, HideBySig
    CloneToken(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateComment(String): PrivateScope, Public, Static, HideBySig
    CreateString(String): PrivateScope, Public, Static, HideBySig
    CreateNull(): PrivateScope, Public, Static, HideBySig
    CreateUndefined(): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
    WriteTo(JsonWriter, JsonConverter[]): PrivateScope, Public, Virtual, HideBySig
    GetDeepHashCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Equals(JValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(JValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Newtonsoft.Json.Linq.LineInfoHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Linq.LineInfoHandling Ignore = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.LineInfoHandling Load = 1 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.Linq.MergeArrayHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Linq.MergeArrayHandling Concat = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.MergeArrayHandling Union = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.MergeArrayHandling Replace = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.MergeArrayHandling Merge = 3 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.Linq.MergeNullValueHandling: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Linq.MergeNullValueHandling Ignore = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.MergeNullValueHandling Merge = 1 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.PathFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[System.Int32] Index 'get set' : 
  Methods:
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.PathFilter
    Void .ctor(System.Collections.Generic.List`1[System.Int32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[System.Int32] Indexes : Assembly
  Methods:
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.PathFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[System.Int32] Start 'get set' : 
    System.Nullable`1[System.Int32] End 'get set' : 
    System.Nullable`1[System.Int32] Step 'get set' : 
  Methods:
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    set_Start(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
    set_End(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    set_Step(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.FieldFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.PathFilter
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Assembly
  Methods:
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.PathFilter
    Void .ctor(System.Collections.Generic.List`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[System.String] Names : Assembly
  Methods:
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.JPath: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[Newtonsoft.Json.Linq.JsonPath.PathFilter] Filters 'get ' : 
  Methods:
    get_Filters(): PrivateScope, Public, HideBySig, SpecialName
    Evaluate(JToken, JToken, JsonSelectSettings): PrivateScope, Assembly, HideBySig
    Evaluate(List`1, JToken, JToken, JsonSelectSettings): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.PathFilter: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Newtonsoft.Json.Linq.JsonPath.QueryOperator: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Linq.JsonPath.QueryOperator None = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator Equals = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator NotEquals = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator Exists = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator LessThan = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator LessThanOrEquals = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator GreaterThan = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator GreaterThanOrEquals = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator And = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator Or = 9 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator RegexEquals = 10 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator StrictEquals = 11 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Linq.JsonPath.QueryOperator StrictNotEquals = 12 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Linq.JsonPath.QueryExpression: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(Newtonsoft.Json.Linq.JsonPath.QueryOperator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Newtonsoft.Json.Linq.JsonPath.QueryOperator Operator : Assembly
  Methods:
    IsMatch(JToken, JToken): PrivateScope, Public, HideBySig
    IsMatch(JToken, JToken, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Newtonsoft.Json.Linq.JsonPath.CompositeExpression: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.QueryExpression
    Void .ctor(Newtonsoft.Json.Linq.JsonPath.QueryOperator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[Newtonsoft.Json.Linq.JsonPath.QueryExpression] Expressions 'get set' : 
  Methods:
    get_Expressions(): PrivateScope, Public, HideBySig, SpecialName
    set_Expressions(List`1): PrivateScope, Public, HideBySig, SpecialName
    IsMatch(JToken, JToken, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.QueryExpression
    Void .ctor(Newtonsoft.Json.Linq.JsonPath.QueryOperator, System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object Left : Public, InitOnly
    System.Object Right : Public, InitOnly
  Methods:
    IsMatch(JToken, JToken, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
    EqualsWithStringCoercion(JValue, JValue): PrivateScope, Assembly, Static, HideBySig
    EqualsWithStrictMatch(JValue, JValue): PrivateScope, Assembly, Static, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.QueryFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.PathFilter
    Void .ctor(Newtonsoft.Json.Linq.JsonPath.QueryExpression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Newtonsoft.Json.Linq.JsonPath.QueryExpression Expression : Assembly
  Methods:
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.QueryScanFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.PathFilter
    Void .ctor(Newtonsoft.Json.Linq.JsonPath.QueryExpression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Newtonsoft.Json.Linq.JsonPath.QueryExpression Expression : Assembly
  Methods:
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.RootFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.PathFilter
  Fields:
    Newtonsoft.Json.Linq.JsonPath.RootFilter Instance : Public, Static, InitOnly
  Methods:
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.ScanFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.PathFilter
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Assembly
  Methods:
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Linq.JsonPath.ScanMultipleFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Linq.JsonPath.PathFilter
    Void .ctor(System.Collections.Generic.List`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ExecuteFilter(JToken, IEnumerable`1, JsonSelectSettings): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.BinaryConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.BsonObjectIdConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.CustomCreationConverter`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T
  :Newtonsoft.Json.JsonConverter
  Properties:
    Boolean CanWrite 'get ' : 
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    Create(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.DataSetConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.DataTableConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.DateTimeConverterBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
  Methods:
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.DiscriminatedUnionConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.EntityKeyMemberConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.ExpandoObjectConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanWrite 'get ' : 
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.IsoDateTimeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Converters.DateTimeConverterBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Globalization.DateTimeStyles DateTimeStyles 'get set' : 
    System.String DateTimeFormat 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    get_DateTimeStyles(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeStyles(DateTimeStyles): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeFormat(String): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.JavaScriptDateTimeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Converters.DateTimeConverterBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.KeyValuePairConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.RegexConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.StringEnumConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Newtonsoft.Json.Serialization.NamingStrategy, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.Object[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CamelCaseText 'get set' :  (Obsolete)
    Newtonsoft.Json.Serialization.NamingStrategy NamingStrategy 'get set' : 
    Boolean AllowIntegerValues 'get set' : 
  Methods:
    get_CamelCaseText(): PrivateScope, Public, HideBySig, SpecialName
    set_CamelCaseText(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NamingStrategy(): PrivateScope, Public, HideBySig, SpecialName
    set_NamingStrategy(NamingStrategy): PrivateScope, Public, HideBySig, SpecialName
    get_AllowIntegerValues(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowIntegerValues(Boolean): PrivateScope, Public, HideBySig, SpecialName
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.UnixDateTimeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.Converters.DateTimeConverterBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.DateTime UnixEpoch : Assembly, Static, InitOnly
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.VersionConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.XmlDocumentWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XmlNodeWrapper
    Void .ctor(System.Xml.XmlDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlDocument
  Properties:
    Newtonsoft.Json.Converters.IXmlElement DocumentElement 'get ' : 
  Methods:
    CreateComment(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateTextNode(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateCDataSection(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateWhitespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateSignificantWhitespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateXmlDeclaration(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateXmlDocumentType(String, String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateProcessingInstruction(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateElement(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateElement(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAttribute(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAttribute(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DocumentElement(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Converters.XmlElementWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XmlNodeWrapper
    Void .ctor(System.Xml.XmlElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlElement
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    SetAttributeNode(IXmlNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetPrefixOfNamespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsEmpty(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Converters.XmlDeclarationWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XmlNodeWrapper
    Void .ctor(System.Xml.XmlDeclaration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlDeclaration
  Properties:
    System.String Version 'get ' : 
    System.String Encoding 'get set' : 
    System.String Standalone 'get set' : 
  Methods:
    get_Version(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Encoding(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Encoding(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Standalone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Standalone(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Converters.XmlDocumentTypeWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XmlNodeWrapper
    Void .ctor(System.Xml.XmlDocumentType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlDocumentType
  Properties:
    System.String Name 'get ' : 
    System.String System 'get ' : 
    System.String Public 'get ' : 
    System.String InternalSubset 'get ' : 
    System.String LocalName 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_System(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Public(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InternalSubset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.XmlNodeWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Xml.XmlNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Properties:
    System.Object WrappedNode 'get ' : 
    System.Xml.XmlNodeType NodeType 'get ' : 
    System.String LocalName 'get ' : 
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.IXmlNode] ChildNodes 'get ' : 
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.IXmlNode] Attributes 'get ' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
    System.String Value 'get set' : 
    System.String NamespaceUri 'get ' : 
  Methods:
    get_WrappedNode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NodeType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ChildNodes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    WrapNode(XmlNode): PrivateScope, Assembly, Static, HideBySig
    get_Attributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ParentNode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Value(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AppendChild(IXmlNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_NamespaceUri(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface Newtonsoft.Json.Converters.IXmlDocument: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Properties:
    Newtonsoft.Json.Converters.IXmlElement DocumentElement 'get ' : 
  Methods:
    CreateComment(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateTextNode(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateCDataSection(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateWhitespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSignificantWhitespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateXmlDeclaration(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateXmlDocumentType(String, String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateProcessingInstruction(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateElement(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateElement(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateAttribute(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateAttribute(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_DocumentElement(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Newtonsoft.Json.Converters.IXmlDeclaration: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Properties:
    System.String Version 'get ' : 
    System.String Encoding 'get set' : 
    System.String Standalone 'get set' : 
  Methods:
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Encoding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Encoding(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Standalone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Standalone(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Newtonsoft.Json.Converters.IXmlDocumentType: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Properties:
    System.String Name 'get ' : 
    System.String System 'get ' : 
    System.String Public 'get ' : 
    System.String InternalSubset 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_System(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Public(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_InternalSubset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Newtonsoft.Json.Converters.IXmlElement: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    SetAttributeNode(IXmlNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPrefixOfNamespace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Newtonsoft.Json.Converters.IXmlNode: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.Xml.XmlNodeType NodeType 'get ' : 
    System.String LocalName 'get ' : 
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.IXmlNode] ChildNodes 'get ' : 
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.IXmlNode] Attributes 'get ' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
    System.String Value 'get set' : 
    System.String NamespaceUri 'get ' : 
    System.Object WrappedNode 'get ' : 
  Methods:
    get_NodeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ChildNodes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Attributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    AppendChild(IXmlNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_NamespaceUri(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WrappedNode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Newtonsoft.Json.Converters.XDeclarationWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XDeclaration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlDeclaration
  Properties:
    System.Xml.Linq.XDeclaration Declaration 'get ' : 
    System.Xml.XmlNodeType NodeType 'get ' : 
    System.String Version 'get ' : 
    System.String Encoding 'get set' : 
    System.String Standalone 'get set' : 
  Methods:
    get_Declaration(): PrivateScope, Assembly, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Encoding(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Encoding(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Standalone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Standalone(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Converters.XDocumentTypeWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XDocumentType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlDocumentType
  Properties:
    System.String Name 'get ' : 
    System.String System 'get ' : 
    System.String Public 'get ' : 
    System.String InternalSubset 'get ' : 
    System.String LocalName 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_System(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Public(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InternalSubset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.XDocumentWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XContainerWrapper
    Void .ctor(System.Xml.Linq.XDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlDocument
  Properties:
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.IXmlNode] ChildNodes 'get ' : 
    Newtonsoft.Json.Converters.IXmlElement DocumentElement 'get ' : 
  Methods:
    get_ChildNodes(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateComment(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateTextNode(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateCDataSection(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateWhitespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateSignificantWhitespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateXmlDeclaration(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateXmlDocumentType(String, String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateProcessingInstruction(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateElement(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateElement(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAttribute(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateAttribute(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DocumentElement(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AppendChild(IXmlNode): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.XTextWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XText): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Value 'get set' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.XCommentWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Value 'get set' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.XProcessingInstructionWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XProcessingInstruction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String LocalName 'get ' : 
    System.String Value 'get set' : 
  Methods:
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.XContainerWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XContainer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.IXmlNode] ChildNodes 'get ' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
  Methods:
    get_ChildNodes(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    WrapNode(XObject): PrivateScope, Assembly, Static, HideBySig
    AppendChild(IXmlNode): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Converters.XObjectWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Xml.Linq.XObject): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlNode
  Properties:
    System.Object WrappedNode 'get ' : 
    System.Xml.XmlNodeType NodeType 'get ' : 
    System.String LocalName 'get ' : 
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.IXmlNode] ChildNodes 'get ' : 
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.IXmlNode] Attributes 'get ' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
    System.String Value 'get set' : 
    System.String NamespaceUri 'get ' : 
  Methods:
    get_WrappedNode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NodeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ChildNodes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Attributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AppendChild(IXmlNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NamespaceUri(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Converters.XAttributeWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XObjectWrapper
    Void .ctor(System.Xml.Linq.XAttribute): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Value 'get set' : 
    System.String LocalName 'get ' : 
    System.String NamespaceUri 'get ' : 
    Newtonsoft.Json.Converters.IXmlNode ParentNode 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NamespaceUri(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ParentNode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Converters.XElementWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Converters.XContainerWrapper
    Void .ctor(System.Xml.Linq.XElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Newtonsoft.Json.Converters.IXmlElement
  Properties:
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.IXmlNode] Attributes 'get ' : 
    System.String Value 'get set' : 
    System.String LocalName 'get ' : 
    System.String NamespaceUri 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    SetAttributeNode(IXmlNode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Attributes(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    AppendChild(IXmlNode): PrivateScope, Public, Virtual, HideBySig
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_LocalName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NamespaceUri(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetPrefixOfNamespace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsEmpty(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Newtonsoft.Json.Converters.XmlNodeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Newtonsoft.Json.JsonConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.IXmlNode] EmptyChildNodes : Assembly, Static, InitOnly
  Properties:
    System.String DeserializeRootElementName 'get set' : 
    Boolean WriteArrayAttribute 'get set' : 
    Boolean OmitRootObject 'get set' : 
    Boolean EncodeSpecialCharacters 'get set' : 
  Methods:
    get_DeserializeRootElementName(): PrivateScope, Public, HideBySig, SpecialName
    set_DeserializeRootElementName(String): PrivateScope, Public, HideBySig, SpecialName
    get_WriteArrayAttribute(): PrivateScope, Public, HideBySig, SpecialName
    set_WriteArrayAttribute(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OmitRootObject(): PrivateScope, Public, HideBySig, SpecialName
    set_OmitRootObject(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EncodeSpecialCharacters(): PrivateScope, Public, HideBySig, SpecialName
    set_EncodeSpecialCharacters(Boolean): PrivateScope, Public, HideBySig, SpecialName
    WriteJson(JsonWriter, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    ReadJson(JsonReader, Type, Object, JsonSerializer): PrivateScope, Public, Virtual, HideBySig
    CanConvert(Type): PrivateScope, Public, Virtual, HideBySig
Struct Newtonsoft.Json.Bson.BsonBinaryType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Bson.BsonBinaryType Binary = 0 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonBinaryType Function = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonBinaryType BinaryOld = 2 : Public, Static, Literal, HasDefault (Obsolete)
    Newtonsoft.Json.Bson.BsonBinaryType UuidOld = 3 : Public, Static, Literal, HasDefault (Obsolete)
    Newtonsoft.Json.Bson.BsonBinaryType Uuid = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonBinaryType Md5 = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonBinaryType UserDefined = 128 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Bson.BsonBinaryWriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IO.BinaryWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTimeKind DateTimeKindHandling 'get set' : 
  Methods:
    get_DateTimeKindHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeKindHandling(DateTimeKind): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    WriteToken(BsonToken): PrivateScope, Public, HideBySig
    WriteUtf8Bytes(String, Int32): PrivateScope, Public, HideBySig
Class Newtonsoft.Json.Bson.BsonObjectId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Newtonsoft.Json.JsonReader
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean, System.DateTimeKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader, Boolean, System.DateTimeKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean JsonNet35BinaryCompatibility 'get set' :  (Obsolete)
    Boolean ReadRootValueAsArray 'get set' : 
    System.DateTimeKind DateTimeKindHandling 'get set' : 
  Methods:
    get_JsonNet35BinaryCompatibility(): PrivateScope, Public, HideBySig, SpecialName
    set_JsonNet35BinaryCompatibility(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReadRootValueAsArray(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadRootValueAsArray(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeKindHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeKindHandling(DateTimeKind): PrivateScope, Public, HideBySig, SpecialName
    Read(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Newtonsoft.Json.Bson.BsonToken: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
    Newtonsoft.Json.Bson.BsonToken Parent 'get set' : 
    Int32 CalculatedSize 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    set_Parent(BsonToken): PrivateScope, Public, HideBySig, SpecialName
    get_CalculatedSize(): PrivateScope, Public, HideBySig, SpecialName
    set_CalculatedSize(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonObject: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonToken
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Newtonsoft.Json.Bson.BsonProperty]
    System.Collections.IEnumerable
  Properties:
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
  Methods:
    Add(String, BsonToken): PrivateScope, Public, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Bson.BsonArray: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonToken
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Newtonsoft.Json.Bson.BsonToken]
    System.Collections.IEnumerable
  Properties:
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
  Methods:
    Add(BsonToken): PrivateScope, Public, HideBySig
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Newtonsoft.Json.Bson.BsonEmpty: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonToken
  Fields:
    Newtonsoft.Json.Bson.BsonToken Null : Public, Static, InitOnly
    Newtonsoft.Json.Bson.BsonToken Undefined : Public, Static, InitOnly
  Properties:
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonValue: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonToken
    Void .ctor(System.Object, Newtonsoft.Json.Bson.BsonType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Value 'get ' : 
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonBoolean: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonValue
  Fields:
    Newtonsoft.Json.Bson.BsonBoolean False : Public, Static, InitOnly
    Newtonsoft.Json.Bson.BsonBoolean True : Public, Static, InitOnly
Class Newtonsoft.Json.Bson.BsonString: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonValue
    Void .ctor(System.Object, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ByteCount 'get set' : 
    Boolean IncludeLength 'get ' : 
  Methods:
    get_ByteCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ByteCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeLength(): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonBinary: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonValue
    Void .ctor(Byte[], Newtonsoft.Json.Bson.BsonBinaryType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Bson.BsonBinaryType BinaryType 'get set' : 
  Methods:
    get_BinaryType(): PrivateScope, Public, HideBySig, SpecialName
    set_BinaryType(BsonBinaryType): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonRegex: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Newtonsoft.Json.Bson.BsonToken
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Bson.BsonString Pattern 'get set' : 
    Newtonsoft.Json.Bson.BsonString Options 'get set' : 
    Newtonsoft.Json.Bson.BsonType Type 'get ' : 
  Methods:
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    set_Pattern(BsonString): PrivateScope, Public, HideBySig, SpecialName
    get_Options(): PrivateScope, Public, HideBySig, SpecialName
    set_Options(BsonString): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Newtonsoft.Json.Bson.BsonProperty: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Newtonsoft.Json.Bson.BsonString Name 'get set' : 
    Newtonsoft.Json.Bson.BsonToken Value 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(BsonString): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(BsonToken): PrivateScope, Public, HideBySig, SpecialName
Struct Newtonsoft.Json.Bson.BsonType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    SByte value__ : Public, SpecialName, RTSpecialName
    Newtonsoft.Json.Bson.BsonType Number = 1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType String = 2 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Object = 3 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Array = 4 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Binary = 5 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Undefined = 6 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Oid = 7 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Boolean = 8 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Date = 9 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Null = 10 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Regex = 11 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Reference = 12 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Code = 13 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Symbol = 14 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType CodeWScope = 15 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Integer = 16 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType TimeStamp = 17 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType Long = 18 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType MinKey = -1 : Public, Static, Literal, HasDefault
    Newtonsoft.Json.Bson.BsonType MaxKey = 127 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Bson.BsonWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Newtonsoft.Json.JsonWriter
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTimeKind DateTimeKindHandling 'get set' : 
  Methods:
    get_DateTimeKindHandling(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeKindHandling(DateTimeKind): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    WriteComment(String): PrivateScope, Public, Virtual, HideBySig
    WriteStartConstructor(String): PrivateScope, Public, Virtual, HideBySig
    WriteRaw(String): PrivateScope, Public, Virtual, HideBySig
    WriteRawValue(String): PrivateScope, Public, Virtual, HideBySig
    WriteStartArray(): PrivateScope, Public, Virtual, HideBySig
    WriteStartObject(): PrivateScope, Public, Virtual, HideBySig
    WritePropertyName(String): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    AddToken(BsonToken): PrivateScope, Assembly, HideBySig
    WriteValue(Object): PrivateScope, Public, Virtual, HideBySig
    WriteNull(): PrivateScope, Public, Virtual, HideBySig
    WriteUndefined(): PrivateScope, Public, Virtual, HideBySig
    WriteValue(String): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt32): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt64): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Single): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Double): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Boolean): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Int16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(UInt16): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Char): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(SByte): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Decimal): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTime): PrivateScope, Public, Virtual, HideBySig
    WriteValue(DateTimeOffset): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Byte[]): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Guid): PrivateScope, Public, Virtual, HideBySig
    WriteValue(TimeSpan): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Uri): PrivateScope, Public, Virtual, HideBySig
    WriteObjectId(Byte[]): PrivateScope, Public, HideBySig
    WriteRegex(String, String): PrivateScope, Public, HideBySig
Class NLog.GDC: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit (Obsolete)
  Methods:
    Set(String, String): PrivateScope, Public, Static, HideBySig
    Get(String): PrivateScope, Public, Static, HideBySig
    Get(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    GetObject(String): PrivateScope, Public, Static, HideBySig
    Contains(String): PrivateScope, Public, Static, HideBySig
    Remove(String): PrivateScope, Public, Static, HideBySig
    Clear(): PrivateScope, Public, Static, HideBySig
Class NLog.GlobalDiagnosticsContext: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Set(String, String): PrivateScope, Public, Static, HideBySig
    Set(String, Object): PrivateScope, Public, Static, HideBySig
    Get(String): PrivateScope, Public, Static, HideBySig
    Get(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    GetObject(String): PrivateScope, Public, Static, HideBySig
    GetNames(): PrivateScope, Public, Static, HideBySig
    Contains(String): PrivateScope, Public, Static, HideBySig
    Remove(String): PrivateScope, Public, Static, HideBySig
    Clear(): PrivateScope, Public, Static, HideBySig
Interface NLog.IIncludeContext: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Boolean IncludeMdc 'get set' : 
    Boolean IncludeNdc 'get set' : 
    Boolean IncludeAllProperties 'get set' : 
    Boolean IncludeMdlc 'get set' : 
    Boolean IncludeNdlc 'get set' : 
  Methods:
    get_IncludeMdc(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IncludeMdc(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IncludeNdc(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IncludeNdc(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IncludeAllProperties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IncludeAllProperties(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IncludeMdlc(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IncludeMdlc(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IncludeNdlc(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IncludeNdlc(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.IJsonConverter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    SerializeObject(Object, StringBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.ILogger: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    NLog.ILoggerBase
    NLog.ISuppress
  Properties:
    Boolean IsTraceEnabled 'get ' : 
    Boolean IsDebugEnabled 'get ' : 
    Boolean IsInfoEnabled 'get ' : 
    Boolean IsWarnEnabled 'get ' : 
    Boolean IsErrorEnabled 'get ' : 
    Boolean IsFatalEnabled 'get ' : 
  Methods:
    Info(String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(LogMessageGenerator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WarnException(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Warn(Exception, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(Exception, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Warn(IFormatProvider, String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(LogMessageGenerator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ErrorException(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Error(Exception, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(Exception, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Error(IFormatProvider, String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(LogMessageGenerator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FatalException(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Fatal(Exception, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(Exception, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Fatal(IFormatProvider, String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Object, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(IFormatProvider, String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Fatal(String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_IsTraceEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsDebugEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsInfoEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsWarnEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsErrorEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsFatalEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Trace(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(LogMessageGenerator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TraceException(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Trace(Exception, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(Exception, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Trace(IFormatProvider, String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(LogMessageGenerator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DebugException(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Debug(Exception, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(Exception, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Debug(IFormatProvider, String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(LogMessageGenerator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InfoException(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Info(Exception, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(Exception, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Info(IFormatProvider, String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Object, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(IFormatProvider, String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Trace(String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Object, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(IFormatProvider, String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Object, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(IFormatProvider, String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Object, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(IFormatProvider, String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warn(String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Object, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(IFormatProvider, String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.ILoggerBase: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Name 'get ' : 
    NLog.LogFactory Factory 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] LoggerReconfigured: 
  Methods:
    Log(LogLevel, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Object, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    add_LoggerReconfigured(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_LoggerReconfigured(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Factory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsEnabled(LogLevel): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogEventInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(Type, LogEventInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, LogMessageGenerator): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LogException(LogLevel, String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Log(LogLevel, Exception, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract (Obsolete)
    Log(LogLevel, IFormatProvider, String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, TArgument): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, TArgument1, TArgument2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Log(LogLevel, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.ILoggerExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Log(ILogger, LogLevel, Exception, LogMessageGenerator): PrivateScope, Public, Static, HideBySig
    Trace(ILogger, Exception, LogMessageGenerator): PrivateScope, Public, Static, HideBySig
    Debug(ILogger, Exception, LogMessageGenerator): PrivateScope, Public, Static, HideBySig
    Info(ILogger, Exception, LogMessageGenerator): PrivateScope, Public, Static, HideBySig
    Warn(ILogger, Exception, LogMessageGenerator): PrivateScope, Public, Static, HideBySig
    Error(ILogger, Exception, LogMessageGenerator): PrivateScope, Public, Static, HideBySig
    Fatal(ILogger, Exception, LogMessageGenerator): PrivateScope, Public, Static, HideBySig
Interface NLog.IObjectTypeTransformer: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    TryTransformObject(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.ISuppress: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Swallow(Action): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Swallow(Func`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Swallow(Func`1, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Swallow(Task): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SwallowAsync(Task): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SwallowAsync(Func`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SwallowAsync(Func`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SwallowAsync(Func`1, TResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.IValueFormatter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    FormatValue(Object, String, CaptureType, IFormatProvider, StringBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.LogEventInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.LogLevel, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.LogLevel, System.String, System.String, System.Collections.Generic.IList`1[NLog.MessageTemplates.MessageTemplateParameter]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.LogLevel, System.String, System.IFormatProvider, System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.LogLevel, System.String, System.IFormatProvider, System.String, System.Object[], System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.DateTime ZeroDate : Public, Static, InitOnly
    NLog.LogMessageFormatter StringFormatMessageFormatter : Assembly, Static, InitOnly
  Properties:
    NLog.LogMessageFormatter DefaultMessageFormatter 'get set' : 
    Int32 SequenceID 'get set' : 
    System.DateTime TimeStamp 'get set' : 
    NLog.LogLevel Level 'get set' : 
    NLog.Internal.CallSiteInformation CallSiteInformation 'get set' : 
    Boolean HasStackTrace 'get ' : 
    System.Diagnostics.StackFrame UserStackFrame 'get ' : 
    Int32 UserStackFrameNumber 'get ' : 
    System.Diagnostics.StackTrace StackTrace 'get ' : 
    System.String CallerClassName 'get ' : 
    System.String CallerMemberName 'get ' : 
    System.String CallerFilePath 'get ' : 
    Int32 CallerLineNumber 'get ' : 
    System.Exception Exception 'get set' : 
    System.String LoggerName 'get set' : 
    System.String LoggerShortName 'get ' :  (Obsolete)
    System.String Message 'get set' : 
    System.Object[] Parameters 'get set' : 
    System.IFormatProvider FormatProvider 'get set' : 
    NLog.LogMessageFormatter MessageFormatter 'get set' : 
    System.String FormattedMessage 'get ' : 
    Boolean HasProperties 'get ' : 
    System.Collections.Generic.IDictionary`2[System.Object,System.Object] Properties 'get ' : 
    NLog.MessageTemplates.MessageTemplateParameters MessageTemplateParameters 'get ' : 
    System.Collections.IDictionary Context 'get ' :  (Obsolete)
  Methods:
    get_DefaultMessageFormatter(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_SequenceID(): PrivateScope, Public, HideBySig, SpecialName
    get_TimeStamp(): PrivateScope, Public, HideBySig, SpecialName
    set_TimeStamp(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    set_Level(LogLevel): PrivateScope, Public, HideBySig, SpecialName
    get_CallSiteInformation(): PrivateScope, Assembly, HideBySig, SpecialName
    GetCallSiteInformationInternal(): PrivateScope, Assembly, HideBySig
    get_HasStackTrace(): PrivateScope, Public, HideBySig, SpecialName
    get_UserStackFrame(): PrivateScope, Public, HideBySig, SpecialName
    get_UserStackFrameNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_StackTrace(): PrivateScope, Public, HideBySig, SpecialName
    get_CallerClassName(): PrivateScope, Public, HideBySig, SpecialName
    get_CallerMemberName(): PrivateScope, Public, HideBySig, SpecialName
    get_CallerFilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_CallerLineNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
    set_Exception(Exception): PrivateScope, Public, HideBySig, SpecialName
    get_LoggerName(): PrivateScope, Public, HideBySig, SpecialName
    set_LoggerName(String): PrivateScope, Public, HideBySig, SpecialName
    get_LoggerShortName(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    set_Message(String): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameters(Object[]): PrivateScope, Public, HideBySig, SpecialName
    get_FormatProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_FormatProvider(IFormatProvider): PrivateScope, Public, HideBySig, SpecialName
    get_MessageFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_MessageFormatter(LogMessageFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_FormattedMessage(): PrivateScope, Public, HideBySig, SpecialName
    get_HasProperties(): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    CreateOrUpdatePropertiesInternal(Boolean(Optional, HasDefault), IList`1(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    get_MessageTemplateParameters(): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
    CreateNullEvent(): PrivateScope, Public, Static, HideBySig
    Create(LogLevel, String, String): PrivateScope, Public, Static, HideBySig
    Create(LogLevel, String, IFormatProvider, String, Object[]): PrivateScope, Public, Static, HideBySig
    Create(LogLevel, String, IFormatProvider, Object): PrivateScope, Public, Static, HideBySig
    Create(LogLevel, String, String, Exception): PrivateScope, Public, Static, HideBySig (Obsolete)
    Create(LogLevel, String, Exception, IFormatProvider, String): PrivateScope, Public, Static, HideBySig
    Create(LogLevel, String, Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Static, HideBySig
    WithContinuation(AsyncContinuation): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    SetStackTrace(StackTrace, Int32): PrivateScope, Public, HideBySig
    SetCallerInfo(String, String, String, Int32): PrivateScope, Public, HideBySig
    AddCachedLayoutValue(Layout, Object): PrivateScope, Assembly, HideBySig
    TryGetCachedLayoutValue(Layout, Object&(Out)): PrivateScope, Assembly, HideBySig
    IsLogEventMutableSafe(): PrivateScope, Assembly, HideBySig
    CanLogEventDeferMessageFormat(): PrivateScope, Assembly, HideBySig
    AppendFormattedMessage(ILogMessageFormatter, StringBuilder): PrivateScope, Assembly, HideBySig
    SetDefaultMessageFormatter(Nullable`1): PrivateScope, Assembly, Static, HideBySig
Class NLog.LogFactory`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, NLog.Logger
  :NLog.LogFactory
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetLogger(String): PrivateScope, Public, HideBySig
    GetCurrentClassLogger(): PrivateScope, Public, HideBySig
Class NLog.LogFactory: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Config.LoggingConfiguration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Config.ILoggingConfigurationLoader, NLog.Internal.Fakeables.IAppEnvironment): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Object _syncRoot : Assembly, InitOnly
    NLog.Config.LoggingConfiguration _config : Assembly
  Properties:
    NLog.Internal.Fakeables.IAppDomain CurrentAppDomain 'get set' : 
    NLog.Internal.Fakeables.IAppEnvironment DefaultAppEnvironment 'get ' : 
    NLog.Internal.Fakeables.IAppEnvironment CurrentAppEnvironment 'get set' : 
    Boolean ThrowExceptions 'get set' : 
    System.Nullable`1[System.Boolean] ThrowConfigExceptions 'get set' : 
    Boolean KeepVariablesOnReload 'get set' : 
    Boolean AutoShutdown 'get set' : 
    NLog.Config.LoggingConfiguration Configuration 'get set' : 
    NLog.LogLevel GlobalThreshold 'get set' : 
    System.Globalization.CultureInfo DefaultCultureInfo 'get ' : 
  Events:
    System.EventHandler`1[NLog.Config.LoggingConfigurationChangedEventArgs] ConfigurationChanged: 
    System.EventHandler`1[NLog.Config.LoggingConfigurationReloadedEventArgs] ConfigurationReloaded: 
    System.EventHandler`1[System.EventArgs] LoggerShutdown: 
  Methods:
    add_ConfigurationChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ConfigurationChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_ConfigurationReloaded(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ConfigurationReloaded(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentAppDomain(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_CurrentAppDomain(IAppDomain): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DefaultAppEnvironment(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_CurrentAppEnvironment(): PrivateScope, Assembly, HideBySig, SpecialName
    set_CurrentAppEnvironment(IAppEnvironment): PrivateScope, Assembly, HideBySig, SpecialName
    get_ThrowExceptions(): PrivateScope, Public, HideBySig, SpecialName
    set_ThrowExceptions(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ThrowConfigExceptions(): PrivateScope, Public, HideBySig, SpecialName
    set_ThrowConfigExceptions(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_KeepVariablesOnReload(): PrivateScope, Public, HideBySig, SpecialName
    set_KeepVariablesOnReload(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoShutdown(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoShutdown(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Configuration(): PrivateScope, Public, HideBySig, SpecialName
    set_Configuration(LoggingConfiguration): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_GlobalThreshold(LogLevel): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultCultureInfo(): PrivateScope, Public, HideBySig, SpecialName
    LogConfigurationInitialized(): PrivateScope, Assembly, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Setup(): PrivateScope, Public, HideBySig
    Setup(Action`1): PrivateScope, Public, HideBySig
    CreateNullLogger(): PrivateScope, Public, HideBySig
    GetCurrentClassLogger(): PrivateScope, Public, HideBySig
    GetCurrentClassLogger(): PrivateScope, Public, HideBySig
    GetCurrentClassLogger(Type): PrivateScope, Public, HideBySig
    GetLogger(String): PrivateScope, Public, HideBySig
    GetLogger(String): PrivateScope, Public, HideBySig
    GetLogger(String, Type): PrivateScope, Public, HideBySig
    ReconfigExistingLoggers(): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
    Flush(TimeSpan): PrivateScope, Public, HideBySig
    Flush(Int32): PrivateScope, Public, HideBySig
    Flush(AsyncContinuation): PrivateScope, Public, HideBySig
    Flush(AsyncContinuation, Int32): PrivateScope, Public, HideBySig
    Flush(AsyncContinuation, TimeSpan): PrivateScope, Public, HideBySig
    DisableLogging(): PrivateScope, Public, HideBySig (Obsolete)
    EnableLogging(): PrivateScope, Public, HideBySig (Obsolete)
    SuspendLogging(): PrivateScope, Public, HideBySig
    ResumeLogging(): PrivateScope, Public, HideBySig
    IsLoggingEnabled(): PrivateScope, Public, HideBySig
    NotifyConfigurationReloaded(LoggingConfigurationReloadedEventArgs): PrivateScope, Assembly, HideBySig
    GetConfigurationForLogger(String, LoggingConfiguration): PrivateScope, Assembly, HideBySig
    Shutdown(): PrivateScope, Public, HideBySig
    GetCandidateConfigFilePaths(): PrivateScope, Public, HideBySig
    GetCandidateConfigFilePaths(String): PrivateScope, Assembly, HideBySig
    SetCandidateConfigFilePaths(IEnumerable`1): PrivateScope, Public, HideBySig
    ResetCandidateConfigFilePath(): PrivateScope, Public, HideBySig
    CreateNewLogger(Type): PrivateScope, Assembly, HideBySig
    LoadConfiguration(String): PrivateScope, Public, HideBySig
    LoadConfiguration(String, Boolean): PrivateScope, Assembly, HideBySig
    ResetLoggerCache(): PrivateScope, Assembly, HideBySig
Class NLog.Logger: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    NLog.ILogger
    NLog.ILoggerBase
    NLog.ISuppress
  Fields:
    System.Type DefaultLoggerType : Assembly, Static, InitOnly
  Properties:
    Boolean IsTraceEnabled 'get ' : 
    Boolean IsDebugEnabled 'get ' : 
    Boolean IsInfoEnabled 'get ' : 
    Boolean IsWarnEnabled 'get ' : 
    Boolean IsErrorEnabled 'get ' : 
    Boolean IsFatalEnabled 'get ' : 
    System.String Name 'get set' : 
    NLog.LogFactory Factory 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,System.Object] Properties 'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] LoggerReconfigured: 
  Methods:
    Debug(IFormatProvider, String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Object, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Object, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Object, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Object, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_LoggerReconfigured(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_LoggerReconfigured(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Factory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    IsEnabled(LogLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WithProperty(String, Object): PrivateScope, Public, HideBySig
    SetProperty(String, Object): PrivateScope, Public, HideBySig
    Log(LogEventInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(Type, LogEventInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, LogMessageGenerator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LogException(LogLevel, String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Log(LogLevel, IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Log(LogLevel, Exception, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Swallow(Action): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Swallow(Func`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Swallow(Func`1, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Swallow(Task): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SwallowAsync(Task): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SwallowAsync(Func`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SwallowAsync(Func`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SwallowAsync(Func`1, TResult): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(String, LoggerConfiguration, LogFactory): PrivateScope, Assembly, HideBySig
    SetConfiguration(LoggerConfiguration): PrivateScope, Assembly, HideBySig
    Debug(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(LogMessageGenerator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InfoException(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Info(IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Info(Exception, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(Exception, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(LogMessageGenerator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WarnException(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Warn(IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Warn(Exception, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(Exception, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warn(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(LogMessageGenerator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ErrorException(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Error(IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Error(Exception, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(Exception, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(LogMessageGenerator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FatalException(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Fatal(IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Fatal(Exception, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(Exception, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Fatal(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Object, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, IFormatProvider, String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Log(LogLevel, String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Object, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Object, Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ConditionalDebug(T): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, T): PrivateScope, Public, HideBySig
    ConditionalDebug(LogMessageGenerator): PrivateScope, Public, HideBySig
    ConditionalDebug(Exception, String, Object[]): PrivateScope, Public, HideBySig
    ConditionalDebug(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, Object[]): PrivateScope, Public, HideBySig
    ConditionalDebug(String): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Object[]): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, TArgument): PrivateScope, Public, HideBySig
    ConditionalDebug(String, TArgument): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, HideBySig
    ConditionalDebug(String, TArgument1, TArgument2): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, HideBySig
    ConditionalDebug(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, HideBySig
    ConditionalDebug(Object): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, Object): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Object, Object): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Object, Object, Object): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, Boolean): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Boolean): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, Char): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Char): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, Byte): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Byte): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, String): PrivateScope, Public, HideBySig
    ConditionalDebug(String, String): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, Int32): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Int32): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, Int64): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Int64): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, Single): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Single): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, Double): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Double): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, Decimal): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Decimal): PrivateScope, Public, HideBySig
    ConditionalDebug(IFormatProvider, String, Object): PrivateScope, Public, HideBySig
    ConditionalDebug(String, Object): PrivateScope, Public, HideBySig
    ConditionalTrace(T): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, T): PrivateScope, Public, HideBySig
    ConditionalTrace(LogMessageGenerator): PrivateScope, Public, HideBySig
    ConditionalTrace(Exception, String, Object[]): PrivateScope, Public, HideBySig
    ConditionalTrace(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, Object[]): PrivateScope, Public, HideBySig
    ConditionalTrace(String): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Object[]): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, TArgument): PrivateScope, Public, HideBySig
    ConditionalTrace(String, TArgument): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, HideBySig
    ConditionalTrace(String, TArgument1, TArgument2): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, HideBySig
    ConditionalTrace(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, HideBySig
    ConditionalTrace(Object): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, Object): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Object, Object): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Object, Object, Object): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, Boolean): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Boolean): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, Char): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Char): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, Byte): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Byte): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, String): PrivateScope, Public, HideBySig
    ConditionalTrace(String, String): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, Int32): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Int32): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, Int64): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Int64): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, Single): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Single): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, Double): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Double): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, Decimal): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Decimal): PrivateScope, Public, HideBySig
    ConditionalTrace(IFormatProvider, String, Object): PrivateScope, Public, HideBySig
    ConditionalTrace(String, Object): PrivateScope, Public, HideBySig
    get_IsTraceEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsDebugEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInfoEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsWarnEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsErrorEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFatalEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Trace(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(LogMessageGenerator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TraceException(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Trace(IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Trace(Exception, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(Exception, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, TArgument1, TArgument2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(IFormatProvider, String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trace(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(LogMessageGenerator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DebugException(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Debug(IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Debug(Exception, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(Exception, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(Exception, IFormatProvider, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(IFormatProvider, String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, TArgument): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.LoggerImpl: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Write(Type, TargetWithFilterChain, LogEventInfo, LogFactory): PrivateScope, Assembly, Static, HideBySig
Class NLog.LogLevel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.IComparable
    System.IEquatable`1[NLog.LogLevel]
    System.IConvertible
  Fields:
    NLog.LogLevel Trace : Public, Static, InitOnly
    NLog.LogLevel Debug : Public, Static, InitOnly
    NLog.LogLevel Info : Public, Static, InitOnly
    NLog.LogLevel Warn : Public, Static, InitOnly
    NLog.LogLevel Error : Public, Static, InitOnly
    NLog.LogLevel Fatal : Public, Static, InitOnly
    NLog.LogLevel Off : Public, Static, InitOnly
  Properties:
    System.Collections.Generic.IEnumerable`1[NLog.LogLevel] AllLevels 'get ' : 
    System.Collections.Generic.IEnumerable`1[NLog.LogLevel] AllLoggingLevels 'get ' : 
    System.String Name 'get ' : 
    NLog.LogLevel MaxLevel 'get ' : 
    NLog.LogLevel MinLevel 'get ' : 
    Int32 Ordinal 'get ' : 
  Methods:
    get_AllLevels(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AllLoggingLevels(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLevel(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MinLevel(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Ordinal(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(LogLevel, LogLevel): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(LogLevel, LogLevel): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(LogLevel, LogLevel): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(LogLevel, LogLevel): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(LogLevel, LogLevel): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(LogLevel, LogLevel): PrivateScope, Public, Static, HideBySig, SpecialName
    FromOrdinal(Int32): PrivateScope, Public, Static, HideBySig
    FromString(String): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(LogLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.LogManager: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    NLog.LogFactory factory : Assembly, Static, InitOnly
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
    Boolean ThrowExceptions 'get set' : 
    System.Nullable`1[System.Boolean] ThrowConfigExceptions 'get set' : 
    Boolean KeepVariablesOnReload 'get set' : 
    Boolean AutoShutdown 'get set' : 
    NLog.Config.LoggingConfiguration Configuration 'get set' : 
    NLog.LogLevel GlobalThreshold 'get set' : 
    GetCultureInfo DefaultCultureInfo 'get set' :  (Obsolete)
  Events:
    System.EventHandler`1[NLog.Config.LoggingConfigurationChangedEventArgs] ConfigurationChanged: 
    System.EventHandler`1[NLog.Config.LoggingConfigurationReloadedEventArgs] ConfigurationReloaded: 
  Methods:
    get_LogFactory(): PrivateScope, Public, Static, HideBySig, SpecialName
    add_ConfigurationChanged(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_ConfigurationChanged(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    add_ConfigurationReloaded(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_ConfigurationReloaded(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ThrowExceptions(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ThrowExceptions(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ThrowConfigExceptions(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ThrowConfigExceptions(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    get_KeepVariablesOnReload(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_KeepVariablesOnReload(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AutoShutdown(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_AutoShutdown(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Configuration(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Configuration(LoggingConfiguration): PrivateScope, Public, Static, HideBySig, SpecialName
    Setup(): PrivateScope, Public, Static, HideBySig
    Setup(Action`1): PrivateScope, Public, Static, HideBySig
    LoadConfiguration(String): PrivateScope, Public, Static, HideBySig
    get_GlobalThreshold(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_GlobalThreshold(LogLevel): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DefaultCultureInfo(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_DefaultCultureInfo(GetCultureInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    GetCurrentClassLogger(): PrivateScope, Public, Static, HideBySig
    IsHiddenAssembly(Assembly): PrivateScope, Assembly, Static, HideBySig
    AddHiddenAssembly(Assembly): PrivateScope, Public, Static, HideBySig
    GetCurrentClassLogger(Type): PrivateScope, Public, Static, HideBySig
    CreateNullLogger(): PrivateScope, Public, Static, HideBySig
    GetLogger(String): PrivateScope, Public, Static, HideBySig
    GetLogger(String, Type): PrivateScope, Public, Static, HideBySig
    ReconfigExistingLoggers(): PrivateScope, Public, Static, HideBySig
    Flush(): PrivateScope, Public, Static, HideBySig
    Flush(TimeSpan): PrivateScope, Public, Static, HideBySig
    Flush(Int32): PrivateScope, Public, Static, HideBySig
    Flush(AsyncContinuation): PrivateScope, Public, Static, HideBySig
    Flush(AsyncContinuation, TimeSpan): PrivateScope, Public, Static, HideBySig
    Flush(AsyncContinuation, Int32): PrivateScope, Public, Static, HideBySig
    DisableLogging(): PrivateScope, Public, Static, HideBySig
    EnableLogging(): PrivateScope, Public, Static, HideBySig
    IsLoggingEnabled(): PrivateScope, Public, Static, HideBySig
    Shutdown(): PrivateScope, Public, Static, HideBySig
Class NLog.LogMessageFormatter: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(LogEventInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(LogEventInfo, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NLog.LogMessageGenerator: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NLog.MappedDiagnosticsContext: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    SetScoped(String, String): PrivateScope, Public, Static, HideBySig
    SetScoped(String, Object): PrivateScope, Public, Static, HideBySig
    Set(String, String): PrivateScope, Public, Static, HideBySig
    Set(String, Object): PrivateScope, Public, Static, HideBySig
    Get(String): PrivateScope, Public, Static, HideBySig
    Get(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    GetObject(String): PrivateScope, Public, Static, HideBySig
    GetNames(): PrivateScope, Public, Static, HideBySig
    Contains(String): PrivateScope, Public, Static, HideBySig
    Remove(String): PrivateScope, Public, Static, HideBySig
    Clear(): PrivateScope, Public, Static, HideBySig
Class NLog.MappedDiagnosticsLogicalContext: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Get(String): PrivateScope, Public, Static, HideBySig
    Get(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    GetObject(String): PrivateScope, Public, Static, HideBySig
    SetScoped(String, String): PrivateScope, Public, Static, HideBySig
    SetScoped(String, Object): PrivateScope, Public, Static, HideBySig
    SetScoped(String, T): PrivateScope, Public, Static, HideBySig
    SetScoped(IReadOnlyList`1): PrivateScope, Public, Static, HideBySig
    Set(String, String): PrivateScope, Public, Static, HideBySig
    Set(String, Object): PrivateScope, Public, Static, HideBySig
    Set(String, T): PrivateScope, Public, Static, HideBySig
    GetNames(): PrivateScope, Public, Static, HideBySig
    Contains(String): PrivateScope, Public, Static, HideBySig
    Remove(String): PrivateScope, Public, Static, HideBySig
    Clear(): PrivateScope, Public, Static, HideBySig
    Clear(Boolean): PrivateScope, Public, Static, HideBySig
Class NLog.MDC: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit (Obsolete)
  Methods:
    Set(String, String): PrivateScope, Public, Static, HideBySig
    Get(String): PrivateScope, Public, Static, HideBySig
    GetObject(String): PrivateScope, Public, Static, HideBySig
    Contains(String): PrivateScope, Public, Static, HideBySig
    Remove(String): PrivateScope, Public, Static, HideBySig
    Clear(): PrivateScope, Public, Static, HideBySig
Class NLog.MessageTemplateFormatMethodAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ParameterName 'get ' : 
  Methods:
    get_ParameterName(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.NDC: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit (Obsolete)
  Properties:
    System.String TopMessage 'get ' : 
    System.Object TopObject 'get ' : 
  Methods:
    get_TopMessage(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TopObject(): PrivateScope, Public, Static, HideBySig, SpecialName
    Push(String): PrivateScope, Public, Static, HideBySig
    Pop(): PrivateScope, Public, Static, HideBySig
    PopObject(): PrivateScope, Public, Static, HideBySig
    Clear(): PrivateScope, Public, Static, HideBySig
    GetAllMessages(): PrivateScope, Public, Static, HideBySig
    GetAllObjects(): PrivateScope, Public, Static, HideBySig
Class NLog.NestedDiagnosticsContext: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.String TopMessage 'get ' : 
    System.Object TopObject 'get ' : 
  Methods:
    get_TopMessage(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TopObject(): PrivateScope, Public, Static, HideBySig, SpecialName
    Push(String): PrivateScope, Public, Static, HideBySig
    Push(Object): PrivateScope, Public, Static, HideBySig
    Pop(): PrivateScope, Public, Static, HideBySig
    Pop(IFormatProvider): PrivateScope, Public, Static, HideBySig
    PopObject(): PrivateScope, Public, Static, HideBySig
    PeekObject(): PrivateScope, Public, Static, HideBySig
    Clear(): PrivateScope, Public, Static, HideBySig
    GetAllMessages(): PrivateScope, Public, Static, HideBySig
    GetAllMessages(IFormatProvider): PrivateScope, Public, Static, HideBySig
    GetAllObjects(): PrivateScope, Public, Static, HideBySig
Class NLog.NestedDiagnosticsLogicalContext: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Push(T): PrivateScope, Public, Static, HideBySig
    PushObject(Object): PrivateScope, Public, Static, HideBySig
    Pop(): PrivateScope, Public, Static, HideBySig
    Pop(IFormatProvider): PrivateScope, Public, Static, HideBySig
    PopObject(): PrivateScope, Public, Static, HideBySig
    PeekObject(): PrivateScope, Public, Static, HideBySig
    PeekTopScopeBeginTime(): PrivateScope, Assembly, Static, HideBySig
    PeekBottomScopeBeginTime(): PrivateScope, Assembly, Static, HideBySig
    Clear(): PrivateScope, Public, Static, HideBySig
    GetAllMessages(): PrivateScope, Public, Static, HideBySig
    GetAllMessages(IFormatProvider): PrivateScope, Public, Static, HideBySig
    GetAllObjects(): PrivateScope, Public, Static, HideBySig
Class NLog.NLogConfigurationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Exception, System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.NLogRuntimeException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.NLogTraceListener: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Diagnostics.TraceListener
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.LogFactory LogFactory 'get set' : 
    NLog.LogLevel DefaultLogLevel 'get set' : 
    NLog.LogLevel ForceLogLevel 'get set' : 
    Boolean DisableFlush 'get set' : 
    Boolean IsThreadSafe 'get ' : 
    Boolean AutoLoggerName 'get set' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, HideBySig, SpecialName
    set_LogFactory(LogFactory): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultLogLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultLogLevel(LogLevel): PrivateScope, Public, HideBySig, SpecialName
    get_ForceLogLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_ForceLogLevel(LogLevel): PrivateScope, Public, HideBySig, SpecialName
    get_DisableFlush(): PrivateScope, Public, HideBySig, SpecialName
    set_DisableFlush(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsThreadSafe(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AutoLoggerName(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoLoggerName(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Write(String): PrivateScope, Public, Virtual, HideBySig
    WriteLine(String): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    Fail(String): PrivateScope, Public, Virtual, HideBySig
    Fail(String, String): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    TraceData(TraceEventCache, String, TraceEventType, Int32, Object): PrivateScope, Public, Virtual, HideBySig
    TraceData(TraceEventCache, String, TraceEventType, Int32, Object[]): PrivateScope, Public, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32): PrivateScope, Public, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[]): PrivateScope, Public, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32, String): PrivateScope, Public, Virtual, HideBySig
    TraceTransfer(TraceEventCache, String, Int32, String, Guid): PrivateScope, Public, Virtual, HideBySig
Class NLog.NullLogger: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Logger
    Void .ctor(NLog.LogFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.SetupBuilderExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetCurrentClassLogger(ISetupBuilder): PrivateScope, Public, Static, HideBySig
    GetLogger(ISetupBuilder, String): PrivateScope, Public, Static, HideBySig
    SetupExtensions(ISetupBuilder, Action`1): PrivateScope, Public, Static, HideBySig
    SetupInternalLogger(ISetupBuilder, Action`1): PrivateScope, Public, Static, HideBySig
    SetupSerialization(ISetupBuilder, Action`1): PrivateScope, Public, Static, HideBySig
    LoadConfiguration(ISetupBuilder, Action`1): PrivateScope, Public, Static, HideBySig
    LoadConfiguration(ISetupBuilder, LoggingConfiguration): PrivateScope, Public, Static, HideBySig
    LoadConfigurationFromFile(ISetupBuilder, String(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LoadConfigurationFromXml(ISetupBuilder, String): PrivateScope, Public, Static, HideBySig
Class NLog.SetupExtensionsBuilderExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    AutoLoadAssemblies(ISetupExtensionsBuilder, Boolean): PrivateScope, Public, Static, HideBySig
    RegisterAssembly(ISetupExtensionsBuilder, Assembly): PrivateScope, Public, Static, HideBySig
    RegisterAssembly(ISetupExtensionsBuilder, String): PrivateScope, Public, Static, HideBySig
    RegisterTarget(ISetupExtensionsBuilder, String): PrivateScope, Public, Static, HideBySig
    RegisterTarget(ISetupExtensionsBuilder, String, Type): PrivateScope, Public, Static, HideBySig
    RegisterLayoutRenderer(ISetupExtensionsBuilder, String): PrivateScope, Public, Static, HideBySig
    RegisterLayoutRenderer(ISetupExtensionsBuilder, String, Type): PrivateScope, Public, Static, HideBySig
    RegisterLayoutRenderer(ISetupExtensionsBuilder, String, Func`2): PrivateScope, Public, Static, HideBySig
    RegisterLayoutRenderer(ISetupExtensionsBuilder, String, Func`3): PrivateScope, Public, Static, HideBySig
    RegisterConditionMethod(ISetupExtensionsBuilder, String, MethodInfo): PrivateScope, Public, Static, HideBySig
    RegisterConditionMethod(ISetupExtensionsBuilder, String, Func`2): PrivateScope, Public, Static, HideBySig
    RegisterConditionMethod(ISetupExtensionsBuilder, String, Func`1): PrivateScope, Public, Static, HideBySig
Class NLog.SetupInternalLoggerBuilderExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    SetMinimumLogLevel(ISetupInternalLoggerBuilder, LogLevel): PrivateScope, Public, Static, HideBySig
    LogToFile(ISetupInternalLoggerBuilder, String): PrivateScope, Public, Static, HideBySig
    LogToConsole(ISetupInternalLoggerBuilder, Boolean): PrivateScope, Public, Static, HideBySig
    LogToTrace(ISetupInternalLoggerBuilder, Boolean): PrivateScope, Public, Static, HideBySig
    LogToWriter(ISetupInternalLoggerBuilder, TextWriter): PrivateScope, Public, Static, HideBySig
    AddLogSubscription(ISetupInternalLoggerBuilder, EventHandler`1): PrivateScope, Public, Static, HideBySig
    RemoveLogSubscription(ISetupInternalLoggerBuilder, EventHandler`1): PrivateScope, Public, Static, HideBySig
Class NLog.SetupSerializationBuilderExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    RegisterJsonConverter(ISetupSerializationBuilder, IJsonConverter): PrivateScope, Public, Static, HideBySig
    RegisterValueFormatter(ISetupSerializationBuilder, IValueFormatter): PrivateScope, Public, Static, HideBySig
    RegisterObjectTransformation(ISetupSerializationBuilder, Func`2): PrivateScope, Public, Static, HideBySig
    RegisterObjectTransformation(ISetupSerializationBuilder, Type, Func`2): PrivateScope, Public, Static, HideBySig
Class NLog.Time.AccurateLocalTimeSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Time.TimeSource
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTime Time 'get ' : 
  Methods:
    get_Time(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FromSystemTime(DateTime): PrivateScope, Public, Virtual, HideBySig
Class NLog.Time.AccurateUtcTimeSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Time.TimeSource
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTime Time 'get ' : 
  Methods:
    get_Time(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FromSystemTime(DateTime): PrivateScope, Public, Virtual, HideBySig
Class NLog.Time.CachedTimeSource: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Time.TimeSource
  Properties:
    System.DateTime Time 'get ' : 
  Methods:
    get_Time(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NLog.Time.FastLocalTimeSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Time.CachedTimeSource
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FromSystemTime(DateTime): PrivateScope, Public, Virtual, HideBySig
Class NLog.Time.FastUtcTimeSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Time.CachedTimeSource
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FromSystemTime(DateTime): PrivateScope, Public, Virtual, HideBySig
Class NLog.Time.TimeSource: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.DateTime Time 'get ' : 
    NLog.Time.TimeSource Current 'get set' : 
  Methods:
    get_Time(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Current(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Current(TimeSource): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    FromSystemTime(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.Time.TimeSourceAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Config.NameBaseAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct NLog.Targets.ArchiveNumberingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.ArchiveNumberingMode Sequence = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.ArchiveNumberingMode Rolling = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.ArchiveNumberingMode Date = 2 : Public, Static, Literal, HasDefault
    NLog.Targets.ArchiveNumberingMode DateAndSequence = 3 : Public, Static, Literal, HasDefault
Class NLog.Targets.AsyncTaskTarget: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Targets.TargetWithContext
  Properties:
    Int32 TaskDelayMilliseconds 'get set' : 
    Int32 TaskTimeoutSeconds 'get set' : 
    Int32 RetryCount 'get set' : 
    Int32 RetryDelayMilliseconds 'get set' : 
    Boolean ForceLockingQueue 'get set' : 
    NLog.Targets.Wrappers.AsyncTargetWrapperOverflowAction OverflowAction 'get set' : 
    Int32 QueueLimit 'get set' : 
    Int32 BatchSize 'get set' : 
  Methods:
    get_TaskDelayMilliseconds(): PrivateScope, Public, HideBySig, SpecialName
    set_TaskDelayMilliseconds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TaskTimeoutSeconds(): PrivateScope, Public, HideBySig, SpecialName
    set_TaskTimeoutSeconds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RetryCount(): PrivateScope, Public, HideBySig, SpecialName
    set_RetryCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RetryDelayMilliseconds(): PrivateScope, Public, HideBySig, SpecialName
    set_RetryDelayMilliseconds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ForceLockingQueue(): PrivateScope, Public, HideBySig, SpecialName
    set_ForceLockingQueue(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OverflowAction(): PrivateScope, Public, HideBySig, SpecialName
    set_OverflowAction(AsyncTargetWrapperOverflowAction): PrivateScope, Public, HideBySig, SpecialName
    get_QueueLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_QueueLimit(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BatchSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BatchSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    WriteAsyncTaskWithRetry(Task, IList`1, CancellationToken, Int32): PrivateScope, Assembly, HideBySig
Class NLog.Targets.ChainsawTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.NLogViewerTarget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Targets.ColoredConsoleAnsiPrinter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Targets.IColoredConsolePrinter
  Properties:
    System.Collections.Generic.IList`1[NLog.Targets.ConsoleRowHighlightingRule] DefaultConsoleRowHighlightingRules 'get ' : 
  Methods:
    AcquireTextWriter(TextWriter, StringBuilder): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReleaseTextWriter(TextWriter, TextWriter, Nullable`1, Nullable`1, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ChangeForegroundColor(TextWriter, Nullable`1, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ChangeBackgroundColor(TextWriter, Nullable`1, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetDefaultColors(TextWriter, Nullable`1, Nullable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WriteSubString(TextWriter, String, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WriteChar(TextWriter, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WriteLine(TextWriter, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DefaultConsoleRowHighlightingRules(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Targets.ColoredConsoleSystemPrinter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Targets.IColoredConsolePrinter
  Properties:
    System.Collections.Generic.IList`1[NLog.Targets.ConsoleRowHighlightingRule] DefaultConsoleRowHighlightingRules 'get ' : 
  Methods:
    AcquireTextWriter(TextWriter, StringBuilder): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReleaseTextWriter(TextWriter, TextWriter, Nullable`1, Nullable`1, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ChangeForegroundColor(TextWriter, Nullable`1, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ChangeBackgroundColor(TextWriter, Nullable`1, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetDefaultColors(TextWriter, Nullable`1, Nullable`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WriteSubString(TextWriter, String, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WriteChar(TextWriter, Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WriteLine(TextWriter, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DefaultConsoleRowHighlightingRules(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Targets.ColoredConsoleTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Targets.TargetWithLayoutHeaderAndFooter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ErrorStream 'get set' : 
    Boolean UseDefaultRowHighlightingRules 'get set' : 
    System.Text.Encoding Encoding 'get set' : 
    Boolean DetectConsoleAvailable 'get set' : 
    Boolean DetectOutputRedirected 'get set' : 
    Boolean AutoFlush 'get set' : 
    Boolean EnableAnsiOutput 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.ConsoleRowHighlightingRule] RowHighlightingRules 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.ConsoleWordHighlightingRule] WordHighlightingRules 'get set' : 
  Methods:
    get_ErrorStream(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorStream(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseDefaultRowHighlightingRules(): PrivateScope, Public, HideBySig, SpecialName
    set_UseDefaultRowHighlightingRules(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Public, HideBySig, SpecialName
    get_DetectConsoleAvailable(): PrivateScope, Public, HideBySig, SpecialName
    set_DetectConsoleAvailable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DetectOutputRedirected(): PrivateScope, Public, HideBySig, SpecialName
    set_DetectOutputRedirected(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoFlush(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoFlush(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EnableAnsiOutput(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableAnsiOutput(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RowHighlightingRules(): PrivateScope, Public, HideBySig, SpecialName
    get_WordHighlightingRules(): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.Targets.ConsoleOutputColor: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.ConsoleOutputColor Black = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor DarkBlue = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor DarkGreen = 2 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor DarkCyan = 3 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor DarkRed = 4 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor DarkMagenta = 5 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor DarkYellow = 6 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor Gray = 7 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor DarkGray = 8 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor Blue = 9 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor Green = 10 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor Cyan = 11 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor Red = 12 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor Magenta = 13 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor Yellow = 14 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor White = 15 : Public, Static, Literal, HasDefault
    NLog.Targets.ConsoleOutputColor NoChange = 16 : Public, Static, Literal, HasDefault
Class NLog.Targets.ConsoleRowHighlightingRule: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Conditions.ConditionExpression, NLog.Targets.ConsoleOutputColor, NLog.Targets.ConsoleOutputColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Targets.ConsoleRowHighlightingRule Default 'get set' : 
    NLog.Conditions.ConditionExpression Condition 'get set' : 
    NLog.Targets.ConsoleOutputColor ForegroundColor 'get set' : 
    NLog.Targets.ConsoleOutputColor BackgroundColor 'get set' : 
  Methods:
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    set_Condition(ConditionExpression): PrivateScope, Public, HideBySig, SpecialName
    get_ForegroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ForegroundColor(ConsoleOutputColor): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundColor(ConsoleOutputColor): PrivateScope, Public, HideBySig, SpecialName
    CheckCondition(LogEventInfo): PrivateScope, Public, HideBySig
Class NLog.Targets.ConsoleTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Targets.TargetWithLayoutHeaderAndFooter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Error 'get set' : 
    System.Text.Encoding Encoding 'get set' : 
    Boolean DetectConsoleAvailable 'get set' : 
    Boolean AutoFlush 'get set' : 
    Boolean WriteBuffer 'get set' : 
  Methods:
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
    set_Error(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Public, HideBySig, SpecialName
    get_DetectConsoleAvailable(): PrivateScope, Public, HideBySig, SpecialName
    set_DetectConsoleAvailable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AutoFlush(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoFlush(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WriteBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_WriteBuffer(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.ConsoleTargetHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsConsoleAvailable(String&(Out)): PrivateScope, Public, Static, HideBySig
    GetConsoleOutputEncoding(Encoding, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    SetConsoleOutputEncoding(Encoding, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    WriteLineThreadSafe(TextWriter, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WriteBufferThreadSafe(TextWriter, Char[], Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class NLog.Targets.ConsoleWordHighlightingRule: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.ConsoleOutputColor, NLog.Targets.ConsoleOutputColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Regex 'get set' : 
    NLog.Conditions.ConditionExpression Condition 'get set' : 
    Boolean CompileRegex 'get set' : 
    System.String Text 'get set' : 
    Boolean WholeWords 'get set' : 
    Boolean IgnoreCase 'get set' : 
    NLog.Targets.ConsoleOutputColor ForegroundColor 'get set' : 
    NLog.Targets.ConsoleOutputColor BackgroundColor 'get set' : 
    System.Text.RegularExpressions.Regex CompiledRegex 'get ' : 
  Methods:
    get_Regex(): PrivateScope, Public, HideBySig, SpecialName
    set_Regex(String): PrivateScope, Public, HideBySig, SpecialName
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    set_Condition(ConditionExpression): PrivateScope, Public, HideBySig, SpecialName
    get_CompileRegex(): PrivateScope, Public, HideBySig, SpecialName
    set_CompileRegex(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_WholeWords(): PrivateScope, Public, HideBySig, SpecialName
    set_WholeWords(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ForegroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ForegroundColor(ConsoleOutputColor): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundColor(ConsoleOutputColor): PrivateScope, Public, HideBySig, SpecialName
    get_CompiledRegex(): PrivateScope, Public, HideBySig, SpecialName
    Matches(LogEventInfo, String): PrivateScope, Assembly, HideBySig
Class NLog.Targets.DatabaseCommandInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Data.CommandType CommandType 'get set' : 
    NLog.Layouts.Layout ConnectionString 'get set' : 
    NLog.Layouts.Layout Text 'get set' : 
    Boolean IgnoreFailures 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.DatabaseParameterInfo] Parameters 'get set' : 
  Methods:
    get_CommandType(): PrivateScope, Public, HideBySig, SpecialName
    set_CommandType(CommandType): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionString(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionString(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreFailures(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreFailures(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.DatabaseObjectPropertyInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    NLog.Layouts.Layout Layout 'get set' : 
    System.Type PropertyType 'get set' : 
    System.String Format 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyType(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    SetPropertyValue(Object, Object): PrivateScope, Assembly, HideBySig
Class NLog.Targets.DatabaseParameterInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    NLog.Layouts.Layout Layout 'get set' : 
    System.String DbType 'get set' : 
    Int32 Size 'get set' : 
    Byte Precision 'get set' : 
    Byte Scale 'get set' : 
    System.Type ParameterType 'get set' : 
    System.String Format 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    Boolean AllowDbNull 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_DbType(): PrivateScope, Public, HideBySig, SpecialName
    set_DbType(String): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Precision(): PrivateScope, Public, HideBySig, SpecialName
    set_Precision(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterType(): PrivateScope, Public, HideBySig, SpecialName
    set_ParameterType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_AllowDbNull(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowDbNull(Boolean): PrivateScope, Public, HideBySig, SpecialName
    SetDbType(IDbDataParameter): PrivateScope, Assembly, HideBySig
Class NLog.Targets.DatabaseTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Target
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.IInstallable
  Properties:
    System.String DBProvider 'get set' : 
    System.String ConnectionStringName 'get set' : 
    NLog.Layouts.Layout ConnectionString 'get set' : 
    NLog.Layouts.Layout InstallConnectionString 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.DatabaseCommandInfo] InstallDdlCommands 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.DatabaseCommandInfo] UninstallDdlCommands 'get set' : 
    Boolean KeepConnection 'get set' : 
    System.Nullable`1[System.Boolean] UseTransactions 'get set' :  (Obsolete)
    NLog.Layouts.Layout DBHost 'get set' : 
    NLog.Layouts.Layout DBUserName 'get set' : 
    NLog.Layouts.Layout DBPassword 'get set' : 
    NLog.Layouts.Layout DBDatabase 'get set' : 
    NLog.Layouts.Layout CommandText 'get set' : 
    System.Data.CommandType CommandType 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.DatabaseParameterInfo] Parameters 'get ' : 
    System.Collections.Generic.IList`1[NLog.Targets.DatabaseObjectPropertyInfo] ConnectionProperties 'get ' : 
    System.Collections.Generic.IList`1[NLog.Targets.DatabaseObjectPropertyInfo] CommandProperties 'get ' : 
    System.Nullable`1[System.Data.IsolationLevel] IsolationLevel 'get set' : 
    System.Data.Common.DbProviderFactory ProviderFactory 'get set' : 
    System.Configuration.ConnectionStringSettingsCollection ConnectionStringsSettings 'get set' : 
    System.Type ConnectionType 'get set' : 
  Methods:
    get_DBProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_DBProvider(String): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionStringName(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionStringName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionString(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionString(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_InstallConnectionString(): PrivateScope, Public, HideBySig, SpecialName
    set_InstallConnectionString(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_InstallDdlCommands(): PrivateScope, Public, HideBySig, SpecialName
    get_UninstallDdlCommands(): PrivateScope, Public, HideBySig, SpecialName
    get_KeepConnection(): PrivateScope, Public, HideBySig, SpecialName
    set_KeepConnection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseTransactions(): PrivateScope, Public, HideBySig, SpecialName
    set_UseTransactions(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_DBHost(): PrivateScope, Public, HideBySig, SpecialName
    set_DBHost(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_DBUserName(): PrivateScope, Public, HideBySig, SpecialName
    set_DBUserName(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_DBPassword(): PrivateScope, Public, HideBySig, SpecialName
    set_DBPassword(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_DBDatabase(): PrivateScope, Public, HideBySig, SpecialName
    set_DBDatabase(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_CommandText(): PrivateScope, Public, HideBySig, SpecialName
    set_CommandText(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_CommandType(): PrivateScope, Public, HideBySig, SpecialName
    set_CommandType(CommandType): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionProperties(): PrivateScope, Public, HideBySig, SpecialName
    get_CommandProperties(): PrivateScope, Public, HideBySig, SpecialName
    get_IsolationLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_IsolationLevel(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderFactory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ProviderFactory(DbProviderFactory): PrivateScope, Assembly, HideBySig, SpecialName
    get_ConnectionStringsSettings(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ConnectionStringsSettings(ConnectionStringSettingsCollection): PrivateScope, Assembly, HideBySig, SpecialName
    get_ConnectionType(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ConnectionType(Type): PrivateScope, Assembly, HideBySig, SpecialName
    Install(InstallationContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Uninstall(InstallationContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsInstalled(InstallationContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenConnection(String, LogEventInfo): PrivateScope, Assembly, HideBySig
    CreateDbCommand(LogEventInfo, IDbConnection): PrivateScope, Assembly, HideBySig
Class NLog.Targets.DateAndSequenceArchive: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.DateTime, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FileName 'get set' : 
    System.DateTime Date 'get set' : 
    Int32 Sequence 'get set' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_Date(): PrivateScope, Public, HideBySig, SpecialName
    get_Sequence(): PrivateScope, Public, HideBySig, SpecialName
    HasSameFormattedDate(DateTime): PrivateScope, Public, HideBySig
Class NLog.Targets.DebuggerTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Targets.TargetWithLayoutHeaderAndFooter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Targets.DebugTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Targets.TargetWithLayout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Counter 'get set' : 
    System.String LastMessage 'get set' : 
  Methods:
    get_Counter(): PrivateScope, Public, HideBySig, SpecialName
    get_LastMessage(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.DefaultJsonSerializer: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.IJsonConverter
    NLog.Targets.IJsonSerializer
  Properties:
    NLog.Targets.DefaultJsonSerializer Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    SerializeObject(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SerializeObject(Object, JsonSerializeOptions): PrivateScope, Public, HideBySig
    SerializeObject(Object, StringBuilder): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SerializeObject(Object, StringBuilder, JsonSerializeOptions): PrivateScope, Public, HideBySig
    AppendStringEscape(StringBuilder, String, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
    RequiresJsonEscape(Char, JsonSerializeOptions): PrivateScope, Assembly, Static, HideBySig
    RequiresJsonEscape(Char, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
Class NLog.Targets.EventLogTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.TargetWithLayout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Internal.Fakeables.IAppDomain): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(IEventLogWrapper, NLog.Internal.Fakeables.IAppDomain): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.IInstallable
  Fields:
    Int32 EventLogMaxMessageLength = 16384 : Assembly, Static, Literal, HasDefault
  Properties:
    System.String MachineName 'get set' : 
    NLog.Layouts.Layout EventId 'get set' : 
    NLog.Layouts.Layout Category 'get set' : 
    NLog.Layouts.Layout EntryType 'get set' : 
    NLog.Layouts.Layout Source 'get set' : 
    System.String Log 'get set' : 
    Int32 MaxMessageLength 'get set' : 
    System.Nullable`1[System.Int64] MaxKilobytes 'get set' : 
    NLog.Targets.EventLogTargetOverflowAction OnOverflow 'get set' : 
  Methods:
    get_MachineName(): PrivateScope, Public, HideBySig, SpecialName
    set_MachineName(String): PrivateScope, Public, HideBySig, SpecialName
    get_EventId(): PrivateScope, Public, HideBySig, SpecialName
    set_EventId(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_EntryType(): PrivateScope, Public, HideBySig, SpecialName
    set_EntryType(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Source(): PrivateScope, Public, HideBySig, SpecialName
    set_Source(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Log(): PrivateScope, Public, HideBySig, SpecialName
    set_Log(String): PrivateScope, Public, HideBySig, SpecialName
    get_MaxMessageLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxMessageLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxKilobytes(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxKilobytes(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_OnOverflow(): PrivateScope, Public, HideBySig, SpecialName
    set_OnOverflow(EventLogTargetOverflowAction): PrivateScope, Public, HideBySig, SpecialName
    Install(InstallationContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Uninstall(InstallationContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsInstalled(InstallationContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFixedSource(): PrivateScope, Assembly, HideBySig
Struct NLog.Targets.EventLogTargetOverflowAction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.EventLogTargetOverflowAction Truncate = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.EventLogTargetOverflowAction Split = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.EventLogTargetOverflowAction Discard = 2 : Public, Static, Literal, HasDefault
Struct NLog.Targets.FileArchivePeriod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.FileArchivePeriod None = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Year = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Month = 2 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Day = 3 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Hour = 4 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Minute = 5 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Sunday = 6 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Monday = 7 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Tuesday = 8 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Wednesday = 9 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Thursday = 10 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Friday = 11 : Public, Static, Literal, HasDefault
    NLog.Targets.FileArchivePeriod Saturday = 12 : Public, Static, Literal, HasDefault
Struct NLog.Targets.FilePathKind: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.FilePathKind Unknown = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.FilePathKind Relative = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.FilePathKind Absolute = 2 : Public, Static, Literal, HasDefault
Class NLog.Targets.FileTarget: AutoLayout, AnsiClass, Class, Public
  :NLog.Targets.TargetWithLayoutHeaderAndFooter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Internal.FileAppenders.IFileAppenderCache): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.FileAppenders.ICreateFileParameters
  Properties:
    NLog.Layouts.Layout FileName 'get set' : 
    Boolean CleanupFileName 'get set' : 
    NLog.Targets.FilePathKind FileNameKind 'get set' : 
    Boolean CreateDirs 'get set' : 
    Boolean DeleteOldFileOnStartup 'get set' : 
    Boolean ReplaceFileContentsOnEachWrite 'get set' : 
    Boolean KeepFileOpen 'get set' : 
    Int32 maxLogFilenames 'get set' :  (Obsolete)
    Boolean EnableFileDelete 'get set' : 
    NLog.Targets.Win32FileAttributes FileAttributes 'get set' : 
    NLog.Targets.LineEndingMode LineEnding 'get set' : 
    Boolean AutoFlush 'get set' : 
    Int32 OpenFileCacheSize 'get set' : 
    Int32 OpenFileCacheTimeout 'get set' : 
    Int32 OpenFileFlushTimeout 'get set' : 
    Int32 BufferSize 'get set' : 
    System.Text.Encoding Encoding 'get set' : 
    Boolean DiscardAll 'get set' : 
    Boolean ConcurrentWrites 'get set' : 
    Boolean NetworkWrites 'get set' : 
    Boolean WriteBom 'get set' : 
    Int32 ConcurrentWriteAttempts 'get set' : 
    Int32 ConcurrentWriteAttemptDelay 'get set' : 
    Boolean ArchiveOldFileOnStartup 'get set' : 
    Int64 ArchiveOldFileOnStartupAboveSize 'get set' : 
    System.String ArchiveDateFormat 'get set' : 
    Int64 ArchiveAboveSize 'get set' : 
    NLog.Targets.FileArchivePeriod ArchiveEvery 'get set' : 
    NLog.Targets.FilePathKind ArchiveFileKind 'get set' : 
    NLog.Layouts.Layout ArchiveFileName 'get set' : 
    Int32 MaxArchiveFiles 'get set' : 
    Int32 MaxArchiveDays 'get set' : 
    NLog.Targets.ArchiveNumberingMode ArchiveNumbering 'get set' : 
    NLog.Targets.IFileCompressor FileCompressor 'get set' : 
    Boolean EnableArchiveFileCompression 'get set' : 
    Boolean ForceManaged 'get set' : 
    Boolean ForceMutexConcurrentWrites 'get set' : 
    Boolean WriteFooterOnArchivingOnly 'get set' : 
  Methods:
    ShouldArchiveOldFileOnStartup(String): PrivateScope, Assembly, HideBySig
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_CleanupFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_CleanupFileName(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FileNameKind(): PrivateScope, Public, HideBySig, SpecialName
    set_FileNameKind(FilePathKind): PrivateScope, Public, HideBySig, SpecialName
    get_CreateDirs(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CreateDirs(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DeleteOldFileOnStartup(): PrivateScope, Public, HideBySig, SpecialName
    set_DeleteOldFileOnStartup(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReplaceFileContentsOnEachWrite(): PrivateScope, Public, HideBySig, SpecialName
    set_ReplaceFileContentsOnEachWrite(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_KeepFileOpen(): PrivateScope, Public, HideBySig, SpecialName
    set_KeepFileOpen(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_maxLogFilenames(): PrivateScope, Public, HideBySig, SpecialName
    set_maxLogFilenames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EnableFileDelete(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_EnableFileDelete(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FileAttributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FileAttributes(Win32FileAttributes): PrivateScope, Public, HideBySig, SpecialName
    get_LineEnding(): PrivateScope, Public, HideBySig, SpecialName
    set_LineEnding(LineEndingMode): PrivateScope, Public, HideBySig, SpecialName
    get_AutoFlush(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoFlush(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OpenFileCacheSize(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenFileCacheSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OpenFileCacheTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenFileCacheTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OpenFileFlushTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenFileFlushTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BufferSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BufferSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Public, HideBySig, SpecialName
    get_DiscardAll(): PrivateScope, Public, HideBySig, SpecialName
    set_DiscardAll(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ConcurrentWrites(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ConcurrentWrites(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NetworkWrites(): PrivateScope, Public, HideBySig, SpecialName
    set_NetworkWrites(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WriteBom(): PrivateScope, Public, HideBySig, SpecialName
    set_WriteBom(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ConcurrentWriteAttempts(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ConcurrentWriteAttempts(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ConcurrentWriteAttemptDelay(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ConcurrentWriteAttemptDelay(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ArchiveOldFileOnStartup(): PrivateScope, Public, HideBySig, SpecialName
    set_ArchiveOldFileOnStartup(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ArchiveOldFileOnStartupAboveSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ArchiveOldFileOnStartupAboveSize(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_ArchiveDateFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_ArchiveDateFormat(String): PrivateScope, Public, HideBySig, SpecialName
    get_ArchiveAboveSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ArchiveAboveSize(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_ArchiveEvery(): PrivateScope, Public, HideBySig, SpecialName
    set_ArchiveEvery(FileArchivePeriod): PrivateScope, Public, HideBySig, SpecialName
    get_ArchiveFileKind(): PrivateScope, Public, HideBySig, SpecialName
    set_ArchiveFileKind(FilePathKind): PrivateScope, Public, HideBySig, SpecialName
    get_ArchiveFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_ArchiveFileName(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_MaxArchiveFiles(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxArchiveFiles(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxArchiveDays(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxArchiveDays(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ArchiveNumbering(): PrivateScope, Public, HideBySig, SpecialName
    set_ArchiveNumbering(ArchiveNumberingMode): PrivateScope, Public, HideBySig, SpecialName
    get_FileCompressor(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_FileCompressor(IFileCompressor): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EnableArchiveFileCompression(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableArchiveFileCompression(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ForceManaged(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ForceManaged(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ForceMutexConcurrentWrites(): PrivateScope, Public, HideBySig, SpecialName
    set_ForceMutexConcurrentWrites(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WriteFooterOnArchivingOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_WriteFooterOnArchivingOnly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CleanupInitializedFiles(): PrivateScope, Public, HideBySig
    CleanupInitializedFiles(DateTime): PrivateScope, Public, HideBySig
    GetFullFileName(LogEventInfo): PrivateScope, Assembly, HideBySig
    CalculateNextWeekday(DateTime, DayOfWeek): PrivateScope, Public, Static, HideBySig
Interface NLog.Targets.IColoredConsolePrinter: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.Collections.Generic.IList`1[NLog.Targets.ConsoleRowHighlightingRule] DefaultConsoleRowHighlightingRules 'get ' : 
  Methods:
    AcquireTextWriter(TextWriter, StringBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReleaseTextWriter(TextWriter, TextWriter, Nullable`1, Nullable`1, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ChangeForegroundColor(TextWriter, Nullable`1, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ChangeBackgroundColor(TextWriter, Nullable`1, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResetDefaultColors(TextWriter, Nullable`1, Nullable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteSubString(TextWriter, String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteChar(TextWriter, Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteLine(TextWriter, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_DefaultConsoleRowHighlightingRules(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Targets.IFileArchiveMode: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Boolean IsArchiveCleanupEnabled 'get ' : 
  Methods:
    get_IsArchiveCleanupEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    AttemptCleanupOnInitializeFile(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateFileNameMask(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetExistingArchiveFiles(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateArchiveFileName(String, DateTime, List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckArchiveCleanup(String, List`1, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Targets.IFileCompressor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CompressFile(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Targets.IJsonSerializer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract (Obsolete)
  Methods:
    SerializeObject(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.Targets.JsonConverterLegacy: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.Targets.IJsonSerializer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.IJsonConverter
    NLog.Targets.IJsonSerializer
  Methods:
    SerializeObject(Object, StringBuilder): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Targets.JsonSerializeOptions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean QuoteKeys 'get set' : 
    System.IFormatProvider FormatProvider 'get set' : 
    System.String Format 'get set' : 
    Boolean EscapeUnicode 'get set' : 
    Boolean EscapeForwardSlash 'get set' : 
    Boolean EnumAsInteger 'get set' : 
    Boolean SanitizeDictionaryKeys 'get set' : 
    Int32 MaxRecursionLimit 'get set' : 
  Methods:
    get_QuoteKeys(): PrivateScope, Public, HideBySig, SpecialName
    set_QuoteKeys(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FormatProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_FormatProvider(IFormatProvider): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeUnicode(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeUnicode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeForwardSlash(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeForwardSlash(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EnumAsInteger(): PrivateScope, Public, HideBySig, SpecialName
    set_EnumAsInteger(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SanitizeDictionaryKeys(): PrivateScope, Public, HideBySig, SpecialName
    set_SanitizeDictionaryKeys(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MaxRecursionLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxRecursionLimit(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.LineEndingMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.IEquatable`1[NLog.Targets.LineEndingMode]
  Fields:
    NLog.Targets.LineEndingMode Default : Public, Static, InitOnly
    NLog.Targets.LineEndingMode CRLF : Public, Static, InitOnly
    NLog.Targets.LineEndingMode CR : Public, Static, InitOnly
    NLog.Targets.LineEndingMode LF : Public, Static, InitOnly
    NLog.Targets.LineEndingMode Null : Public, Static, InitOnly
    NLog.Targets.LineEndingMode None : Public, Static, InitOnly
  Properties:
    System.String Name 'get ' : 
    System.String NewLineCharacters 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_NewLineCharacters(): PrivateScope, Public, HideBySig, SpecialName
    FromString(String): PrivateScope, Public, Static, HideBySig
    op_Equality(LineEndingMode, LineEndingMode): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(LineEndingMode, LineEndingMode): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(LineEndingMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Targets.LogReceiverWebServiceTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Target
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String EndpointAddress 'get set' : 
    System.String EndpointConfigurationName 'get set' : 
    Boolean UseBinaryEncoding 'get set' : 
    Boolean UseOneWayContract 'get set' : 
    NLog.Layouts.Layout ClientId 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.MethodCallParameter] Parameters 'get set' : 
    Boolean IncludeEventProperties 'get set' : 
  Methods:
    get_EndpointAddress(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_EndpointAddress(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EndpointConfigurationName(): PrivateScope, Public, HideBySig, SpecialName
    set_EndpointConfigurationName(String): PrivateScope, Public, HideBySig, SpecialName
    get_UseBinaryEncoding(): PrivateScope, Public, HideBySig, SpecialName
    set_UseBinaryEncoding(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseOneWayContract(): PrivateScope, Public, HideBySig, SpecialName
    set_UseOneWayContract(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ClientId(): PrivateScope, Public, HideBySig, SpecialName
    set_ClientId(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeEventProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeEventProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    TranslateEvent(LogEventInfo, NLogEvents, Dictionary`2): PrivateScope, Assembly, HideBySig
Class NLog.Targets.MailTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.TargetWithLayoutHeaderAndFooter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Net.Configuration.SmtpSection SmtpSection 'get set' : 
    NLog.Layouts.Layout From 'get set' : 
    NLog.Layouts.Layout To 'get set' : 
    NLog.Layouts.Layout CC 'get set' : 
    NLog.Layouts.Layout Bcc 'get set' : 
    Boolean AddNewLines 'get set' : 
    NLog.Layouts.Layout Subject 'get set' : 
    NLog.Layouts.Layout Body 'get set' : 
    System.Text.Encoding Encoding 'get set' : 
    Boolean Html 'get set' : 
    NLog.Layouts.Layout SmtpServer 'get set' : 
    NLog.Targets.SmtpAuthenticationMode SmtpAuthentication 'get set' : 
    NLog.Layouts.Layout SmtpUserName 'get set' : 
    NLog.Layouts.Layout SmtpPassword 'get set' : 
    Boolean EnableSsl 'get set' : 
    Int32 SmtpPort 'get set' : 
    Boolean UseSystemNetMailSettings 'get set' : 
    System.Net.Mail.SmtpDeliveryMethod DeliveryMethod 'get set' : 
    System.String PickupDirectoryLocation 'get set' : 
    NLog.Layouts.Layout Priority 'get set' : 
    Boolean ReplaceNewlineWithBrTagInHtml 'get set' : 
    Int32 Timeout 'get set' : 
  Methods:
    get_SmtpSection(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SmtpSection(SmtpSection): PrivateScope, Assembly, HideBySig, SpecialName
    get_From(): PrivateScope, Public, HideBySig, SpecialName
    set_From(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_To(): PrivateScope, Public, HideBySig, SpecialName
    set_To(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_CC(): PrivateScope, Public, HideBySig, SpecialName
    set_CC(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Bcc(): PrivateScope, Public, HideBySig, SpecialName
    set_Bcc(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_AddNewLines(): PrivateScope, Public, HideBySig, SpecialName
    set_AddNewLines(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Subject(): PrivateScope, Public, HideBySig, SpecialName
    set_Subject(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Public, HideBySig, SpecialName
    get_Html(): PrivateScope, Public, HideBySig, SpecialName
    set_Html(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SmtpServer(): PrivateScope, Public, HideBySig, SpecialName
    set_SmtpServer(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_SmtpAuthentication(): PrivateScope, Public, HideBySig, SpecialName
    set_SmtpAuthentication(SmtpAuthenticationMode): PrivateScope, Public, HideBySig, SpecialName
    get_SmtpUserName(): PrivateScope, Public, HideBySig, SpecialName
    set_SmtpUserName(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_SmtpPassword(): PrivateScope, Public, HideBySig, SpecialName
    set_SmtpPassword(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_EnableSsl(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableSsl(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SmtpPort(): PrivateScope, Public, HideBySig, SpecialName
    set_SmtpPort(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UseSystemNetMailSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_UseSystemNetMailSettings(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DeliveryMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_DeliveryMethod(SmtpDeliveryMethod): PrivateScope, Public, HideBySig, SpecialName
    get_PickupDirectoryLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_PickupDirectoryLocation(String): PrivateScope, Public, HideBySig, SpecialName
    get_Priority(): PrivateScope, Public, HideBySig, SpecialName
    set_Priority(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_ReplaceNewlineWithBrTagInHtml(): PrivateScope, Public, HideBySig, SpecialName
    set_ReplaceNewlineWithBrTagInHtml(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Timeout(): PrivateScope, Public, HideBySig, SpecialName
    set_Timeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    CreateSmtpClient(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ConfigureMailClient(LogEventInfo, ISmtpClient): PrivateScope, Assembly, HideBySig
    ConvertDirectoryLocation(String): PrivateScope, Assembly, Static, HideBySig
Class NLog.Targets.MemoryTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Targets.TargetWithLayout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[System.String] Logs 'get ' : 
    Int32 MaxLogsCount 'get set' : 
  Methods:
    get_Logs(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLogsCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLogsCount(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.MethodCallParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Layouts.Layout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.Type Type 'get set' :  (Obsolete)
    System.Type ParameterType 'get set' : 
    NLog.Layouts.Layout Layout 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterType(): PrivateScope, Public, HideBySig, SpecialName
    set_ParameterType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.MethodCallTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Targets.MethodCallTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Action`2[NLog.LogEventInfo,System.Object[]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ClassName 'get set' : 
    System.String MethodName 'get set' : 
  Methods:
    get_ClassName(): PrivateScope, Public, HideBySig, SpecialName
    set_ClassName(String): PrivateScope, Public, HideBySig, SpecialName
    get_MethodName(): PrivateScope, Public, HideBySig, SpecialName
    set_MethodName(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.MethodCallTargetBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Targets.Target
  Properties:
    System.Collections.Generic.IList`1[NLog.Targets.MethodCallParameter] Parameters 'get set' : 
  Methods:
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.NetworkTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.TargetWithLayout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Layouts.Layout Address 'get set' : 
    Boolean KeepConnection 'get set' : 
    Boolean NewLine 'get set' : 
    NLog.Targets.LineEndingMode LineEnding 'get set' : 
    Int32 MaxMessageSize 'get set' : 
    Int32 ConnectionCacheSize 'get set' : 
    Int32 MaxConnections 'get set' : 
    NLog.Targets.NetworkTargetConnectionsOverflowAction OnConnectionOverflow 'get set' : 
    Int32 MaxQueueSize 'get set' : 
    NLog.Targets.NetworkTargetOverflowAction OnOverflow 'get set' : 
    System.Text.Encoding Encoding 'get set' : 
    System.Security.Authentication.SslProtocols SslProtocols 'get set' : 
    Int32 KeepAliveTimeSeconds 'get set' : 
    NLog.Internal.NetworkSenders.INetworkSenderFactory SenderFactory 'get set' : 
  Methods:
    get_Address(): PrivateScope, Public, HideBySig, SpecialName
    set_Address(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_KeepConnection(): PrivateScope, Public, HideBySig, SpecialName
    set_KeepConnection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NewLine(): PrivateScope, Public, HideBySig, SpecialName
    set_NewLine(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LineEnding(): PrivateScope, Public, HideBySig, SpecialName
    set_LineEnding(LineEndingMode): PrivateScope, Public, HideBySig, SpecialName
    get_MaxMessageSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxMessageSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionCacheSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionCacheSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxConnections(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxConnections(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OnConnectionOverflow(): PrivateScope, Public, HideBySig, SpecialName
    set_OnConnectionOverflow(NetworkTargetConnectionsOverflowAction): PrivateScope, Public, HideBySig, SpecialName
    get_MaxQueueSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxQueueSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OnOverflow(): PrivateScope, Public, HideBySig, SpecialName
    set_OnOverflow(NetworkTargetOverflowAction): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Public, HideBySig, SpecialName
    get_SslProtocols(): PrivateScope, Public, HideBySig, SpecialName
    set_SslProtocols(SslProtocols): PrivateScope, Public, HideBySig, SpecialName
    get_KeepAliveTimeSeconds(): PrivateScope, Public, HideBySig, SpecialName
    set_KeepAliveTimeSeconds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SenderFactory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SenderFactory(INetworkSenderFactory): PrivateScope, Assembly, HideBySig, SpecialName
Struct NLog.Targets.NetworkTargetConnectionsOverflowAction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.NetworkTargetConnectionsOverflowAction AllowNewConnnection = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.NetworkTargetConnectionsOverflowAction DiscardMessage = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.NetworkTargetConnectionsOverflowAction Block = 2 : Public, Static, Literal, HasDefault
Struct NLog.Targets.NetworkTargetOverflowAction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.NetworkTargetOverflowAction Error = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.NetworkTargetOverflowAction Split = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.NetworkTargetOverflowAction Discard = 2 : Public, Static, Literal, HasDefault
Class NLog.Targets.NLogViewerParameterInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    NLog.Layouts.Layout Layout 'get set' : 
    Boolean IncludeEmptyValue 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeEmptyValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeEmptyValue(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.NLogViewerTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.NetworkTarget
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.IIncludeContext
  Properties:
    Boolean IncludeNLogData 'get set' : 
    System.String AppInfo 'get set' : 
    Boolean IncludeCallSite 'get set' : 
    Boolean IncludeSourceInfo 'get set' : 
    Boolean IncludeMdc 'get set' : 
    Boolean IncludeNdc 'get set' : 
    Boolean IncludeMdlc 'get set' : 
    Boolean IncludeNdlc 'get set' : 
    System.String NdlcItemSeparator 'get set' : 
    Boolean IncludeAllProperties 'get set' : 
    System.String NdcItemSeparator 'get set' : 
    NLog.Layouts.Layout LoggerName 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.NLogViewerParameterInfo] Parameters 'get set' : 
    NLog.LayoutRenderers.Log4JXmlEventLayoutRenderer Renderer 'get ' : 
    NLog.Layouts.Layout Layout 'get set' : 
  Methods:
    get_IncludeNLogData(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeNLogData(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AppInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_AppInfo(String): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeCallSite(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeCallSite(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeSourceInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeSourceInfo(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeMdc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeMdc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeNdc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeNdc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeMdlc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeMdlc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeNdlc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeNdlc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NdlcItemSeparator(): PrivateScope, Public, HideBySig, SpecialName
    set_NdlcItemSeparator(String): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeAllProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeAllProperties(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NdcItemSeparator(): PrivateScope, Public, HideBySig, SpecialName
    set_NdcItemSeparator(String): PrivateScope, Public, HideBySig, SpecialName
    get_LoggerName(): PrivateScope, Public, HideBySig, SpecialName
    set_LoggerName(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_Renderer(): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NLog.Targets.NullTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Targets.TargetWithLayout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean FormatMessage 'get set' : 
  Methods:
    get_FormatMessage(): PrivateScope, Public, HideBySig, SpecialName
    set_FormatMessage(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.OutputDebugStringTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Targets.TargetWithLayout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Targets.PerformanceCounterTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Target
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.IInstallable
  Properties:
    Boolean AutoCreate 'get set' : 
    System.String CategoryName 'get set' : 
    System.String CounterName 'get set' : 
    System.String InstanceName 'get set' : 
    System.String CounterHelp 'get set' : 
    System.Diagnostics.PerformanceCounterType CounterType 'get set' : 
    NLog.Layouts.Layout IncrementValue 'get set' : 
  Methods:
    get_AutoCreate(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoCreate(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CategoryName(): PrivateScope, Public, HideBySig, SpecialName
    set_CategoryName(String): PrivateScope, Public, HideBySig, SpecialName
    get_CounterName(): PrivateScope, Public, HideBySig, SpecialName
    set_CounterName(String): PrivateScope, Public, HideBySig, SpecialName
    get_InstanceName(): PrivateScope, Public, HideBySig, SpecialName
    set_InstanceName(String): PrivateScope, Public, HideBySig, SpecialName
    get_CounterHelp(): PrivateScope, Public, HideBySig, SpecialName
    set_CounterHelp(String): PrivateScope, Public, HideBySig, SpecialName
    get_CounterType(): PrivateScope, Public, HideBySig, SpecialName
    set_CounterType(PerformanceCounterType): PrivateScope, Public, HideBySig, SpecialName
    get_IncrementValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IncrementValue(Layout): PrivateScope, Public, HideBySig, SpecialName
    Install(InstallationContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Uninstall(InstallationContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsInstalled(InstallationContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Targets.SmtpAuthenticationMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.SmtpAuthenticationMode None = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.SmtpAuthenticationMode Basic = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.SmtpAuthenticationMode Ntlm = 2 : Public, Static, Literal, HasDefault
Class NLog.Targets.Target: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    NLog.Internal.ISupportsInitialize
    NLog.Common.IInternalLoggerContext
    System.IDisposable
  Fields:
    NLog.Internal.ReusableBuilderCreator ReusableLayoutBuilder : Assembly, InitOnly
  Properties:
    NLog.Config.StackTraceUsage StackTraceUsage 'get set' : 
    System.String Name 'get set' : 
    Boolean OptimizeBufferReuse 'get set' : 
  Methods:
    get_StackTraceUsage(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_OptimizeBufferReuse(): PrivateScope, Public, HideBySig, SpecialName
    set_OptimizeBufferReuse(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flush(AsyncContinuation): PrivateScope, Public, HideBySig
    PrecalculateVolatileLayouts(LogEventInfo): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    WriteAsyncLogEvent(AsyncLogEventInfo): PrivateScope, Public, HideBySig
    WriteAsyncLogEvents(AsyncLogEventInfo[]): PrivateScope, Public, HideBySig
    WriteAsyncLogEvents(IList`1): PrivateScope, Public, HideBySig
    Initialize(LoggingConfiguration): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Assembly, HideBySig
    Register(String): PrivateScope, Public, Static, HideBySig
    Register(String, Type): PrivateScope, Public, Static, HideBySig
    ExceptionMustBeRethrown(Exception): PrivateScope, Assembly, HideBySig
Class NLog.Targets.TargetAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Config.NameBaseAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsWrapper 'get set' : 
    Boolean IsCompound 'get set' : 
  Methods:
    get_IsWrapper(): PrivateScope, Public, HideBySig, SpecialName
    set_IsWrapper(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsCompound(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCompound(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.TargetPropertyWithContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    NLog.Layouts.Layout Layout 'get set' : 
    Boolean IncludeEmptyValue 'get set' : 
    System.Type PropertyType 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeEmptyValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeEmptyValue(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyType(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyType(Type): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.TargetWithContext: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Targets.TargetWithLayout
  Interfaces:
    NLog.IIncludeContext
  Properties:
    NLog.Layouts.Layout Layout 'get set' : 
    Boolean IncludeEventProperties 'get set' : 
    Boolean IncludeMdc 'get set' : 
    Boolean IncludeNdc 'get set' : 
    Boolean IncludeMdlc 'get set' : 
    Boolean IncludeNdlc 'get set' : 
    Boolean IncludeGdc 'get set' : 
    Boolean IncludeCallSite 'get set' : 
    Boolean IncludeCallSiteStackTrace 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.TargetPropertyWithContext] ContextProperties 'get ' : 
  Methods:
    get_Layout(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_IncludeEventProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeEventProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeMdc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeMdc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeNdc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeNdc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeMdlc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeMdlc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeNdlc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeNdlc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeGdc(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeGdc(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeCallSite(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeCallSite(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeCallSiteStackTrace(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeCallSiteStackTrace(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ContextProperties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Targets.TargetWithLayout: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Targets.Target
  Properties:
    NLog.Layouts.Layout Layout 'get set' : 
  Methods:
    get_Layout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Layout(Layout): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Targets.TargetWithLayoutHeaderAndFooter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Targets.TargetWithLayout
  Properties:
    NLog.Layouts.Layout Layout 'get set' : 
    NLog.Layouts.Layout Footer 'get set' : 
    NLog.Layouts.Layout Header 'get set' : 
  Methods:
    get_Layout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Footer(): PrivateScope, Public, HideBySig, SpecialName
    set_Footer(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Header(): PrivateScope, Public, HideBySig, SpecialName
    set_Header(Layout): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.TraceTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Targets.TargetWithLayout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean RawWrite 'get set' : 
    Boolean EnableTraceFail 'get set' : 
  Methods:
    get_RawWrite(): PrivateScope, Public, HideBySig, SpecialName
    set_RawWrite(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EnableTraceFail(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableTraceFail(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.Targets.WebServiceProtocol: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.WebServiceProtocol Soap11 = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.WebServiceProtocol Soap12 = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.WebServiceProtocol HttpPost = 2 : Public, Static, Literal, HasDefault
    NLog.Targets.WebServiceProtocol HttpGet = 3 : Public, Static, Literal, HasDefault
    NLog.Targets.WebServiceProtocol JsonPost = 4 : Public, Static, Literal, HasDefault
    NLog.Targets.WebServiceProtocol XmlPost = 5 : Public, Static, Literal, HasDefault
Struct NLog.Targets.WebServiceProxyType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.WebServiceProxyType DefaultWebProxy = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.WebServiceProxyType AutoProxy = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.WebServiceProxyType NoProxy = 2 : Public, Static, Literal, HasDefault
    NLog.Targets.WebServiceProxyType ProxyAddress = 3 : Public, Static, Literal, HasDefault
Class NLog.Targets.WebServiceTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Targets.MethodCallTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Uri Url 'get set' : 
    NLog.Layouts.Layout UserAgent 'get set' : 
    System.String MethodName 'get set' : 
    System.String Namespace 'get set' : 
    NLog.Targets.WebServiceProtocol Protocol 'get set' : 
    NLog.Targets.WebServiceProxyType ProxyType 'get set' : 
    System.String ProxyAddress 'get set' : 
    System.Nullable`1[System.Boolean] IncludeBOM 'get set' : 
    System.Text.Encoding Encoding 'get set' : 
    Boolean EscapeDataRfc3986 'get set' : 
    Boolean EscapeDataNLogLegacy 'get set' : 
    System.String XmlRoot 'get set' : 
    System.String XmlRootNamespace 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.MethodCallParameter] Headers 'get set' : 
    Boolean PreAuthenticate 'get set' : 
  Methods:
    get_Url(): PrivateScope, Public, HideBySig, SpecialName
    set_Url(Uri): PrivateScope, Public, HideBySig, SpecialName
    get_UserAgent(): PrivateScope, Public, HideBySig, SpecialName
    set_UserAgent(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_MethodName(): PrivateScope, Public, HideBySig, SpecialName
    set_MethodName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Namespace(): PrivateScope, Public, HideBySig, SpecialName
    set_Namespace(String): PrivateScope, Public, HideBySig, SpecialName
    get_Protocol(): PrivateScope, Public, HideBySig, SpecialName
    set_Protocol(WebServiceProtocol): PrivateScope, Public, HideBySig, SpecialName
    get_ProxyType(): PrivateScope, Public, HideBySig, SpecialName
    set_ProxyType(WebServiceProxyType): PrivateScope, Public, HideBySig, SpecialName
    get_ProxyAddress(): PrivateScope, Public, HideBySig, SpecialName
    set_ProxyAddress(String): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeBOM(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeBOM(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeDataRfc3986(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeDataRfc3986(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeDataNLogLegacy(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeDataNLogLegacy(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_XmlRoot(): PrivateScope, Public, HideBySig, SpecialName
    set_XmlRoot(String): PrivateScope, Public, HideBySig, SpecialName
    get_XmlRootNamespace(): PrivateScope, Public, HideBySig, SpecialName
    set_XmlRootNamespace(String): PrivateScope, Public, HideBySig, SpecialName
    get_Headers(): PrivateScope, Public, HideBySig, SpecialName
    get_PreAuthenticate(): PrivateScope, Public, HideBySig, SpecialName
    set_PreAuthenticate(Boolean): PrivateScope, Public, HideBySig, SpecialName
    DoInvoke(Object[], AsyncContinuation, HttpWebRequest, Func`3, Func`3): PrivateScope, Assembly, HideBySig
Struct NLog.Targets.Win32FileAttributes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.Win32FileAttributes ReadOnly = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes Hidden = 2 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes System = 4 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes Archive = 32 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes Device = 64 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes Normal = 128 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes Temporary = 256 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes SparseFile = 512 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes ReparsePoint = 1024 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes Compressed = 2048 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes NotContentIndexed = 8192 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes Encrypted = 16384 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes WriteThrough = -2147483648 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes NoBuffering = 536870912 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes DeleteOnClose = 67108864 : Public, Static, Literal, HasDefault
    NLog.Targets.Win32FileAttributes PosixSemantics = 16777216 : Public, Static, Literal, HasDefault
Class NLog.Targets.ZipArchiveFileCompressor: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Targets.IFileCompressor
  Methods:
    CompressFile(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Targets.Wrappers.AsyncRequestQueue: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Targets.Wrappers.AsyncRequestQueueBase
    Void .ctor(Int32, NLog.Targets.Wrappers.AsyncTargetWrapperOverflowAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 RequestCount 'get ' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    get_RequestCount(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Enqueue(AsyncLogEventInfo): PrivateScope, Public, Virtual, HideBySig
    DequeueBatch(Int32): PrivateScope, Public, Virtual, HideBySig
    DequeueBatch(Int32, IList`1): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Targets.Wrappers.AsyncRequestQueueBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    Boolean IsEmpty 'get ' : 
    Int32 RequestLimit 'get set' : 
    NLog.Targets.Wrappers.AsyncTargetWrapperOverflowAction OnOverflow 'get set' : 
  Events:
    System.EventHandler`1[NLog.Targets.Wrappers.LogEventDroppedEventArgs] LogEventDropped: 
    System.EventHandler`1[NLog.Targets.Wrappers.LogEventQueueGrowEventArgs] LogEventQueueGrow: 
  Methods:
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RequestLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_RequestLimit(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OnOverflow(): PrivateScope, Public, HideBySig, SpecialName
    set_OnOverflow(AsyncTargetWrapperOverflowAction): PrivateScope, Public, HideBySig, SpecialName
    add_LogEventDropped(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_LogEventDropped(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_LogEventQueueGrow(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_LogEventQueueGrow(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    Enqueue(AsyncLogEventInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DequeueBatch(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DequeueBatch(Int32, IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.Targets.Wrappers.AsyncTargetWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.WrapperTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target, Int32, NLog.Targets.Wrappers.AsyncTargetWrapperOverflowAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BatchSize 'get set' : 
    Int32 TimeToSleepBetweenBatches 'get set' : 
    NLog.Targets.Wrappers.AsyncTargetWrapperOverflowAction OverflowAction 'get set' : 
    Int32 QueueLimit 'get set' : 
    Int32 FullBatchSizeWriteLimit 'get set' : 
    Boolean ForceLockingQueue 'get set' : 
  Events:
    System.EventHandler`1[NLog.Targets.Wrappers.LogEventDroppedEventArgs] _logEventDroppedEvent: 
    System.EventHandler`1[NLog.Targets.Wrappers.LogEventQueueGrowEventArgs] _eventQueueGrowEvent: 
    System.EventHandler`1[NLog.Targets.Wrappers.LogEventDroppedEventArgs] LogEventDropped: 
    System.EventHandler`1[NLog.Targets.Wrappers.LogEventQueueGrowEventArgs] EventQueueGrow: 
  Methods:
    get_BatchSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BatchSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TimeToSleepBetweenBatches(): PrivateScope, Public, HideBySig, SpecialName
    set_TimeToSleepBetweenBatches(Int32): PrivateScope, Public, HideBySig, SpecialName
    add_LogEventDropped(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_LogEventDropped(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_EventQueueGrow(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_EventQueueGrow(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_OverflowAction(): PrivateScope, Public, HideBySig, SpecialName
    set_OverflowAction(AsyncTargetWrapperOverflowAction): PrivateScope, Public, HideBySig, SpecialName
    get_QueueLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_QueueLimit(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FullBatchSizeWriteLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_FullBatchSizeWriteLimit(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ForceLockingQueue(): PrivateScope, Public, HideBySig, SpecialName
    set_ForceLockingQueue(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.Targets.Wrappers.AsyncTargetWrapperOverflowAction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.Wrappers.AsyncTargetWrapperOverflowAction Grow = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.AsyncTargetWrapperOverflowAction Discard = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.AsyncTargetWrapperOverflowAction Block = 2 : Public, Static, Literal, HasDefault
Class NLog.Targets.Wrappers.AutoFlushTargetWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.WrapperTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Conditions.ConditionExpression Condition 'get set' : 
    Boolean AsyncFlush 'get set' : 
    Boolean FlushOnConditionOnly 'get set' : 
  Methods:
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    set_Condition(ConditionExpression): PrivateScope, Public, HideBySig, SpecialName
    get_AsyncFlush(): PrivateScope, Public, HideBySig, SpecialName
    set_AsyncFlush(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FlushOnConditionOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_FlushOnConditionOnly(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.Wrappers.BufferingTargetWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.WrapperTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target, Int32, Int32, NLog.Targets.Wrappers.BufferingTargetWrapperOverflowAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BufferSize 'get set' : 
    Int32 FlushTimeout 'get set' : 
    Boolean SlidingTimeout 'get set' : 
    NLog.Targets.Wrappers.BufferingTargetWrapperOverflowAction OverflowAction 'get set' : 
  Methods:
    get_BufferSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BufferSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FlushTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_FlushTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SlidingTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_SlidingTimeout(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OverflowAction(): PrivateScope, Public, HideBySig, SpecialName
    set_OverflowAction(BufferingTargetWrapperOverflowAction): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.Targets.Wrappers.BufferingTargetWrapperOverflowAction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.Wrappers.BufferingTargetWrapperOverflowAction Flush = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.BufferingTargetWrapperOverflowAction Discard = 1 : Public, Static, Literal, HasDefault
Class NLog.Targets.Wrappers.CompoundTargetBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Targets.Target
  Properties:
    System.Collections.Generic.IList`1[NLog.Targets.Target] Targets 'get set' : 
  Methods:
    get_Targets(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Targets.Wrappers.ConcurrentRequestQueue: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Targets.Wrappers.AsyncRequestQueueBase
    Void .ctor(Int32, NLog.Targets.Wrappers.AsyncTargetWrapperOverflowAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    Enqueue(AsyncLogEventInfo): PrivateScope, Public, Virtual, HideBySig
    DequeueBatch(Int32): PrivateScope, Public, Virtual, HideBySig
    DequeueBatch(Int32, IList`1): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Targets.Wrappers.FallbackGroupTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.CompoundTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReturnToFirstOnSuccess 'get set' : 
  Methods:
    get_ReturnToFirstOnSuccess(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnToFirstOnSuccess(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.Wrappers.FilteringRule: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Conditions.ConditionExpression, NLog.Conditions.ConditionExpression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Conditions.ConditionExpression Exists 'get set' : 
    NLog.Conditions.ConditionExpression Filter 'get set' : 
  Methods:
    get_Exists(): PrivateScope, Public, HideBySig, SpecialName
    set_Exists(ConditionExpression): PrivateScope, Public, HideBySig, SpecialName
    get_Filter(): PrivateScope, Public, HideBySig, SpecialName
    set_Filter(ConditionExpression): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.Wrappers.FilteringTargetWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.WrapperTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target, NLog.Conditions.ConditionExpression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target, NLog.Conditions.ConditionExpression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Conditions.ConditionExpression Condition 'get set' : 
    NLog.Filters.Filter Filter 'get set' : 
  Methods:
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    set_Condition(ConditionExpression): PrivateScope, Public, HideBySig, SpecialName
    get_Filter(): PrivateScope, Public, HideBySig, SpecialName
    set_Filter(Filter): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.Wrappers.ImpersonatingTargetWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.WrapperTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String UserName 'get set' : 
    System.String Password 'get set' : 
    System.String Domain 'get set' : 
    NLog.Targets.Wrappers.SecurityLogOnType LogOnType 'get set' : 
    NLog.Targets.Wrappers.LogOnProviderType LogOnProvider 'get set' : 
    NLog.Targets.Wrappers.SecurityImpersonationLevel ImpersonationLevel 'get set' : 
    Boolean RevertToSelf 'get set' : 
  Methods:
    get_UserName(): PrivateScope, Public, HideBySig, SpecialName
    set_UserName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Password(): PrivateScope, Public, HideBySig, SpecialName
    set_Password(String): PrivateScope, Public, HideBySig, SpecialName
    get_Domain(): PrivateScope, Public, HideBySig, SpecialName
    set_Domain(String): PrivateScope, Public, HideBySig, SpecialName
    get_LogOnType(): PrivateScope, Public, HideBySig, SpecialName
    set_LogOnType(SecurityLogOnType): PrivateScope, Public, HideBySig, SpecialName
    get_LogOnProvider(): PrivateScope, Public, HideBySig, SpecialName
    set_LogOnProvider(LogOnProviderType): PrivateScope, Public, HideBySig, SpecialName
    get_ImpersonationLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_ImpersonationLevel(SecurityImpersonationLevel): PrivateScope, Public, HideBySig, SpecialName
    get_RevertToSelf(): PrivateScope, Public, HideBySig, SpecialName
    set_RevertToSelf(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.Wrappers.LimitingTargetWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.WrapperTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target, Int32, System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MessageLimit 'get set' : 
    System.TimeSpan Interval 'get set' : 
    System.DateTime IntervalResetsAt 'get ' : 
    Int32 MessagesWrittenCount 'get set' : 
  Methods:
    get_MessageLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_MessageLimit(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Interval(): PrivateScope, Public, HideBySig, SpecialName
    set_Interval(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_IntervalResetsAt(): PrivateScope, Public, HideBySig, SpecialName
    get_MessagesWrittenCount(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.Wrappers.LogEventDroppedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(NLog.LogEventInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.LogEventInfo DroppedLogEventInfo 'get ' : 
  Methods:
    get_DroppedLogEventInfo(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.Wrappers.LogEventQueueGrowEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 NewQueueSize 'get ' : 
    Int64 RequestsCount 'get ' : 
  Methods:
    get_NewQueueSize(): PrivateScope, Public, HideBySig, SpecialName
    get_RequestsCount(): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.Targets.Wrappers.LogOnProviderType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.Wrappers.LogOnProviderType Default = 0 : Public, Static, Literal, HasDefault
Class NLog.Targets.Wrappers.PostFilteringTargetWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.WrapperTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Conditions.ConditionExpression DefaultFilter 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.Wrappers.FilteringRule] Rules 'get set' : 
  Methods:
    get_DefaultFilter(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultFilter(ConditionExpression): PrivateScope, Public, HideBySig, SpecialName
    get_Rules(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.Wrappers.RandomizeGroupTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.CompoundTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Targets.Wrappers.RepeatingTargetWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.WrapperTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 RepeatCount 'get set' : 
  Methods:
    get_RepeatCount(): PrivateScope, Public, HideBySig, SpecialName
    set_RepeatCount(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.Wrappers.RetryingTargetWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.WrapperTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 RetryCount 'get set' : 
    Int32 RetryDelayMilliseconds 'get set' : 
  Methods:
    get_RetryCount(): PrivateScope, Public, HideBySig, SpecialName
    set_RetryCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RetryDelayMilliseconds(): PrivateScope, Public, HideBySig, SpecialName
    set_RetryDelayMilliseconds(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Targets.Wrappers.RoundRobinGroupTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.CompoundTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct NLog.Targets.Wrappers.SecurityImpersonationLevel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.Wrappers.SecurityImpersonationLevel Anonymous = 0 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.SecurityImpersonationLevel Identification = 1 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.SecurityImpersonationLevel Impersonation = 2 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.SecurityImpersonationLevel Delegation = 3 : Public, Static, Literal, HasDefault
Struct NLog.Targets.Wrappers.SecurityLogOnType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Targets.Wrappers.SecurityLogOnType Interactive = 2 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.SecurityLogOnType Network = 3 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.SecurityLogOnType Batch = 4 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.SecurityLogOnType Service = 5 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.SecurityLogOnType NetworkClearText = 8 : Public, Static, Literal, HasDefault
    NLog.Targets.Wrappers.SecurityLogOnType NewCredentials = 9 : Public, Static, Literal, HasDefault
Class NLog.Targets.Wrappers.SplitGroupTarget: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Targets.Wrappers.CompoundTargetBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Targets.Target[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Targets.Wrappers.WrapperTargetBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Targets.Target
  Properties:
    NLog.Targets.Target WrappedTarget 'get set' : 
  Methods:
    get_WrappedTarget(): PrivateScope, Public, HideBySig, SpecialName
    set_WrappedTarget(Target): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Targets.FileArchiveModes.FileArchiveModeBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    NLog.Targets.IFileArchiveMode
  Properties:
    Boolean IsArchiveCleanupEnabled 'get ' : 
  Methods:
    get_IsArchiveCleanupEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AttemptCleanupOnInitializeFile(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateFileNameMask(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetExistingArchiveFiles(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateArchiveFileName(String, DateTime, List`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CheckArchiveCleanup(String, List`1, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NLog.Targets.FileArchiveModes.FileArchiveModeDate: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Targets.FileArchiveModes.FileArchiveModeBase
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetExistingArchiveFiles(String): PrivateScope, Public, Virtual, HideBySig
    GenerateArchiveFileName(String, DateTime, List`1): PrivateScope, Public, Virtual, HideBySig
Class NLog.Targets.FileArchiveModes.FileArchiveModeDateAndSequence: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Targets.FileArchiveModes.FileArchiveModeBase
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AttemptCleanupOnInitializeFile(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GenerateArchiveFileName(String, DateTime, List`1): PrivateScope, Public, Virtual, HideBySig
Class NLog.Targets.FileArchiveModes.FileArchiveModeDynamicSequence: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Targets.FileArchiveModes.FileArchiveModeBase
    Void .ctor(NLog.Targets.ArchiveNumberingMode, System.String, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GenerateArchiveFileName(String, DateTime, List`1): PrivateScope, Public, Virtual, HideBySig
Class NLog.Targets.FileArchiveModes.FileArchiveModeDynamicTemplate: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(NLog.Targets.IFileArchiveMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Targets.IFileArchiveMode
  Properties:
    Boolean IsArchiveCleanupEnabled 'get ' : 
  Methods:
    get_IsArchiveCleanupEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AttemptCleanupOnInitializeFile(String, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CheckArchiveCleanup(String, List`1, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateArchiveFileName(String, DateTime, List`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateFileNameMask(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetExistingArchiveFiles(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Targets.FileArchiveModes.FileArchiveModeFactory: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateArchiveStyle(String, ArchiveNumberingMode, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    ContainsFileNamePattern(String): PrivateScope, Public, Static, HideBySig
Class NLog.Targets.FileArchiveModes.FileArchiveModeRolling: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Targets.IFileArchiveMode
  Properties:
    Boolean IsArchiveCleanupEnabled 'get ' : 
  Methods:
    get_IsArchiveCleanupEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AttemptCleanupOnInitializeFile(String, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateFileNameMask(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetExistingArchiveFiles(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateArchiveFileName(String, DateTime, List`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CheckArchiveCleanup(String, List`1, Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Targets.FileArchiveModes.FileArchiveModeSequence: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Targets.FileArchiveModes.FileArchiveModeBase
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AttemptCleanupOnInitializeFile(String, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GenerateArchiveFileName(String, DateTime, List`1): PrivateScope, Public, Virtual, HideBySig
Struct NLog.MessageTemplates.CaptureType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    NLog.MessageTemplates.CaptureType Unknown = 0 : Public, Static, Literal, HasDefault
    NLog.MessageTemplates.CaptureType Normal = 1 : Public, Static, Literal, HasDefault
    NLog.MessageTemplates.CaptureType Serialize = 2 : Public, Static, Literal, HasDefault
    NLog.MessageTemplates.CaptureType Stringify = 3 : Public, Static, Literal, HasDefault
Struct NLog.MessageTemplates.Hole: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, System.String, NLog.MessageTemplates.CaptureType, Int16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public, InitOnly
    System.String Format : Public, InitOnly
    NLog.MessageTemplates.CaptureType CaptureType : Public, InitOnly
    Int16 Index : Public, InitOnly
    Int16 Alignment : Public, InitOnly
Struct NLog.MessageTemplates.Literal: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Print : Public, InitOnly
    Int32 Skip : Public, InitOnly
Struct NLog.MessageTemplates.LiteralHole: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(NLog.MessageTemplates.Literal, NLog.MessageTemplates.Hole): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.MessageTemplates.Literal Literal : Public
    NLog.MessageTemplates.Hole Hole : Public
  Properties:
    Boolean MaybePositionalTemplate 'get ' : 
  Methods:
    get_MaybePositionalTemplate(): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.MessageTemplates.MessageTemplateParameter: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, System.Object, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object, System.String, NLog.MessageTemplates.CaptureType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.Object Value 'get ' : 
    System.String Format 'get ' : 
    NLog.MessageTemplates.CaptureType CaptureType 'get ' : 
    System.Nullable`1[System.Int32] PositionalIndex 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    get_CaptureType(): PrivateScope, Public, HideBySig, SpecialName
    get_PositionalIndex(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.MessageTemplates.MessageTemplateParameters: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String, System.Object[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IList`1[NLog.MessageTemplates.MessageTemplateParameter], System.String, System.Object[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[NLog.MessageTemplates.MessageTemplateParameter]
    System.Collections.IEnumerable
  Fields:
    NLog.MessageTemplates.MessageTemplateParameters Empty : Assembly, Static, InitOnly
  Properties:
    NLog.MessageTemplates.MessageTemplateParameter Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
    Boolean IsPositional 'get ' : 
    Boolean IsValidTemplate 'get ' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPositional(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValidTemplate(): PrivateScope, Assembly, HideBySig, SpecialName
Class NLog.MessageTemplates.Template: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, Boolean, System.Collections.Generic.List`1[NLog.MessageTemplates.Literal], System.Collections.Generic.List`1[NLog.MessageTemplates.Hole]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, NLog.MessageTemplates.Literal[], NLog.MessageTemplates.Hole[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Value 'get ' : 
    NLog.MessageTemplates.Literal[] Literals 'get ' : 
    NLog.MessageTemplates.Hole[] Holes 'get ' : 
    Boolean IsPositional 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Literals(): PrivateScope, Public, HideBySig, SpecialName
    get_Holes(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPositional(): PrivateScope, Public, HideBySig, SpecialName
    Rebuild(): PrivateScope, Public, HideBySig
Struct NLog.MessageTemplates.TemplateEnumerator: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[NLog.MessageTemplates.LiteralHole]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    NLog.MessageTemplates.LiteralHole Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.MessageTemplates.TemplateParser: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Parse(String): PrivateScope, Public, Static, HideBySig
Class NLog.MessageTemplates.TemplateParserException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Index 'get ' : 
    System.String Template 'get ' : 
  Methods:
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    get_Template(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.MessageTemplates.TemplateRenderer: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Render(String, IFormatProvider, Object[], Boolean, StringBuilder, IList`1&(Out)): PrivateScope, Public, Static, HideBySig
    Render(Template, StringBuilder, IFormatProvider, Object[]): PrivateScope, Public, Static, HideBySig
    RenderHole(StringBuilder, CaptureType, String, IFormatProvider, Object, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class NLog.MessageTemplates.ValueFormatter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Interfaces:
    NLog.IValueFormatter
  Fields:
    System.String FormatAsJson = @ : Public, Static, Literal, HasDefault
    System.String FormatAsString = $ : Public, Static, Literal, HasDefault
  Properties:
    NLog.IValueFormatter Instance 'get set' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Instance(IValueFormatter): PrivateScope, Public, Static, HideBySig, SpecialName
    FormatValue(Object, String, CaptureType, IFormatProvider, StringBuilder): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FormatObject(Object, String, IFormatProvider, StringBuilder): PrivateScope, Public, HideBySig
    FormatToString(Object, String, IFormatProvider, StringBuilder): PrivateScope, Public, Static, HideBySig
Class NLog.LogReceiverService.BaseLogReceiverForwardingService: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    ProcessLogMessages(NLogEvents): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface NLog.LogReceiverService.ILogReceiverClient: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract (Obsolete)
  Methods:
    BeginProcessLogMessages(NLogEvents, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndProcessLogMessages(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.LogReceiverService.ILogReceiverOneWayClient: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    BeginProcessLogMessages(NLogEvents, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndProcessLogMessages(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.LogReceiverService.ILogReceiverOneWayServer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ProcessLogMessages(NLogEvents): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.LogReceiverService.ILogReceiverServer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ProcessLogMessages(NLogEvents): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.LogReceiverService.ILogReceiverTwoWayClient: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    BeginProcessLogMessages(NLogEvents, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndProcessLogMessages(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.LogReceiverService.IWcfLogReceiverClient: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.ServiceModel.ICommunicationObject
  Properties:
    System.ServiceModel.Description.ClientCredentials ClientCredentials 'get ' : 
    System.ServiceModel.IClientChannel InnerChannel 'get ' : 
    System.ServiceModel.Description.ServiceEndpoint Endpoint 'get ' : 
    System.Net.CookieContainer CookieContainer 'get set' : 
  Events:
    System.EventHandler`1[System.ComponentModel.AsyncCompletedEventArgs] ProcessLogMessagesCompleted: 
    System.EventHandler`1[System.ComponentModel.AsyncCompletedEventArgs] OpenCompleted: 
    System.EventHandler`1[System.ComponentModel.AsyncCompletedEventArgs] CloseCompleted: 
  Methods:
    add_ProcessLogMessagesCompleted(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_ProcessLogMessagesCompleted(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_OpenCompleted(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_OpenCompleted(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_CloseCompleted(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_CloseCompleted(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ClientCredentials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_InnerChannel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Endpoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    OpenAsync(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenAsync(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseAsync(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseAsync(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessLogMessagesAsync(NLogEvents): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessLogMessagesAsync(NLogEvents, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginProcessLogMessages(NLogEvents, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndProcessLogMessages(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisplayInitializationUI(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_CookieContainer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CookieContainer(CookieContainer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NLog.LogReceiverService.LogReceiverForwardingService: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LogReceiverService.BaseLogReceiverForwardingService
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.LogFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.LogReceiverService.ILogReceiverServer
Class NLog.LogReceiverService.LogReceiverOneWayForwardingService: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LogReceiverService.BaseLogReceiverForwardingService
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.LogFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.LogReceiverService.ILogReceiverOneWayServer
Class NLog.LogReceiverService.LogReceiverServiceConfig: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String WebServiceNamespace = http://nlog-project.org/ws/ : Assembly, Static, Literal, HasDefault
Class NLog.LogReceiverService.NLogEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Id   'get set' : 
    Int32 LevelOrdinal 'get set' : 
    Int32 LoggerOrdinal 'get set' : 
    Int64 TimeDelta 'get set' : 
    Int32 MessageOrdinal 'get set' : 
    System.String Values 'get set' : 
    System.Collections.Generic.IList`1[System.Int32] ValueIndexes 'get set' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    set_Id(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LevelOrdinal(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelOrdinal(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LoggerOrdinal(): PrivateScope, Public, HideBySig, SpecialName
    set_LoggerOrdinal(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TimeDelta(): PrivateScope, Public, HideBySig, SpecialName
    set_TimeDelta(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_MessageOrdinal(): PrivateScope, Public, HideBySig, SpecialName
    set_MessageOrdinal(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Values(): PrivateScope, Public, HideBySig, SpecialName
    set_Values(String): PrivateScope, Public, HideBySig, SpecialName
    get_ValueIndexes(): PrivateScope, Assembly, HideBySig, SpecialName
    ToEventInfo(NLogEvents, String): PrivateScope, Assembly, HideBySig
Class NLog.LogReceiverService.NLogEvents: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ClientName 'get set' : 
    Int64 BaseTimeUtc 'get set' : 
    NLog.LogReceiverService.StringCollection LayoutNames 'get set' : 
    NLog.LogReceiverService.StringCollection Strings 'get set' : 
    NLog.LogReceiverService.NLogEvent[] Events 'get set' : 
  Methods:
    get_ClientName(): PrivateScope, Public, HideBySig, SpecialName
    set_ClientName(String): PrivateScope, Public, HideBySig, SpecialName
    get_BaseTimeUtc(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseTimeUtc(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_LayoutNames(): PrivateScope, Public, HideBySig, SpecialName
    set_LayoutNames(StringCollection): PrivateScope, Public, HideBySig, SpecialName
    get_Strings(): PrivateScope, Public, HideBySig, SpecialName
    set_Strings(StringCollection): PrivateScope, Public, HideBySig, SpecialName
    get_Events(): PrivateScope, Public, HideBySig, SpecialName
    set_Events(NLogEvent[]): PrivateScope, Public, HideBySig, SpecialName
    ToEventInfo(String): PrivateScope, Public, HideBySig
    ToEventInfo(): PrivateScope, Public, HideBySig
Class NLog.LogReceiverService.StringCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[System.String]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.LogReceiverService.WcfILogReceiverClient: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit (Obsolete)
  :NLog.LogReceiverService.WcfLogReceiverClientBase`1[NLog.LogReceiverService.ILogReceiverClient]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.ServiceModel.EndpointAddress): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.LogReceiverService.ILogReceiverClient
  Methods:
    BeginProcessLogMessages(NLogEvents, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    EndProcessLogMessages(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
Class NLog.LogReceiverService.WcfLogReceiverClient: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String, System.ServiceModel.EndpointAddress): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.LogReceiverService.IWcfLogReceiverClient
    System.ServiceModel.ICommunicationObject
  Properties:
    NLog.LogReceiverService.IWcfLogReceiverClient ProxiedClient 'get set' : 
    Boolean UseOneWay 'get set' : 
    System.ServiceModel.Description.ClientCredentials ClientCredentials 'get ' : 
    System.Net.CookieContainer CookieContainer 'get set' : 
    System.ServiceModel.Description.ServiceEndpoint Endpoint 'get ' : 
    System.ServiceModel.IClientChannel InnerChannel 'get ' : 
    System.ServiceModel.CommunicationState State 'get ' : 
  Events:
    System.EventHandler`1[System.ComponentModel.AsyncCompletedEventArgs] CloseCompleted: 
    System.EventHandler Closed: 
    System.EventHandler Closing: 
    System.EventHandler Faulted: 
    System.EventHandler`1[System.ComponentModel.AsyncCompletedEventArgs] OpenCompleted: 
    System.EventHandler Opened: 
    System.EventHandler Opening: 
    System.EventHandler`1[System.ComponentModel.AsyncCompletedEventArgs] ProcessLogMessagesCompleted: 
  Methods:
    get_ProxiedClient(): PrivateScope, Public, HideBySig, SpecialName
    get_UseOneWay(): PrivateScope, Public, HideBySig, SpecialName
    Abort(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginClose(AsyncCallback, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginClose(TimeSpan, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginOpen(AsyncCallback, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginOpen(TimeSpan, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginProcessLogMessages(NLogEvents, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_ClientCredentials(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(TimeSpan): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseAsync(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseAsync(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_CloseCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_CloseCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_Closed(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Closed(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_Closing(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Closing(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    DisplayInitializationUI(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_CookieContainer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CookieContainer(CookieContainer): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    EndClose(IAsyncResult): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EndOpen(IAsyncResult): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Endpoint(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    EndProcessLogMessages(IAsyncResult): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_Faulted(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Faulted(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InnerChannel(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Open(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Open(TimeSpan): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenAsync(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenAsync(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_OpenCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OpenCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_Opened(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Opened(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_Opening(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Opening(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ProcessLogMessagesAsync(NLogEvents): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessLogMessagesAsync(NLogEvents, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_ProcessLogMessagesCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_ProcessLogMessagesCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_State(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CloseCommunicationObject(): PrivateScope, Public, HideBySig
Class NLog.LogReceiverService.WcfLogReceiverClientBase`1[TService]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TService,  ReferenceType
  :System.ServiceModel.ClientBase`1[TService]
  Interfaces:
    NLog.LogReceiverService.IWcfLogReceiverClient
  Properties:
    System.Net.CookieContainer CookieContainer 'get set' : 
  Events:
    System.EventHandler`1[System.ComponentModel.AsyncCompletedEventArgs] ProcessLogMessagesCompleted: 
    System.EventHandler`1[System.ComponentModel.AsyncCompletedEventArgs] OpenCompleted: 
    System.EventHandler`1[System.ComponentModel.AsyncCompletedEventArgs] CloseCompleted: 
  Methods:
    add_ProcessLogMessagesCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_ProcessLogMessagesCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_OpenCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_OpenCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_CloseCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_CloseCompleted(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CookieContainer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CookieContainer(CookieContainer): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    OpenAsync(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OpenAsync(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseAsync(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseAsync(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessLogMessagesAsync(NLogEvents): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ProcessLogMessagesAsync(NLogEvents, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BeginProcessLogMessages(NLogEvents, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndProcessLogMessages(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.LogReceiverService.WcfLogReceiverOneWayClient: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LogReceiverService.WcfLogReceiverClientBase`1[NLog.LogReceiverService.ILogReceiverOneWayClient]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.ServiceModel.EndpointAddress): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.LogReceiverService.ILogReceiverOneWayClient
  Methods:
    BeginProcessLogMessages(NLogEvents, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    EndProcessLogMessages(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
Class NLog.LogReceiverService.WcfLogReceiverTwoWayClient: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LogReceiverService.WcfLogReceiverClientBase`1[NLog.LogReceiverService.ILogReceiverTwoWayClient]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.ServiceModel.EndpointAddress): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.LogReceiverService.ILogReceiverTwoWayClient
  Methods:
    BeginProcessLogMessages(NLogEvents, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    EndProcessLogMessages(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
Class NLog.Layouts.CompoundLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Layouts.Layout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[NLog.Layouts.Layout] Layouts 'get set' : 
  Methods:
    get_Layouts(): PrivateScope, Public, HideBySig, SpecialName
    PrecalculateBuilder(LogEventInfo, StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Layouts.CsvColumn: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[NLog.Layouts.CsvQuotingMode] _quoting : Assembly
  Properties:
    System.String Name 'get set' : 
    NLog.Layouts.Layout Layout 'get set' : 
    NLog.Layouts.CsvQuotingMode Quoting 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Quoting(): PrivateScope, Public, HideBySig, SpecialName
    set_Quoting(CsvQuotingMode): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.Layouts.CsvColumnDelimiterMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Layouts.CsvColumnDelimiterMode Auto = 0 : Public, Static, Literal, HasDefault
    NLog.Layouts.CsvColumnDelimiterMode Comma = 1 : Public, Static, Literal, HasDefault
    NLog.Layouts.CsvColumnDelimiterMode Semicolon = 2 : Public, Static, Literal, HasDefault
    NLog.Layouts.CsvColumnDelimiterMode Tab = 3 : Public, Static, Literal, HasDefault
    NLog.Layouts.CsvColumnDelimiterMode Pipe = 4 : Public, Static, Literal, HasDefault
    NLog.Layouts.CsvColumnDelimiterMode Space = 5 : Public, Static, Literal, HasDefault
    NLog.Layouts.CsvColumnDelimiterMode Custom = 6 : Public, Static, Literal, HasDefault
Class NLog.Layouts.CsvLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Layouts.LayoutWithHeaderAndFooter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[NLog.Layouts.CsvColumn] Columns 'get set' : 
    Boolean WithHeader 'get set' : 
    NLog.Layouts.CsvColumnDelimiterMode Delimiter 'get set' : 
    NLog.Layouts.CsvQuotingMode Quoting 'get set' : 
    System.String QuoteChar 'get set' : 
    System.String CustomColumnDelimiter 'get set' : 
  Methods:
    get_Columns(): PrivateScope, Public, HideBySig, SpecialName
    get_WithHeader(): PrivateScope, Public, HideBySig, SpecialName
    set_WithHeader(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Delimiter(): PrivateScope, Public, HideBySig, SpecialName
    set_Delimiter(CsvColumnDelimiterMode): PrivateScope, Public, HideBySig, SpecialName
    get_Quoting(): PrivateScope, Public, HideBySig, SpecialName
    set_Quoting(CsvQuotingMode): PrivateScope, Public, HideBySig, SpecialName
    get_QuoteChar(): PrivateScope, Public, HideBySig, SpecialName
    set_QuoteChar(String): PrivateScope, Public, HideBySig, SpecialName
    get_CustomColumnDelimiter(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomColumnDelimiter(String): PrivateScope, Public, HideBySig, SpecialName
    PrecalculateBuilder(LogEventInfo, StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct NLog.Layouts.CsvQuotingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Layouts.CsvQuotingMode All = 0 : Public, Static, Literal, HasDefault
    NLog.Layouts.CsvQuotingMode Nothing = 1 : Public, Static, Literal, HasDefault
    NLog.Layouts.CsvQuotingMode Auto = 2 : Public, Static, Literal, HasDefault
Class NLog.Layouts.JsonAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.LayoutRenderers.Wrappers.JsonEncodeLayoutRendererWrapper LayoutWrapper : Assembly, InitOnly
  Properties:
    System.String Name 'get set' : 
    NLog.Layouts.Layout Layout 'get set' : 
    Boolean Encode 'get set' : 
    Boolean EscapeUnicode 'get set' : 
    Boolean EscapeForwardSlash 'get set' : 
    Boolean IncludeEmptyValue 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Encode(): PrivateScope, Public, HideBySig, SpecialName
    set_Encode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeUnicode(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeUnicode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeForwardSlash(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeForwardSlash(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeEmptyValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeEmptyValue(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Layouts.JsonLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Layouts.Layout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[NLog.Layouts.JsonAttribute] Attributes 'get set' : 
    Boolean SuppressSpaces 'get set' : 
    Boolean RenderEmptyObject 'get set' : 
    Boolean IncludeGdc 'get set' : 
    Boolean IncludeMdc 'get set' : 
    Boolean IncludeMdlc 'get set' : 
    Boolean IncludeAllProperties 'get set' : 
    Boolean ExcludeEmptyProperties 'get set' : 
    System.Collections.Generic.ISet`1[System.String] ExcludeProperties 'get set' : 
    Int32 MaxRecursionLimit 'get set' : 
    Boolean EscapeForwardSlash 'get set' : 
  Methods:
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    get_SuppressSpaces(): PrivateScope, Public, HideBySig, SpecialName
    set_SuppressSpaces(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RenderEmptyObject(): PrivateScope, Public, HideBySig, SpecialName
    set_RenderEmptyObject(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeGdc(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeGdc(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeMdc(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeMdc(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeMdlc(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeMdlc(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeAllProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeAllProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExcludeEmptyProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_ExcludeEmptyProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExcludeProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_ExcludeProperties(ISet`1): PrivateScope, Public, HideBySig, SpecialName
    get_MaxRecursionLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxRecursionLimit(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeForwardSlash(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeForwardSlash(Boolean): PrivateScope, Public, HideBySig, SpecialName
    PrecalculateBuilder(LogEventInfo, StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Layouts.Layout: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    NLog.Internal.ISupportsInitialize
    NLog.Internal.IRenderable
  Fields:
    Boolean IsInitialized : Assembly
  Properties:
    Boolean ThreadAgnostic 'get set' : 
    Boolean ThreadSafe 'get set' : 
    Boolean MutableUnsafe 'get set' : 
    NLog.Config.StackTraceUsage StackTraceUsage 'get set' : 
  Methods:
    get_ThreadAgnostic(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ThreadAgnostic(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_ThreadSafe(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ThreadSafe(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_MutableUnsafe(): PrivateScope, Assembly, HideBySig, SpecialName
    set_MutableUnsafe(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_StackTraceUsage(): PrivateScope, Assembly, HideBySig, SpecialName
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
    FromString(String): PrivateScope, Public, Static, HideBySig
    FromString(String, ConfigurationItemFactory): PrivateScope, Public, Static, HideBySig
    FromString(String, Boolean): PrivateScope, Public, Static, HideBySig
    FromMethod(Func`2, LayoutRenderOptions(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Precalculate(LogEventInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Render(LogEventInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PrecalculateBuilder(LogEventInfo, StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    RenderAppendBuilder(LogEventInfo, StringBuilder, Boolean(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    RenderAllocateBuilder(LogEventInfo, StringBuilder(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    Initialize(LoggingConfiguration): PrivateScope, Assembly, HideBySig
    PerformObjectScanning(): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Assembly, HideBySig
    Register(String): PrivateScope, Public, Static, HideBySig
    Register(String, Type): PrivateScope, Public, Static, HideBySig
    PrecalculateBuilderInternal(LogEventInfo, StringBuilder): PrivateScope, Assembly, HideBySig
    ToStringWithNestedItems(IList`1, Func`2): PrivateScope, Assembly, HideBySig
    TryGetRawValue(LogEventInfo, Object&(Out)): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
Class NLog.Layouts.LayoutAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Config.NameBaseAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Layouts.LayoutParser: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CompileLayout(ConfigurationItemFactory, SimpleStringReader, Nullable`1, Boolean, String&(Out)): PrivateScope, Assembly, Static, HideBySig
Struct NLog.Layouts.LayoutRenderOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Layouts.LayoutRenderOptions None = 0 : Public, Static, Literal, HasDefault
    NLog.Layouts.LayoutRenderOptions ThreadSafe = 1 : Public, Static, Literal, HasDefault
    NLog.Layouts.LayoutRenderOptions ThreadAgnostic = 3 : Public, Static, Literal, HasDefault
Class NLog.Layouts.LayoutWithHeaderAndFooter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Layouts.Layout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Layouts.Layout Layout 'get set' : 
    NLog.Layouts.Layout Header 'get set' : 
    NLog.Layouts.Layout Footer 'get set' : 
  Methods:
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Header(): PrivateScope, Public, HideBySig, SpecialName
    set_Header(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Footer(): PrivateScope, Public, HideBySig, SpecialName
    set_Footer(Layout): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Layouts.Log4JXmlEventLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Layouts.Layout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.IIncludeContext
  Properties:
    NLog.LayoutRenderers.Log4JXmlEventLayoutRenderer Renderer 'get ' : 
    System.Collections.Generic.IList`1[NLog.Targets.NLogViewerParameterInfo] Parameters 'get set' : 
    Boolean IncludeMdc 'get set' : 
    Boolean IncludeAllProperties 'get set' : 
    Boolean IncludeNdc 'get set' : 
    Boolean IncludeMdlc 'get set' : 
    Boolean IncludeNdlc 'get set' : 
    Boolean IncludeCallSite 'get set' : 
    Boolean IncludeSourceInfo 'get set' : 
  Methods:
    get_Renderer(): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameters(IList`1): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeMdc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeMdc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeAllProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeAllProperties(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeNdc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeNdc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeMdlc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeMdlc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeNdlc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeNdlc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeCallSite(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeCallSite(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeSourceInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeSourceInfo(Boolean): PrivateScope, Public, HideBySig, SpecialName
    PrecalculateBuilder(LogEventInfo, StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class NLog.Layouts.SimpleLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Layouts.Layout
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Config.ConfigurationItemFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Config.ConfigurationItemFactory, System.Nullable`1[System.Boolean]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.LayoutRenderers.LayoutRenderer[], System.String, NLog.Config.ConfigurationItemFactory): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IUsesStackTrace
  Properties:
    System.String OriginalText 'get set' : 
    System.String Text 'get set' : 
    Boolean IsFixedText 'get ' : 
    System.String FixedText 'get ' : 
    Boolean IsSimpleStringText 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[NLog.LayoutRenderers.LayoutRenderer] Renderers 'get set' : 
    NLog.Config.StackTraceUsage StackTraceUsage 'get ' : 
  Methods:
    get_OriginalText(): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsFixedText(): PrivateScope, Public, HideBySig, SpecialName
    get_FixedText(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSimpleStringText(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Renderers(): PrivateScope, Public, HideBySig, SpecialName
    get_StackTraceUsage(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
    Escape(String): PrivateScope, Public, Static, HideBySig
    Evaluate(String, LogEventInfo): PrivateScope, Public, Static, HideBySig
    Evaluate(String): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    SetRenderers(LayoutRenderer[], String): PrivateScope, Assembly, HideBySig
    Precalculate(LogEventInfo): PrivateScope, Public, Virtual, HideBySig
    PrecalculateBuilder(LogEventInfo, StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    TryGetRawValue(LogEventInfo, Object&(Out)): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class NLog.Layouts.XmlAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.LayoutRenderers.Wrappers.XmlEncodeLayoutRendererWrapper LayoutWrapper : Assembly, InitOnly
  Properties:
    System.String Name 'get set' : 
    NLog.Layouts.Layout Layout 'get set' : 
    Boolean Encode 'get set' : 
    Boolean IncludeEmptyValue 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Encode(): PrivateScope, Public, HideBySig, SpecialName
    set_Encode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeEmptyValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeEmptyValue(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Layouts.XmlElement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Layouts.XmlElementBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    NLog.Layouts.Layout Value 'get set' : 
    Boolean Encode 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Encode(): PrivateScope, Public, HideBySig, SpecialName
    set_Encode(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Layouts.XmlElementBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Layouts.Layout
  Fields:
    NLog.LayoutRenderers.Wrappers.XmlEncodeLayoutRendererWrapper LayoutWrapper : Assembly, InitOnly
  Properties:
    System.String ElementNameInternal 'get set' : 
    Boolean IndentXml 'get set' : 
    System.Collections.Generic.IList`1[NLog.Layouts.XmlElement] Elements 'get set' : 
    System.Collections.Generic.IList`1[NLog.Layouts.XmlAttribute] Attributes 'get set' : 
    Boolean IncludeEmptyValue 'get set' : 
    Boolean IncludeMdc 'get set' : 
    Boolean IncludeMdlc 'get set' : 
    Boolean IncludeAllProperties 'get set' : 
    System.Collections.Generic.ISet`1[System.String] ExcludeProperties 'get set' : 
    System.String PropertiesElementName 'get set' : 
    System.String PropertiesElementKeyAttribute 'get set' : 
    System.String PropertiesElementValueAttribute 'get set' : 
    System.String PropertiesCollectionItemName 'get set' : 
    Int32 MaxRecursionLimit 'get set' : 
  Methods:
    get_ElementNameInternal(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ElementNameInternal(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_IndentXml(): PrivateScope, Public, HideBySig, SpecialName
    set_IndentXml(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Elements(): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeEmptyValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeEmptyValue(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeMdc(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeMdc(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeMdlc(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeMdlc(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeAllProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeAllProperties(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExcludeProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_ExcludeProperties(ISet`1): PrivateScope, Public, HideBySig, SpecialName
    get_PropertiesElementName(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertiesElementName(String): PrivateScope, Public, HideBySig, SpecialName
    get_PropertiesElementKeyAttribute(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertiesElementKeyAttribute(String): PrivateScope, Public, HideBySig, SpecialName
    get_PropertiesElementValueAttribute(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertiesElementValueAttribute(String): PrivateScope, Public, HideBySig, SpecialName
    get_PropertiesCollectionItemName(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertiesCollectionItemName(String): PrivateScope, Public, HideBySig, SpecialName
    get_MaxRecursionLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxRecursionLimit(Int32): PrivateScope, Public, HideBySig, SpecialName
    PrecalculateBuilder(LogEventInfo, StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Layouts.XmlLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Layouts.XmlElementBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Layouts.Layout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ElementName 'get set' : 
    NLog.Layouts.Layout ElementValue 'get set' : 
    Boolean ElementEncode 'get set' : 
  Methods:
    get_ElementName(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ElementValue(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementValue(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_ElementEncode(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementEncode(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.AllEventPropertiesLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Separator 'get set' : 
    Boolean IncludeEmptyValues 'get set' : 
    System.Collections.Generic.ISet`1[System.String] Exclude 'get set' : 
    Boolean IncludeCallerInformation 'get set' :  (Obsolete)
    System.String Format 'get set' : 
  Methods:
    get_Separator(): PrivateScope, Public, HideBySig, SpecialName
    set_Separator(String): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeEmptyValues(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeEmptyValues(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Exclude(): PrivateScope, Public, HideBySig, SpecialName
    set_Exclude(ISet`1): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeCallerInformation(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeCallerInformation(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.AmbientPropertyAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Config.NameBaseAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.LayoutRenderers.AppDomainLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Internal.Fakeables.IAppDomain): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Format 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.AppSettingLayoutRenderer2: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
  Properties:
    System.String Item 'get set' : 
    System.String Name 'get set' :  (Obsolete)
    System.String Default 'get set' : 
    NLog.Internal.IConfigurationManager2 ConfigurationManager 'get set' : 
  Methods:
    get_Item(): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Default(): PrivateScope, Public, HideBySig, SpecialName
    set_Default(String): PrivateScope, Public, HideBySig, SpecialName
    get_ConfigurationManager(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ConfigurationManager(IConfigurationManager2): PrivateScope, Assembly, HideBySig, SpecialName
Class NLog.LayoutRenderers.AssemblyVersionLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    NLog.LayoutRenderers.AssemblyVersionType Type 'get set' : 
    System.String Format 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(AssemblyVersionType): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.LayoutRenderers.AssemblyVersionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.LayoutRenderers.AssemblyVersionType Assembly = 0 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.AssemblyVersionType File = 1 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.AssemblyVersionType Informational = 2 : Public, Static, Literal, HasDefault
Class NLog.LayoutRenderers.BaseDirLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Internal.Fakeables.IAppDomain): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Internal.Fakeables.IAppEnvironment): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ProcessDir 'get set' : 
    Boolean FixTempDir 'get set' : 
    System.String File 'get set' : 
    System.String Dir 'get set' : 
  Methods:
    get_ProcessDir(): PrivateScope, Public, HideBySig, SpecialName
    set_ProcessDir(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FixTempDir(): PrivateScope, Public, HideBySig, SpecialName
    set_FixTempDir(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_File(): PrivateScope, Public, HideBySig, SpecialName
    set_File(String): PrivateScope, Public, HideBySig, SpecialName
    get_Dir(): PrivateScope, Public, HideBySig, SpecialName
    set_Dir(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.CallSiteFileNameLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IUsesStackTrace
    NLog.Internal.IStringValueRenderer
  Properties:
    Boolean IncludeSourcePath 'get set' : 
    Int32 SkipFrames 'get set' : 
    Boolean CaptureStackTrace 'get set' : 
  Methods:
    get_IncludeSourcePath(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeSourcePath(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SkipFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CaptureStackTrace(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureStackTrace(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.CallSiteLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IUsesStackTrace
  Properties:
    Boolean ClassName 'get set' : 
    Boolean IncludeNamespace 'get set' : 
    Boolean MethodName 'get set' : 
    Boolean CleanNamesOfAnonymousDelegates 'get set' : 
    Boolean CleanNamesOfAsyncContinuations 'get set' : 
    Int32 SkipFrames 'get set' : 
    Boolean FileName 'get set' : 
    Boolean IncludeSourcePath 'get set' : 
    Boolean CaptureStackTrace 'get set' : 
  Methods:
    get_ClassName(): PrivateScope, Public, HideBySig, SpecialName
    set_ClassName(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeNamespace(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeNamespace(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MethodName(): PrivateScope, Public, HideBySig, SpecialName
    set_MethodName(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CleanNamesOfAnonymousDelegates(): PrivateScope, Public, HideBySig, SpecialName
    set_CleanNamesOfAnonymousDelegates(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CleanNamesOfAsyncContinuations(): PrivateScope, Public, HideBySig, SpecialName
    set_CleanNamesOfAsyncContinuations(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SkipFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeSourcePath(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeSourcePath(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CaptureStackTrace(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureStackTrace(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.CallSiteLineNumberLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IUsesStackTrace
    NLog.Internal.IRawValue
  Properties:
    Int32 SkipFrames 'get set' : 
    Boolean CaptureStackTrace 'get set' : 
  Methods:
    get_SkipFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CaptureStackTrace(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureStackTrace(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.CounterLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Value 'get set' : 
    Int32 Increment 'get set' : 
    NLog.Layouts.Layout Sequence 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Increment(): PrivateScope, Public, HideBySig, SpecialName
    set_Increment(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Sequence(): PrivateScope, Public, HideBySig, SpecialName
    set_Sequence(Layout): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.CurrentDirLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
  Properties:
    System.String File 'get set' : 
    System.String Dir 'get set' : 
  Methods:
    get_File(): PrivateScope, Public, HideBySig, SpecialName
    set_File(String): PrivateScope, Public, HideBySig, SpecialName
    get_Dir(): PrivateScope, Public, HideBySig, SpecialName
    set_Dir(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.DateLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
    NLog.Internal.IStringValueRenderer
  Properties:
    System.Globalization.CultureInfo Culture 'get set' : 
    System.String Format 'get set' : 
    Boolean UniversalTime 'get set' : 
  Methods:
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_UniversalTime(): PrivateScope, Public, HideBySig, SpecialName
    set_UniversalTime(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.DbNullLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
Class NLog.LayoutRenderers.DirectorySeparatorLayoutRenderer: AutoLayout, AnsiClass, Class, Public
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
  Methods:
    TryGetRawValue(LogEventInfo, Object&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.LayoutRenderers.EnvironmentLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
  Properties:
    System.String Variable 'get set' : 
    System.String Default 'get set' : 
  Methods:
    get_Variable(): PrivateScope, Public, HideBySig, SpecialName
    set_Variable(String): PrivateScope, Public, HideBySig, SpecialName
    get_Default(): PrivateScope, Public, HideBySig, SpecialName
    set_Default(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.EnvironmentUserLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
  Properties:
    Boolean UserName 'get set' : 
    Boolean Domain 'get set' : 
    System.String DefaultUser 'get set' : 
    System.String DefaultDomain 'get set' : 
  Methods:
    get_UserName(): PrivateScope, Public, HideBySig, SpecialName
    set_UserName(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Domain(): PrivateScope, Public, HideBySig, SpecialName
    set_Domain(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultUser(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultUser(String): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultDomain(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultDomain(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.EventContextLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Item 'get set' : 
  Methods:
    get_Item(): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.EventPropertiesLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
    NLog.Internal.IStringValueRenderer
  Properties:
    System.String Item 'get set' : 
    System.String Format 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.String ObjectPath 'get set' : 
  Methods:
    get_Item(): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectPath(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectPath(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.ExceptionLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
  Properties:
    System.String Format 'get set' : 
    System.String InnerFormat 'get set' : 
    System.String Separator 'get set' : 
    System.String ExceptionDataSeparator 'get set' : 
    Int32 MaxInnerExceptionLevel 'get set' : 
    System.String InnerExceptionSeparator 'get set' : 
    Boolean BaseException 'get set' : 
    Boolean FlattenException 'get set' : 
    System.Collections.Generic.List`1[NLog.Config.ExceptionRenderingFormat] Formats 'get set' : 
    System.Collections.Generic.List`1[NLog.Config.ExceptionRenderingFormat] InnerFormats 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_InnerFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerFormat(String): PrivateScope, Public, HideBySig, SpecialName
    get_Separator(): PrivateScope, Public, HideBySig, SpecialName
    set_Separator(String): PrivateScope, Public, HideBySig, SpecialName
    get_ExceptionDataSeparator(): PrivateScope, Public, HideBySig, SpecialName
    set_ExceptionDataSeparator(String): PrivateScope, Public, HideBySig, SpecialName
    get_MaxInnerExceptionLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxInnerExceptionLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_InnerExceptionSeparator(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerExceptionSeparator(String): PrivateScope, Public, HideBySig, SpecialName
    get_BaseException(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseException(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FlattenException(): PrivateScope, Public, HideBySig, SpecialName
    set_FlattenException(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Formats(): PrivateScope, Public, HideBySig, SpecialName
    get_InnerFormats(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.FileContentsLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Layouts.Layout FileName 'get set' : 
    System.Text.Encoding Encoding 'get set' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_Encoding(Encoding): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.FuncLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(System.String, System.Func`3[NLog.LogEventInfo,NLog.Config.LoggingConfiguration,System.Object]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
  Properties:
    System.String LayoutRendererName 'get set' : 
    System.Func`3[NLog.LogEventInfo,NLog.Config.LoggingConfiguration,System.Object] RenderMethod 'get ' : 
    System.String Format 'get set' : 
  Methods:
    get_LayoutRendererName(): PrivateScope, Public, HideBySig, SpecialName
    set_LayoutRendererName(String): PrivateScope, Public, HideBySig, SpecialName
    get_RenderMethod(): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.FuncThreadAgnosticLayoutRenderer: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.LayoutRenderers.FuncLayoutRenderer
    Void .ctor(System.String, System.Func`3[NLog.LogEventInfo,NLog.Config.LoggingConfiguration,System.Object]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.LayoutRenderers.FuncThreadSafeLayoutRenderer: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.LayoutRenderers.FuncLayoutRenderer
    Void .ctor(System.String, System.Func`3[NLog.LogEventInfo,NLog.Config.LoggingConfiguration,System.Object]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.LayoutRenderers.GarbageCollectorInfoLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.LayoutRenderers.GarbageCollectorProperty Property 'get set' : 
  Methods:
    get_Property(): PrivateScope, Public, HideBySig, SpecialName
    set_Property(GarbageCollectorProperty): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.LayoutRenderers.GarbageCollectorProperty: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.LayoutRenderers.GarbageCollectorProperty TotalMemory = 0 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.GarbageCollectorProperty TotalMemoryForceCollection = 1 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.GarbageCollectorProperty CollectionCount0 = 2 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.GarbageCollectorProperty CollectionCount1 = 3 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.GarbageCollectorProperty CollectionCount2 = 4 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.GarbageCollectorProperty MaxGeneration = 5 : Public, Static, Literal, HasDefault
Class NLog.LayoutRenderers.GdcLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
    NLog.Internal.IStringValueRenderer
  Properties:
    System.String Item 'get set' : 
    System.String Format 'get set' : 
  Methods:
    get_Item(): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.GuidLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
    NLog.Internal.IStringValueRenderer
  Properties:
    System.String Format 'get set' : 
    Boolean GeneratedFromLogEvent 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_GeneratedFromLogEvent(): PrivateScope, Public, HideBySig, SpecialName
    set_GeneratedFromLogEvent(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.HostNameLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.LayoutRenderers.IdentityLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Separator 'get set' : 
    Boolean Name 'get set' : 
    Boolean AuthType 'get set' : 
    Boolean IsAuthenticated 'get set' : 
  Methods:
    get_Separator(): PrivateScope, Public, HideBySig, SpecialName
    set_Separator(String): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AuthType(): PrivateScope, Public, HideBySig, SpecialName
    set_AuthType(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsAuthenticated(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAuthenticated(Boolean): PrivateScope, Public, HideBySig, SpecialName
Interface NLog.LayoutRenderers.INetworkInterfaceRetriever: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.Net.NetworkInformation.NetworkInterface[] AllNetworkInterfaces 'get ' : 
  Methods:
    get_AllNetworkInterfaces(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NLog.LayoutRenderers.InstallContextLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Parameter 'get set' : 
  Methods:
    get_Parameter(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameter(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.LayoutRenderer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    NLog.Internal.ISupportsInitialize
    NLog.Internal.IRenderable
    System.IDisposable
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Render(LogEventInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(LoggingConfiguration): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Assembly, HideBySig
    RenderAppendBuilder(LogEventInfo, StringBuilder): PrivateScope, Assembly, HideBySig
    Register(String): PrivateScope, Public, Static, HideBySig
    Register(String, Type): PrivateScope, Public, Static, HideBySig
    Register(String, Func`2): PrivateScope, Public, Static, HideBySig
    Register(String, Func`3): PrivateScope, Public, Static, HideBySig
    Register(FuncLayoutRenderer): PrivateScope, Public, Static, HideBySig
Class NLog.LayoutRenderers.LayoutRendererAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Config.NameBaseAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct NLog.LayoutRenderers.LevelFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.LayoutRenderers.LevelFormat Name = 0 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.LevelFormat FirstCharacter = 1 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.LevelFormat Ordinal = 2 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.LevelFormat FullName = 3 : Public, Static, Literal, HasDefault
Class NLog.LayoutRenderers.LevelLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
    NLog.Internal.IStringValueRenderer
  Properties:
    NLog.LayoutRenderers.LevelFormat Format 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(LevelFormat): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.LiteralLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.LocalIpAddressLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.LayoutRenderers.INetworkInterfaceRetriever): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Net.Sockets.AddressFamily AddressFamily 'get set' : 
  Methods:
    get_AddressFamily(): PrivateScope, Public, HideBySig, SpecialName
    set_AddressFamily(AddressFamily): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Log4JXmlEventLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Internal.Fakeables.IAppDomain): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IUsesStackTrace
    NLog.IIncludeContext
  Properties:
    Boolean IncludeNLogData 'get set' : 
    Boolean IndentXml 'get set' : 
    System.String AppInfo 'get set' : 
    Boolean IncludeCallSite 'get set' : 
    Boolean IncludeSourceInfo 'get set' : 
    Boolean IncludeMdc 'get set' : 
    Boolean IncludeMdlc 'get set' : 
    Boolean IncludeNdlc 'get set' : 
    System.String NdlcItemSeparator 'get set' : 
    Boolean IncludeAllProperties 'get set' : 
    Boolean IncludeNdc 'get set' : 
    System.String NdcItemSeparator 'get set' : 
    NLog.Layouts.Layout LoggerName 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.NLogViewerParameterInfo] Parameters 'get set' : 
  Methods:
    get_IncludeNLogData(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeNLogData(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IndentXml(): PrivateScope, Public, HideBySig, SpecialName
    set_IndentXml(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AppInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_AppInfo(String): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeCallSite(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeCallSite(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeSourceInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeSourceInfo(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeMdc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeMdc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeMdlc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeMdlc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeNdlc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeNdlc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NdlcItemSeparator(): PrivateScope, Public, HideBySig, SpecialName
    set_NdlcItemSeparator(String): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeAllProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeAllProperties(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IncludeNdc(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IncludeNdc(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NdcItemSeparator(): PrivateScope, Public, HideBySig, SpecialName
    set_NdcItemSeparator(String): PrivateScope, Public, HideBySig, SpecialName
    get_LoggerName(): PrivateScope, Public, HideBySig, SpecialName
    set_LoggerName(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Parameters(IList`1): PrivateScope, Assembly, HideBySig, SpecialName
    AppendToStringBuilder(StringBuilder, LogEventInfo): PrivateScope, Assembly, HideBySig
Class NLog.LayoutRenderers.LoggerNameLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
  Properties:
    Boolean ShortName 'get set' : 
  Methods:
    get_ShortName(): PrivateScope, Public, HideBySig, SpecialName
    set_ShortName(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.LongDateLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
  Properties:
    Boolean UniversalTime 'get set' : 
  Methods:
    get_UniversalTime(): PrivateScope, Public, HideBySig, SpecialName
    set_UniversalTime(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.MachineNameLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.LayoutRenderers.MdcLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
  Properties:
    System.String Item 'get set' : 
    System.String Format 'get set' : 
  Methods:
    get_Item(): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.MdlcLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
  Properties:
    System.String Item 'get set' : 
    System.String Format 'get set' : 
  Methods:
    get_Item(): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.MessageLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
  Properties:
    Boolean WithException 'get set' : 
    System.String ExceptionSeparator 'get set' : 
    Boolean Raw 'get set' : 
  Methods:
    get_WithException(): PrivateScope, Public, HideBySig, SpecialName
    set_WithException(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExceptionSeparator(): PrivateScope, Public, HideBySig, SpecialName
    set_ExceptionSeparator(String): PrivateScope, Public, HideBySig, SpecialName
    get_Raw(): PrivateScope, Public, HideBySig, SpecialName
    set_Raw(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.NdcLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 TopFrames 'get set' : 
    Int32 BottomFrames 'get set' : 
    System.String Separator 'get set' : 
  Methods:
    get_TopFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_TopFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BottomFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_BottomFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Separator(): PrivateScope, Public, HideBySig, SpecialName
    set_Separator(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.NdlcLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 TopFrames 'get set' : 
    Int32 BottomFrames 'get set' : 
    System.String Separator 'get set' : 
  Methods:
    get_TopFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_TopFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BottomFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_BottomFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Separator(): PrivateScope, Public, HideBySig, SpecialName
    set_Separator(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.NdlcTimingLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CurrentScope 'get set' : 
    Boolean ScopeBeginTime 'get set' : 
    System.String Format 'get set' : 
  Methods:
    get_CurrentScope(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentScope(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ScopeBeginTime(): PrivateScope, Public, HideBySig, SpecialName
    set_ScopeBeginTime(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.NetworkInterfaceRetriever: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.LayoutRenderers.INetworkInterfaceRetriever
  Properties:
    System.Net.NetworkInformation.NetworkInterface[] AllNetworkInterfaces 'get ' : 
  Methods:
    get_AllNetworkInterfaces(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.LayoutRenderers.NewLineLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.LayoutRenderers.NLogDirLayoutRenderer: AutoLayout, AnsiClass, Class, Public
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String File 'get set' : 
    System.String Dir 'get set' : 
  Methods:
    get_File(): PrivateScope, Public, HideBySig, SpecialName
    set_File(String): PrivateScope, Public, HideBySig, SpecialName
    get_Dir(): PrivateScope, Public, HideBySig, SpecialName
    set_Dir(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.PerformanceCounterLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Category 'get set' : 
    System.String Counter 'get set' : 
    System.String Instance 'get set' : 
    System.String MachineName 'get set' : 
    System.String Format 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
    get_Counter(): PrivateScope, Public, HideBySig, SpecialName
    set_Counter(String): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, HideBySig, SpecialName
    set_Instance(String): PrivateScope, Public, HideBySig, SpecialName
    get_MachineName(): PrivateScope, Public, HideBySig, SpecialName
    set_MachineName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.ProcessDirLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Internal.Fakeables.IAppEnvironment): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String File 'get set' : 
    System.String Dir 'get set' : 
  Methods:
    get_File(): PrivateScope, Public, HideBySig, SpecialName
    set_File(String): PrivateScope, Public, HideBySig, SpecialName
    get_Dir(): PrivateScope, Public, HideBySig, SpecialName
    set_Dir(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.ProcessIdLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Internal.Fakeables.IAppEnvironment): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
Class NLog.LayoutRenderers.ProcessInfoLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.LayoutRenderers.ProcessInfoProperty Property 'get set' : 
    System.String Format 'get set' : 
  Methods:
    get_Property(): PrivateScope, Public, HideBySig, SpecialName
    set_Property(ProcessInfoProperty): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.LayoutRenderers.ProcessInfoProperty: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.LayoutRenderers.ProcessInfoProperty BasePriority = 0 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty ExitCode = 1 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty ExitTime = 2 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty Handle = 3 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty HandleCount = 4 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty HasExited = 5 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty Id = 6 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty MachineName = 7 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty MainWindowHandle = 8 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty MainWindowTitle = 9 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty MaxWorkingSet = 10 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty MinWorkingSet = 11 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty NonPagedSystemMemorySize = 12 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty NonPagedSystemMemorySize64 = 13 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PagedMemorySize = 14 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PagedMemorySize64 = 15 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PagedSystemMemorySize = 16 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PagedSystemMemorySize64 = 17 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PeakPagedMemorySize = 18 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PeakPagedMemorySize64 = 19 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PeakVirtualMemorySize = 20 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PeakVirtualMemorySize64 = 21 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PeakWorkingSet = 22 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PeakWorkingSet64 = 23 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PriorityBoostEnabled = 24 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PriorityClass = 25 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PrivateMemorySize = 26 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PrivateMemorySize64 = 27 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty PrivilegedProcessorTime = 28 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty ProcessName = 29 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty Responding = 30 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty SessionId = 31 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty StartTime = 32 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty TotalProcessorTime = 33 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty UserProcessorTime = 34 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty VirtualMemorySize = 35 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty VirtualMemorySize64 = 36 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty WorkingSet = 37 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.ProcessInfoProperty WorkingSet64 = 38 : Public, Static, Literal, HasDefault
Class NLog.LayoutRenderers.ProcessNameLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Internal.Fakeables.IAppEnvironment): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean FullName 'get set' : 
  Methods:
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    set_FullName(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.ProcessTimeLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
  Properties:
    Boolean Invariant 'get set' : 
  Methods:
    get_Invariant(): PrivateScope, Public, HideBySig, SpecialName
    set_Invariant(Boolean): PrivateScope, Public, HideBySig, SpecialName
    WritetTimestamp(StringBuilder, TimeSpan, CultureInfo): PrivateScope, Assembly, Static, HideBySig
Class NLog.LayoutRenderers.QueryPerformanceCounterLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Normalize 'get set' : 
    Boolean Difference 'get set' : 
    Boolean Seconds 'get set' : 
    Int32 Precision 'get set' : 
    Boolean AlignDecimalPoint 'get set' : 
  Methods:
    get_Normalize(): PrivateScope, Public, HideBySig, SpecialName
    set_Normalize(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Difference(): PrivateScope, Public, HideBySig, SpecialName
    set_Difference(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    set_Seconds(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Precision(): PrivateScope, Public, HideBySig, SpecialName
    set_Precision(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AlignDecimalPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignDecimalPoint(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.RegistryLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Layouts.Layout Value 'get set' : 
    NLog.Layouts.Layout DefaultValue 'get set' : 
    Boolean RequireEscapingSlashesInDefaultValue 'get set' : 
    Microsoft.Win32.RegistryView View 'get set' : 
    NLog.Layouts.Layout Key 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValue(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_RequireEscapingSlashesInDefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    set_RequireEscapingSlashesInDefaultValue(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_View(): PrivateScope, Public, HideBySig, SpecialName
    set_View(RegistryView): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    set_Key(Layout): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.SequenceIdLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
Class NLog.LayoutRenderers.ShortDateLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
    NLog.Internal.IStringValueRenderer
  Properties:
    Boolean UniversalTime 'get set' : 
  Methods:
    get_UniversalTime(): PrivateScope, Public, HideBySig, SpecialName
    set_UniversalTime(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.SpecialFolderLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    SpecialFolder Folder 'get set' : 
    System.String File 'get set' : 
    System.String Dir 'get set' : 
  Methods:
    get_Folder(): PrivateScope, Public, HideBySig, SpecialName
    set_Folder(SpecialFolder): PrivateScope, Public, HideBySig, SpecialName
    get_File(): PrivateScope, Public, HideBySig, SpecialName
    set_File(String): PrivateScope, Public, HideBySig, SpecialName
    get_Dir(): PrivateScope, Public, HideBySig, SpecialName
    set_Dir(String): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.LayoutRenderers.StackTraceFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.LayoutRenderers.StackTraceFormat Raw = 0 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.StackTraceFormat Flat = 1 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.StackTraceFormat DetailedFlat = 2 : Public, Static, Literal, HasDefault
Class NLog.LayoutRenderers.StackTraceLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IUsesStackTrace
  Properties:
    NLog.LayoutRenderers.StackTraceFormat Format 'get set' : 
    Int32 TopFrames 'get set' : 
    Int32 SkipFrames 'get set' : 
    System.String Separator 'get set' : 
    Boolean CaptureStackTrace 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(StackTraceFormat): PrivateScope, Public, HideBySig, SpecialName
    get_TopFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_TopFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SkipFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Separator(): PrivateScope, Public, HideBySig, SpecialName
    set_Separator(String): PrivateScope, Public, HideBySig, SpecialName
    get_CaptureStackTrace(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureStackTrace(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.TempDirLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String File 'get set' : 
    System.String Dir 'get set' : 
  Methods:
    get_File(): PrivateScope, Public, HideBySig, SpecialName
    set_File(String): PrivateScope, Public, HideBySig, SpecialName
    get_Dir(): PrivateScope, Public, HideBySig, SpecialName
    set_Dir(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.ThreadIdLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.LayoutRenderers.ThreadNameLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
Class NLog.LayoutRenderers.TicksLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
Class NLog.LayoutRenderers.TimeLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
  Properties:
    Boolean UniversalTime 'get set' : 
    Boolean Invariant 'get set' : 
  Methods:
    get_UniversalTime(): PrivateScope, Public, HideBySig, SpecialName
    set_UniversalTime(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Invariant(): PrivateScope, Public, HideBySig, SpecialName
    set_Invariant(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.TraceActivityIdLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
Class NLog.LayoutRenderers.VariableLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.String Default 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Default(): PrivateScope, Public, HideBySig, SpecialName
    set_Default(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.WindowsIdentityLayoutRenderer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Domain 'get set' : 
    Boolean UserName 'get set' : 
  Methods:
    get_Domain(): PrivateScope, Public, HideBySig, SpecialName
    set_Domain(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UserName(): PrivateScope, Public, HideBySig, SpecialName
    set_UserName(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.CachedLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IStringValueRenderer
  Properties:
    Boolean Cached 'get set' : 
    ClearCacheOption ClearCache 'get set' : 
    NLog.Layouts.Layout CacheKey 'get set' : 
    Int32 CachedSeconds 'get set' : 
  Methods:
    get_Cached(): PrivateScope, Public, HideBySig, SpecialName
    set_Cached(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ClearCache(): PrivateScope, Public, HideBySig, SpecialName
    set_ClearCache(ClearCacheOption): PrivateScope, Public, HideBySig, SpecialName
    get_CacheKey(): PrivateScope, Public, HideBySig, SpecialName
    set_CacheKey(Layout): PrivateScope, Public, HideBySig, SpecialName
    get_CachedSeconds(): PrivateScope, Public, HideBySig, SpecialName
    set_CachedSeconds(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.FileSystemNormalizeLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBuilderBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean FSNormalize 'get set' : 
  Methods:
    get_FSNormalize(): PrivateScope, Public, HideBySig, SpecialName
    set_FSNormalize(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.JsonEncodeLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBuilderBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[System.Boolean] EscapeForwardSlashInternal : Assembly
  Properties:
    Boolean JsonEncode 'get set' : 
    Boolean EscapeUnicode 'get set' : 
    Boolean EscapeForwardSlash 'get set' : 
  Methods:
    get_JsonEncode(): PrivateScope, Public, HideBySig, SpecialName
    set_JsonEncode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeUnicode(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeUnicode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeForwardSlash(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeForwardSlash(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.LeftLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get set' : 
    Int32 Truncate 'get set' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Truncate(): PrivateScope, Public, HideBySig, SpecialName
    set_Truncate(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.LowercaseLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBuilderBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Lowercase 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    get_Lowercase(): PrivateScope, Public, HideBySig, SpecialName
    set_Lowercase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.NoRawValueLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean NoRawValue 'get set' : 
  Methods:
    get_NoRawValue(): PrivateScope, Public, HideBySig, SpecialName
    set_NoRawValue(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.ObjectPathRendererWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
  Properties:
    System.String Path 'get set' : 
    System.String ObjectPath 'get set' : 
    System.String Format 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    set_Path(String): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectPath(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectPath(String): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    TryGetRawValue(LogEventInfo, Object&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.LayoutRenderers.Wrappers.OnExceptionLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.LayoutRenderers.Wrappers.OnHasPropertiesLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct NLog.LayoutRenderers.Wrappers.PaddingHorizontalAlignment: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.LayoutRenderers.Wrappers.PaddingHorizontalAlignment Left = 0 : Public, Static, Literal, HasDefault
    NLog.LayoutRenderers.Wrappers.PaddingHorizontalAlignment Right = 1 : Public, Static, Literal, HasDefault
Class NLog.LayoutRenderers.Wrappers.PaddingLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Padding 'get set' : 
    Char PadCharacter 'get set' : 
    Boolean FixedLength 'get set' : 
    NLog.LayoutRenderers.Wrappers.PaddingHorizontalAlignment AlignmentOnTruncation 'get set' : 
  Methods:
    get_Padding(): PrivateScope, Public, HideBySig, SpecialName
    set_Padding(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PadCharacter(): PrivateScope, Public, HideBySig, SpecialName
    set_PadCharacter(Char): PrivateScope, Public, HideBySig, SpecialName
    get_FixedLength(): PrivateScope, Public, HideBySig, SpecialName
    set_FixedLength(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AlignmentOnTruncation(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignmentOnTruncation(PaddingHorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.ReplaceLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SearchFor 'get set' : 
    Boolean Regex 'get set' : 
    System.String ReplaceWith 'get set' : 
    System.String ReplaceGroupName 'get set' : 
    Boolean IgnoreCase 'get set' : 
    Boolean WholeWords 'get set' : 
    Boolean CompileRegex 'get set' : 
  Methods:
    get_SearchFor(): PrivateScope, Public, HideBySig, SpecialName
    set_SearchFor(String): PrivateScope, Public, HideBySig, SpecialName
    get_Regex(): PrivateScope, Public, HideBySig, SpecialName
    set_Regex(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReplaceWith(): PrivateScope, Public, HideBySig, SpecialName
    set_ReplaceWith(String): PrivateScope, Public, HideBySig, SpecialName
    get_ReplaceGroupName(): PrivateScope, Public, HideBySig, SpecialName
    set_ReplaceGroupName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WholeWords(): PrivateScope, Public, HideBySig, SpecialName
    set_WholeWords(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CompileRegex(): PrivateScope, Public, HideBySig, SpecialName
    set_CompileRegex(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ReplaceNamedGroup(String, String, String, Match): PrivateScope, Public, Static, HideBySig (Obsolete)
    ReplaceNamedGroup(String, String, Match): PrivateScope, Assembly, Static, HideBySig
Class NLog.LayoutRenderers.Wrappers.ReplaceNewLinesLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBuilderBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Replacement 'get set' : 
  Methods:
    get_Replacement(): PrivateScope, Public, HideBySig, SpecialName
    set_Replacement(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.RightLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get set' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.Rot13LayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBuilderBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Layouts.Layout Text 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(Layout): PrivateScope, Public, HideBySig, SpecialName
    DecodeRot13(String): PrivateScope, Public, Static, HideBySig
    DecodeRot13(StringBuilder, Int32): PrivateScope, Assembly, Static, HideBySig
Class NLog.LayoutRenderers.Wrappers.SubstringLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Start 'get set' : 
    System.Nullable`1[System.Int32] Length 'get set' : 
  Methods:
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    set_Start(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.TrimWhiteSpaceLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBuilderBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean TrimWhiteSpace 'get set' : 
  Methods:
    get_TrimWhiteSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_TrimWhiteSpace(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.UppercaseLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBuilderBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Uppercase 'get set' : 
    System.Globalization.CultureInfo Culture 'get set' : 
  Methods:
    get_Uppercase(): PrivateScope, Public, HideBySig, SpecialName
    set_Uppercase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.UrlEncodeLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean SpaceAsPlus 'get set' : 
    Boolean EscapeDataRfc3986 'get set' : 
    Boolean EscapeDataNLogLegacy 'get set' : 
  Methods:
    get_SpaceAsPlus(): PrivateScope, Public, HideBySig, SpecialName
    set_SpaceAsPlus(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeDataRfc3986(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeDataRfc3986(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EscapeDataNLogLegacy(): PrivateScope, Public, HideBySig, SpecialName
    set_EscapeDataNLogLegacy(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.WhenEmptyLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBuilderBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
    NLog.Internal.IStringValueRenderer
  Properties:
    NLog.Layouts.Layout WhenEmpty 'get set' : 
  Methods:
    get_WhenEmpty(): PrivateScope, Public, HideBySig, SpecialName
    set_WhenEmpty(Layout): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.WhenLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBuilderBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRawValue
  Properties:
    NLog.Conditions.ConditionExpression When 'get set' : 
    NLog.Layouts.Layout Else 'get set' : 
  Methods:
    get_When(): PrivateScope, Public, HideBySig, SpecialName
    set_When(ConditionExpression): PrivateScope, Public, HideBySig, SpecialName
    get_Else(): PrivateScope, Public, HideBySig, SpecialName
    set_Else(Layout): PrivateScope, Public, HideBySig, SpecialName
    TryGetRawValue(LogEventInfo, Object&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.LayoutRenderers.Wrappers.WrapLineLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 WrapLine 'get set' : 
  Methods:
    get_WrapLine(): PrivateScope, Public, HideBySig, SpecialName
    set_WrapLine(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.LayoutRenderers.LayoutRenderer
  Properties:
    NLog.Layouts.Layout Inner 'get set' : 
  Methods:
    get_Inner(): PrivateScope, Public, HideBySig, SpecialName
    set_Inner(Layout): PrivateScope, Public, HideBySig, SpecialName
Class NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBuilderBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
Class NLog.LayoutRenderers.Wrappers.XmlEncodeLayoutRendererWrapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.LayoutRenderers.Wrappers.WrapperLayoutRendererBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean XmlEncode 'get set' : 
    Boolean XmlEncodeNewlines 'get set' : 
  Methods:
    get_XmlEncode(): PrivateScope, Public, HideBySig, SpecialName
    set_XmlEncode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_XmlEncodeNewlines(): PrivateScope, Public, HideBySig, SpecialName
    set_XmlEncodeNewlines(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.Internal.AppendBuilderCreator: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Text.StringBuilder, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Text.StringBuilder Builder 'get ' : 
  Methods:
    get_Builder(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.ArrayHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Empty(): PrivateScope, Assembly, Static, HideBySig
Class NLog.Internal.AssemblyHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    LoadFromPath(String, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LoadFromName(String): PrivateScope, Public, Static, HideBySig
    GetAssemblyFileLocation(Assembly): PrivateScope, Public, Static, HideBySig
Struct NLog.Internal.AsyncHelpersTask: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Threading.WaitCallback): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Threading.WaitCallback AsyncDelegate : Public, InitOnly
Class NLog.Internal.AsyncOperationCounter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    BeginOperation(): PrivateScope, Public, HideBySig
    CompleteOperation(Exception): PrivateScope, Public, HideBySig
    RegisterCompletionNotification(AsyncContinuation): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
Class NLog.Internal.CallSiteInformation: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Diagnostics.StackFrame UserStackFrame 'get ' : 
    Int32 UserStackFrameNumber 'get set' : 
    System.Nullable`1[System.Int32] UserStackFrameNumberLegacy 'get set' : 
    System.Diagnostics.StackTrace StackTrace 'get set' : 
    System.String CallerClassName 'get set' : 
    System.String CallerMemberName 'get set' : 
    System.String CallerFilePath 'get set' : 
    System.Nullable`1[System.Int32] CallerLineNumber 'get set' : 
  Methods:
    SetStackTrace(StackTrace, Nullable`1(Optional, HasDefault), Type(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetCallerInfo(String, String, String, Int32): PrivateScope, Public, HideBySig
    get_UserStackFrame(): PrivateScope, Public, HideBySig, SpecialName
    get_UserStackFrameNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_UserStackFrameNumberLegacy(): PrivateScope, Public, HideBySig, SpecialName
    get_StackTrace(): PrivateScope, Public, HideBySig, SpecialName
    GetCallerStackFrameMethod(Int32): PrivateScope, Public, HideBySig
    GetCallerClassName(MethodBase, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig
    GetCallerMemberName(MethodBase, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig
    GetCallerFilePath(Int32): PrivateScope, Public, HideBySig
    GetCallerLineNumber(Int32): PrivateScope, Public, HideBySig
    get_CallerClassName(): PrivateScope, Public, HideBySig, SpecialName
    get_CallerMemberName(): PrivateScope, Public, HideBySig, SpecialName
    get_CallerFilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_CallerLineNumber(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Internal.CollectionExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Filter(IList`1, TState, Func`3): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.ConfigurationManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IConfigurationManager
  Properties:
    System.Collections.Specialized.NameValueCollection AppSettings 'get ' : 
  Methods:
    get_AppSettings(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Internal.ConfigurationManager2: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IConfigurationManager2
    NLog.Internal.IConfigurationManager
  Properties:
    System.Collections.Specialized.NameValueCollection AppSettings 'get ' : 
  Methods:
    LookupConnectionString(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AppSettings(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Internal.DictionaryAdapter`2[TKey,TValue]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(System.Collections.Generic.IDictionary`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IDictionary
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    System.Collections.ICollection Values 'get ' : 
    Int32 Count 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Collections.ICollection Keys 'get ' : 
    System.Object Item [System.Object] 'get set' : 
  Methods:
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Array, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Internal.DictionaryEntryEnumerable: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Collections.DictionaryEntry]
    System.Collections.IEnumerable
  Methods:
    GetEnumerator(): PrivateScope, Public, HideBySig
Class NLog.Internal.EncodingHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Byte[] Utf8BOM : Assembly, Static, InitOnly
Class NLog.Internal.EnvironmentHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.String NewLine 'get ' : 
  Methods:
    get_NewLine(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    GetMachineName(): PrivateScope, Assembly, Static, HideBySig
    GetSafeEnvironmentVariable(String): PrivateScope, Assembly, Static, HideBySig
Class NLog.Internal.ExceptionHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    MarkAsLoggedToInternalLogger(Exception): PrivateScope, Public, Static, HideBySig
    IsLoggedToInternalLogger(Exception): PrivateScope, Public, Static, HideBySig
    MustBeRethrown(Exception, IInternalLoggerContext(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MustBeRethrownImmediately(Exception): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.FactoryHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Methods:
    CreateInstance(Type): PrivateScope, Assembly, Static, HideBySig
Class NLog.Internal.FileInfoExt: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetLastWriteTimeUtc(FileInfo): PrivateScope, Public, Static, HideBySig
    GetCreationTimeUtc(FileInfo): PrivateScope, Public, Static, HideBySig
    LookupValidFileCreationTimeUtc(FileInfo): PrivateScope, Public, Static, HideBySig
    LookupValidFileCreationTimeUtc(FileInfo, Nullable`1): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.FileInfoHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    LookupValidFileCreationTimeUtc(T, Func`2, Func`2, Func`2(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
Class NLog.Internal.FilePathLayout: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.Layouts.Layout, Boolean, NLog.Targets.FilePathKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.IRenderable
  Methods:
    GetLayout(): PrivateScope, Public, HideBySig
    Render(LogEventInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RenderWithBuilder(LogEventInfo, StringBuilder(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    DetectFilePathKind(Layout): PrivateScope, Assembly, Static, HideBySig
    DetectFilePathKind(String, Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
Class NLog.Internal.FormatHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ConvertToString(Object, IFormatProvider): PrivateScope, Assembly, Static, HideBySig
    TryFormatToString(Object, String, IFormatProvider): PrivateScope, Assembly, Static, HideBySig
Interface NLog.Internal.IConfigurationManager: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Collections.Specialized.NameValueCollection AppSettings 'get ' : 
  Methods:
    get_AppSettings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Internal.IConfigurationManager2: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    NLog.Internal.IConfigurationManager
  Methods:
    LookupConnectionString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Internal.ILogMessageFormatter: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    FormatMessage(LogEventInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HasProperties(LogEventInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AppendFormattedMessage(LogEventInfo, StringBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Internal.IRawValue: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    TryGetRawValue(LogEventInfo, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Internal.IRenderable: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Render(LogEventInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Internal.ISmtpClient: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    System.Net.Mail.SmtpDeliveryMethod DeliveryMethod 'get set' : 
    System.String Host 'get set' : 
    Int32 Port 'get set' : 
    Int32 Timeout 'get set' : 
    System.Net.ICredentialsByHost Credentials 'get set' : 
    Boolean EnableSsl 'get set' : 
    System.String PickupDirectoryLocation 'get set' : 
  Methods:
    get_DeliveryMethod(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DeliveryMethod(SmtpDeliveryMethod): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Host(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Host(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Port(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Port(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Timeout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Timeout(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Credentials(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Credentials(ICredentialsByHost): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EnableSsl(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_EnableSsl(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Send(MailMessage): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_PickupDirectoryLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PickupDirectoryLocation(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Internal.IStringValueRenderer: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetFormattedString(LogEventInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Internal.ISupportsInitialize: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Initialize(LoggingConfiguration): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Internal.IUsesStackTrace: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NLog.Config.StackTraceUsage StackTraceUsage 'get ' : 
  Methods:
    get_StackTraceUsage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NLog.Internal.LayoutHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    RenderShort(Layout, LogEventInfo, Int16, String): PrivateScope, Public, Static, HideBySig
    RenderInt(Layout, LogEventInfo, Int32, String): PrivateScope, Public, Static, HideBySig
    RenderBool(Layout, LogEventInfo, Boolean, String): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.LoggerConfiguration: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.Internal.TargetWithFilterChain[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ExceptionLoggingOldStyle 'get ' :  (Obsolete)
  Methods:
    get_ExceptionLoggingOldStyle(): PrivateScope, Public, HideBySig, SpecialName
    GetTargetsForLevel(LogLevel): PrivateScope, Public, HideBySig
Class NLog.Internal.LogMessageTemplateFormatter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Interfaces:
    NLog.Internal.ILogMessageFormatter
  Fields:
    NLog.Internal.LogMessageTemplateFormatter DefaultAuto : Public, Static, InitOnly
    NLog.Internal.LogMessageTemplateFormatter Default : Public, Static, InitOnly
    NLog.Internal.LogMessageTemplateFormatter DefaultAutoSingleTarget : Public, Static, InitOnly
  Properties:
    NLog.LogMessageFormatter MessageFormatter 'get ' : 
  Methods:
    get_MessageFormatter(): PrivateScope, Public, HideBySig, SpecialName
    HasProperties(LogEventInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AppendFormattedMessage(LogEventInfo, StringBuilder): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FormatMessage(LogEventInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.MruCache`2[TKey,TValue]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    TryAddValue(TKey, TValue): PrivateScope, Public, HideBySig
    TryGetValue(TKey, TValue&(Out)): PrivateScope, Public, HideBySig
Class NLog.Internal.MultiFileWatcher: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.NotifyFilters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.IO.NotifyFilters NotifyFilters 'get set' : 
  Events:
    System.IO.FileSystemEventHandler FileChanged: 
  Methods:
    get_NotifyFilters(): PrivateScope, Public, HideBySig, SpecialName
    set_NotifyFilters(NotifyFilters): PrivateScope, Public, HideBySig, SpecialName
    add_FileChanged(FileSystemEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_FileChanged(FileSystemEventHandler): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StopWatching(): PrivateScope, Public, HideBySig
    StopWatching(String): PrivateScope, Public, HideBySig
    Watch(IEnumerable`1): PrivateScope, Public, HideBySig
    Watch(String): PrivateScope, Assembly, HideBySig
Class NLog.Internal.MySmtpClient: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Net.Mail.SmtpClient
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.ISmtpClient
Class NLog.Internal.NativeMethods: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    LogonUser(String, String, String, Int32, Int32, IntPtr&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CloseHandle(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DuplicateToken(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    OutputDebugString(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    QueryPerformanceCounter(UInt64&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    QueryPerformanceFrequency(UInt64&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetCurrentProcessId(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetModuleFileName(IntPtr(In), StringBuilder(Out), Int32(In, HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
Class NLog.Internal.ObjectGraphScanner: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    FindReachableObjects(Boolean, Object[]): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.ObjectHandleSerializer: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Unwrap(): PrivateScope, Public, HideBySig
Class NLog.Internal.ObjectPropertyHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ObjectPath 'get set' : 
  Methods:
    get_ObjectPath(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectPath(String): PrivateScope, Public, HideBySig, SpecialName
    TryGetObjectProperty(Object, Object&(Out)): PrivateScope, Public, HideBySig
Class NLog.Internal.ObjectReflectionCache: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.IObjectTypeTransformer
  Properties:
    NLog.IObjectTypeTransformer Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    LookupObjectProperties(Object): PrivateScope, Public, HideBySig
    TryLookupExpandoObject(Object, ObjectPropertyList&(Out)): PrivateScope, Public, HideBySig
Class NLog.Internal.PathHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CombinePaths(String, String, String): PrivateScope, Assembly, Static, HideBySig
    TrimDirectorySeparators(String): PrivateScope, Public, Static, HideBySig
    IsTempDir(String, String): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.PlatformDetector: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    NLog.Internal.RuntimeOS CurrentOS 'get ' : 
    Boolean IsWin32 'get ' : 
    Boolean IsUnix 'get ' : 
    Boolean IsMono 'get ' : 
    Boolean SupportsSharableMutex 'get ' : 
  Methods:
    get_CurrentOS(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsWin32(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsUnix(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsMono(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SupportsSharableMutex(): PrivateScope, Public, Static, HideBySig, SpecialName
Class NLog.Internal.PropertiesDictionary: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IList`1[NLog.MessageTemplates.MessageTemplateParameter]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[System.Object,System.Object]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[System.Object,System.Object]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.Object,System.Object]]
    System.Collections.IEnumerable
    System.Collections.Generic.IEnumerable`1[NLog.MessageTemplates.MessageTemplateParameter]
  Properties:
    System.Collections.IDictionary EventContext 'get ' : 
    System.Collections.Generic.IList`1[NLog.MessageTemplates.MessageTemplateParameter] MessageProperties 'get set' : 
    System.Object Item [System.Object] 'get set' : 
    System.Collections.Generic.ICollection`1[System.Object] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[System.Object] Values 'get ' : 
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    get_EventContext(): PrivateScope, Public, HideBySig, SpecialName
    get_MessageProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_MessageProperties(IList`1): PrivateScope, Assembly, HideBySig, SpecialName
    get_Item(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(KeyValuePair`2[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(Object, Object&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.PropertyHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    SetPropertyFromString(Object, String, String, ConfigurationItemFactory): PrivateScope, Assembly, Static, HideBySig
    TryGetPropertyInfo(Object, String, PropertyInfo&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetArrayItemType(PropertyInfo): PrivateScope, Assembly, Static, HideBySig
    IsConfigurationItemType(Type): PrivateScope, Assembly, Static, HideBySig
    GetAllConfigItemProperties(Type): PrivateScope, Assembly, Static, HideBySig
    CheckRequiredParameters(Object): PrivateScope, Assembly, Static, HideBySig
    IsSimplePropertyType(Type): PrivateScope, Assembly, Static, HideBySig
Class NLog.Internal.PropertySetter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Methods:
    CreatePropertySetter(Type, String): PrivateScope, Public, Static, HideBySig
    SetPropertyValue(Object, Object): PrivateScope, Public, HideBySig
Class NLog.Internal.ReflectionHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    SafeGetTypes(Assembly): PrivateScope, Public, Static, HideBySig
    IsStaticClass(Type): PrivateScope, Public, Static, HideBySig
    CreateLateBoundMethod(MethodInfo): PrivateScope, Public, Static, HideBySig
    CreateLateBoundMethodSingle(MethodInfo): PrivateScope, Public, Static, HideBySig
    IsEnum(Type): PrivateScope, Public, Static, HideBySig
    IsPrimitive(Type): PrivateScope, Public, Static, HideBySig
    IsValueType(Type): PrivateScope, Public, Static, HideBySig
    IsSealed(Type): PrivateScope, Public, Static, HideBySig
    IsAbstract(Type): PrivateScope, Public, Static, HideBySig
    IsClass(Type): PrivateScope, Public, Static, HideBySig
    IsGenericType(Type): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(Type): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(PropertyInfo): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(Assembly): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetAssembly(Type): PrivateScope, Public, Static, HideBySig
    IsValidPublicProperty(PropertyInfo): PrivateScope, Public, Static, HideBySig
    GetPropertyValue(PropertyInfo, Object): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.RegexHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SearchText 'get set' : 
    System.String RegexPattern 'get set' : 
    Boolean CompileRegex 'get set' : 
    Boolean WholeWords 'get set' : 
    Boolean IgnoreCase 'get set' : 
    System.Text.RegularExpressions.Regex Regex 'get ' : 
  Methods:
    get_SearchText(): PrivateScope, Public, HideBySig, SpecialName
    set_SearchText(String): PrivateScope, Public, HideBySig, SpecialName
    get_RegexPattern(): PrivateScope, Public, HideBySig, SpecialName
    set_RegexPattern(String): PrivateScope, Public, HideBySig, SpecialName
    get_CompileRegex(): PrivateScope, Public, HideBySig, SpecialName
    set_CompileRegex(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WholeWords(): PrivateScope, Public, HideBySig, SpecialName
    set_WholeWords(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Regex(): PrivateScope, Public, HideBySig, SpecialName
    Replace(String, String): PrivateScope, Public, HideBySig
    Matches(String): PrivateScope, Public, HideBySig
Class NLog.Internal.ReusableAsyncLogEventList: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.ReusableObjectCreator`1[System.Collections.Generic.IList`1[NLog.Common.AsyncLogEventInfo]]
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Internal.ReusableBufferCreator: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.ReusableObjectCreator`1[System.Char[]]
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Internal.ReusableBuilderCreator: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.ReusableObjectCreator`1[System.Text.StringBuilder]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Internal.ReusableObjectCreator`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T,  ReferenceType
  Fields:
    LockOject None : Public, InitOnly
  Methods:
    Allocate(): PrivateScope, Public, HideBySig
Class NLog.Internal.ReusableStreamCreator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Internal.ReusableObjectCreator`1[System.IO.MemoryStream]
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
Struct NLog.Internal.RuntimeOS: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Internal.RuntimeOS Unknown = 0 : Public, Static, Literal, HasDefault
    NLog.Internal.RuntimeOS Linux = 1 : Public, Static, Literal, HasDefault
    NLog.Internal.RuntimeOS Windows = 2 : Public, Static, Literal, HasDefault
    NLog.Internal.RuntimeOS WindowsNT = 3 : Public, Static, Literal, HasDefault
    NLog.Internal.RuntimeOS MacOSX = 4 : Public, Static, Literal, HasDefault
Class NLog.Internal.SetupBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.LogFactory): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.ISetupBuilder
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Internal.SetupExtensionsBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.LogFactory): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.ISetupExtensionsBuilder
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Internal.SetupInternalLoggerBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.LogFactory): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.ISetupInternalLoggerBuilder
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Internal.SetupLoadConfigurationBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.LogFactory, NLog.Config.LoggingConfiguration): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.ISetupLoadConfigurationBuilder
  Fields:
    NLog.Config.LoggingConfiguration _configuration : Assembly
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
    NLog.Config.LoggingConfiguration Configuration 'get set' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Configuration(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Configuration(LoggingConfiguration): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Internal.SetupSerializationBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.LogFactory): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.ISetupSerializationBuilder
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Internal.SimpleStringReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Position 'get set' : 
    System.String Text 'get ' : 
  Methods:
    get_Position(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Position(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Text(): PrivateScope, Assembly, HideBySig, SpecialName
    Peek(): PrivateScope, Assembly, HideBySig
    Read(): PrivateScope, Assembly, HideBySig
    Substring(Int32, Int32): PrivateScope, Assembly, HideBySig
    ReadUntilMatch(Func`2): PrivateScope, Assembly, HideBySig
Class NLog.Internal.SingleCallContinuation: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.Common.AsyncContinuation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.Common.AsyncContinuation Completed : Assembly, Static, InitOnly
  Methods:
    Function(Exception): PrivateScope, Public, HideBySig
Struct NLog.Internal.SingleItemOptimizedHashSet`1[T]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(T, NLog.Internal.SingleItemOptimizedHashSet`1[T], System.Collections.Generic.IEqualityComparer`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.SortHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    BucketSort(IEnumerable`1, KeySelector`2): PrivateScope, Public, Static, HideBySig
    BucketSort(IList`1, KeySelector`2): PrivateScope, Public, Static, HideBySig
    BucketSort(IList`1, KeySelector`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.StackTraceUsageUtils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Max(StackTraceUsage, StackTraceUsage): PrivateScope, Assembly, Static, HideBySig
    GetFrameCount(StackTrace): PrivateScope, Public, Static, HideBySig
    GetStackFrameMethodName(MethodBase, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    GetStackFrameMethodClassName(MethodBase, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    GetClassFullName(): PrivateScope, Public, Static, HideBySig
    GetClassFullName(StackFrame): PrivateScope, Public, Static, HideBySig
    LookupAssemblyFromStackFrame(StackFrame): PrivateScope, Public, Static, HideBySig
    LookupClassNameFromStackFrame(StackFrame): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.StreamHelpers: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    CopyAndSkipBom(Stream, Stream, Encoding): PrivateScope, Public, Static, HideBySig
    Copy(Stream, Stream): PrivateScope, Public, Static, HideBySig
    CopyWithOffset(Stream, Stream, Int32): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.StringBuilderExt: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    AppendFormattedValue(StringBuilder, Object, String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    AppendInvariant(StringBuilder, Int32): PrivateScope, Public, Static, HideBySig
    AppendInvariant(StringBuilder, UInt32): PrivateScope, Public, Static, HideBySig
    AppendXmlDateTimeRoundTrip(StringBuilder, DateTime): PrivateScope, Public, Static, HideBySig
    ClearBuilder(StringBuilder): PrivateScope, Public, Static, HideBySig
    CopyToStream(StringBuilder, MemoryStream, Encoding, Char[]): PrivateScope, Public, Static, HideBySig
    CopyToBuffer(StringBuilder, Char[], Int32): PrivateScope, Public, Static, HideBySig
    CopyTo(StringBuilder, StringBuilder): PrivateScope, Public, Static, HideBySig
    IndexOf(StringBuilder, Char, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IndexOfAny(StringBuilder, Char[], Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EqualTo(StringBuilder, StringBuilder): PrivateScope, Public, Static, HideBySig
    EqualTo(StringBuilder, String): PrivateScope, Public, Static, HideBySig
    Append2DigitsZeroPadded(StringBuilder, Int32): PrivateScope, Assembly, Static, HideBySig
    Append4DigitsZeroPadded(StringBuilder, Int32): PrivateScope, Assembly, Static, HideBySig
    AppendIntegerAsString(StringBuilder, IConvertible, TypeCode): PrivateScope, Assembly, Static, HideBySig
    TrimRight(StringBuilder, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.StringBuilderPool: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Acquire(): PrivateScope, Public, HideBySig
Class NLog.Internal.StringHelpers: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsNullOrWhiteSpace(String): PrivateScope, Assembly, Static, HideBySig
    SplitAndTrimTokens(String, Char): PrivateScope, Assembly, Static, HideBySig
Class NLog.Internal.StringSplitter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    SplitQuoted(String, Char, Char, Char): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.TargetWithFilterChain: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.Targets.Target, System.Collections.Generic.IList`1[NLog.Filters.Filter], NLog.Filters.FilterResult): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Targets.Target Target 'get ' : 
    System.Collections.Generic.IList`1[NLog.Filters.Filter] FilterChain 'get ' : 
    NLog.Filters.FilterResult DefaultResult 'get ' : 
    NLog.Internal.TargetWithFilterChain NextInChain 'get set' : 
  Methods:
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    get_FilterChain(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultResult(): PrivateScope, Public, HideBySig, SpecialName
    get_NextInChain(): PrivateScope, Public, HideBySig, SpecialName
    set_NextInChain(TargetWithFilterChain): PrivateScope, Public, HideBySig, SpecialName
    GetStackTraceUsage(): PrivateScope, Public, HideBySig
    PrecalculateStackTraceUsage(): PrivateScope, Assembly, HideBySig
Class NLog.Internal.ThreadLocalStorageHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    AllocateDataSlot(): PrivateScope, Public, Static, HideBySig
    GetDataForSlot(Object, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.ThreadSafeDictionary`2[TKey,TValue]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEqualityComparer`1[TKey]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.Internal.ThreadSafeDictionary`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[TKey,TValue]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.IEnumerable
  Properties:
    TValue Item [TKey] 'get set' : 
    System.Collections.Generic.ICollection`1[TKey] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[TValue] Values 'get ' : 
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    get_Item(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(KeyValuePair`2[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyFrom(IDictionary`2): PrivateScope, Public, HideBySig
    Remove(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(TKey, TValue&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, HideBySig
Class NLog.Internal.TimeoutContinuation: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(NLog.Common.AsyncContinuation, System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Function(Exception): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.TransformedLayout: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Interfaces:
    NLog.Internal.IRenderable
    NLog.Internal.ISupportsInitialize
  Properties:
    NLog.Layouts.Layout Layout 'get ' : 
  Methods:
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    Render(LogEventInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Create(Layout, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    Initialize(LoggingConfiguration): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.UrlHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    EscapeDataEncode(String, StringBuilder, EscapeEncodingOptions): PrivateScope, Public, Static, HideBySig
    GetUriStringEncodingFlags(Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
Class NLog.Internal.Win32FileNativeMethods: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 FILE_SHARE_READ = 1 : Public, Static, Literal, HasDefault
    Int32 FILE_SHARE_WRITE = 2 : Public, Static, Literal, HasDefault
    Int32 FILE_SHARE_DELETE = 4 : Public, Static, Literal, HasDefault
  Methods:
    CreateFile(String, FileAccess, Int32, IntPtr, CreationDisposition, Win32FileAttributes, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class NLog.Internal.XmlHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    EscapeXmlString(String, Boolean, StringBuilder(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    XmlConvertToStringSafe(Object): PrivateScope, Assembly, Static, HideBySig
    XmlConvertToString(Object): PrivateScope, Assembly, Static, HideBySig
    XmlConvertToElementName(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    XmlConvertToString(IConvertible, TypeCode, Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    WriteAttributeSafeString(XmlWriter, String, String, String, String): PrivateScope, Public, Static, HideBySig
    WriteAttributeSafeString(XmlWriter, String, String): PrivateScope, Public, Static, HideBySig
    WriteElementSafeString(XmlWriter, String, String, String, String): PrivateScope, Public, Static, HideBySig
    WriteSafeCData(XmlWriter, String): PrivateScope, Public, Static, HideBySig
    <XmlConvertToElementName>g__CreateStringBuilder|8_0(Int32, <>c__DisplayClass8_0&): PrivateScope, Assembly, Static, HideBySig
Class NLog.Internal.Xamarin.PreserveAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean AllMembers 'get ' : 
    Boolean Conditional 'get ' : 
  Methods:
    get_AllMembers(): PrivateScope, Public, HideBySig, SpecialName
    get_Conditional(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Internal.NetworkSenders.HttpNetworkSender: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.NetworkSenders.QueuedNetworkSender
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Internal.NetworkSenders.IWebRequestFactory HttpRequestFactory 'get set' : 
  Methods:
    get_HttpRequestFactory(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HttpRequestFactory(IWebRequestFactory): PrivateScope, Assembly, HideBySig, SpecialName
Interface NLog.Internal.NetworkSenders.INetworkSenderFactory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Create(String, Int32, SslProtocols, TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Internal.NetworkSenders.ISocket: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    ConnectAsync(SocketAsyncEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SendAsync(SocketAsyncEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SendToAsync(SocketAsyncEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Internal.NetworkSenders.IWebRequestFactory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    CreateWebRequest(Uri): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.Internal.NetworkSenders.WebRequestFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.NetworkSenders.IWebRequestFactory
  Properties:
    NLog.Internal.NetworkSenders.IWebRequestFactory Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    CreateWebRequest(Uri): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.NetworkSenders.NetworkSender: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    System.String Address 'get set' : 
    Int32 LastSendTime 'get set' : 
  Methods:
    get_Address(): PrivateScope, Public, HideBySig, SpecialName
    get_LastSendTime(): PrivateScope, Public, HideBySig, SpecialName
    Initialize(): PrivateScope, Public, HideBySig
    Close(AsyncContinuation): PrivateScope, Public, HideBySig
    FlushAsync(AsyncContinuation): PrivateScope, Public, HideBySig
    Send(Byte[], Int32, Int32, AsyncContinuation): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CheckSocket(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.NetworkSenders.NetworkSenderFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.NetworkSenders.INetworkSenderFactory
  Fields:
    NLog.Internal.NetworkSenders.INetworkSenderFactory Default : Public, Static, InitOnly
  Methods:
    Create(String, Int32, SslProtocols, TimeSpan): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.NetworkSenders.QueuedNetworkSender: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :NLog.Internal.NetworkSenders.NetworkSender
  Properties:
    Int32 MaxQueueSize 'get set' : 
  Methods:
    get_MaxQueueSize(): PrivateScope, Assembly, HideBySig, SpecialName
    set_MaxQueueSize(Int32): PrivateScope, Assembly, HideBySig, SpecialName
Class NLog.Internal.NetworkSenders.SocketProxy: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.NetworkSenders.ISocket
    System.IDisposable
  Properties:
    System.Net.Sockets.Socket UnderlyingSocket 'get ' : 
  Methods:
    get_UnderlyingSocket(): PrivateScope, Public, HideBySig, SpecialName
    Close(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ConnectAsync(SocketAsyncEventArgs): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SendAsync(SocketAsyncEventArgs): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SendToAsync(SocketAsyncEventArgs): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.NetworkSenders.SslSocketProxy: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.Security.Authentication.SslProtocols, NLog.Internal.NetworkSenders.SocketProxy): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.NetworkSenders.ISocket
    System.IDisposable
  Methods:
    Close(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ConnectAsync(SocketAsyncEventArgs): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SendAsync(SocketAsyncEventArgs): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SendToAsync(SocketAsyncEventArgs): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.NetworkSenders.TcpNetworkSender: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.NetworkSenders.QueuedNetworkSender
    Void .ctor(System.String, System.Net.Sockets.AddressFamily): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Net.Sockets.AddressFamily AddressFamily 'get set' : 
    System.Security.Authentication.SslProtocols SslProtocols 'get set' : 
    System.TimeSpan KeepAliveTime 'get set' : 
  Methods:
    get_AddressFamily(): PrivateScope, Assembly, HideBySig, SpecialName
    set_AddressFamily(AddressFamily): PrivateScope, Assembly, HideBySig, SpecialName
    get_SslProtocols(): PrivateScope, Assembly, HideBySig, SpecialName
    set_SslProtocols(SslProtocols): PrivateScope, Assembly, HideBySig, SpecialName
    get_KeepAliveTime(): PrivateScope, Assembly, HideBySig, SpecialName
    set_KeepAliveTime(TimeSpan): PrivateScope, Assembly, HideBySig, SpecialName
    CheckSocket(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Internal.NetworkSenders.UdpNetworkSender: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.NetworkSenders.NetworkSender
    Void .ctor(System.String, System.Net.Sockets.AddressFamily): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Net.Sockets.AddressFamily AddressFamily 'get set' : 
  Methods:
    get_AddressFamily(): PrivateScope, Assembly, HideBySig, SpecialName
    set_AddressFamily(AddressFamily): PrivateScope, Assembly, HideBySig, SpecialName
    CheckSocket(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Internal.FileAppenders.BaseFileAppender: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    System.String FileName 'get ' : 
    System.DateTime CreationTimeUtc 'get set' : 
    System.DateTime CreationTimeSource 'get set' : 
    System.DateTime OpenTimeUtc 'get set' : 
    NLog.Internal.FileAppenders.ICreateFileParameters CreateFileParameters 'get set' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_CreationTimeUtc(): PrivateScope, Public, HideBySig, SpecialName
    set_CreationTimeUtc(DateTime): PrivateScope, Assembly, HideBySig, SpecialName
    get_CreationTimeSource(): PrivateScope, Public, HideBySig, SpecialName
    get_OpenTimeUtc(): PrivateScope, Public, HideBySig, SpecialName
    get_CreateFileParameters(): PrivateScope, Public, HideBySig, SpecialName
    Write(Byte[]): PrivateScope, Public, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFileCreationTimeUtc(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFileLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.FileAppenders.BaseMutexFileAppender: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :NLog.Internal.FileAppenders.BaseFileAppender
  Properties:
    System.Threading.Mutex ArchiveMutex 'get set' : 
  Methods:
    get_ArchiveMutex(): PrivateScope, Public, HideBySig, SpecialName
    ForceCreateSharableMutex(String): PrivateScope, Assembly, Static, HideBySig
Class NLog.Internal.FileAppenders.CountingSingleProcessFileAppender: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.FileAppenders.BaseFileAppender
    Void .ctor(System.String, NLog.Internal.FileAppenders.ICreateFileParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.Internal.FileAppenders.IFileAppenderFactory TheFactory : Public, Static, InitOnly
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    GetFileCreationTimeUtc(): PrivateScope, Public, Virtual, HideBySig
    GetFileLength(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NLog.Internal.FileAppenders.FileAppenderCache: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Int32, NLog.Internal.FileAppenders.IFileAppenderFactory, NLog.Internal.FileAppenders.ICreateFileParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.FileAppenders.IFileAppenderCache
    System.IDisposable
  Fields:
    NLog.Internal.FileAppenders.FileAppenderCache Empty : Public, Static, InitOnly
  Properties:
    System.String ArchiveFilePatternToWatch 'get set' : 
    NLog.Internal.FileAppenders.ICreateFileParameters CreateFileParameters 'get set' : 
    NLog.Internal.FileAppenders.IFileAppenderFactory Factory 'get set' : 
    Int32 Size 'get set' : 
  Events:
    System.EventHandler CheckCloseAppenders: 
  Methods:
    get_ArchiveFilePatternToWatch(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ArchiveFilePatternToWatch(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    InvalidateAppendersForArchivedFiles(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_CreateFileParameters(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Factory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_CheckCloseAppenders(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_CheckCloseAppenders(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AllocateAppender(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseAppenders(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CloseAppenders(DateTime): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FlushAppenders(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFileCreationTimeSource(String, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFileLastWriteTimeUtc(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFileLength(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InvalidateAppender(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface NLog.Internal.FileAppenders.ICreateFileParameters: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Int32 ConcurrentWriteAttemptDelay 'get ' : 
    Int32 ConcurrentWriteAttempts 'get ' : 
    Boolean ConcurrentWrites 'get ' : 
    Boolean CreateDirs 'get ' : 
    Boolean EnableFileDelete 'get ' : 
    Int32 BufferSize 'get ' : 
    Boolean ForceManaged 'get ' : 
    NLog.Targets.Win32FileAttributes FileAttributes 'get ' : 
    Boolean IsArchivingEnabled 'get ' : 
    Boolean EnableFileDeleteSimpleMonitor 'get ' : 
  Methods:
    get_ConcurrentWriteAttemptDelay(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ConcurrentWriteAttempts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ConcurrentWrites(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CreateDirs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EnableFileDelete(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BufferSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ForceManaged(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FileAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsArchivingEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EnableFileDeleteSimpleMonitor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Internal.FileAppenders.IFileAppenderCache: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    NLog.Internal.FileAppenders.ICreateFileParameters CreateFileParameters 'get ' : 
    NLog.Internal.FileAppenders.IFileAppenderFactory Factory 'get ' : 
    Int32 Size 'get ' : 
    System.String ArchiveFilePatternToWatch 'get set' : 
  Events:
    System.EventHandler CheckCloseAppenders: 
  Methods:
    get_CreateFileParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Factory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_CheckCloseAppenders(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_CheckCloseAppenders(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    AllocateAppender(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseAppenders(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CloseAppenders(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FlushAppenders(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFileCreationTimeSource(String, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFileLastWriteTimeUtc(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFileLength(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InvalidateAppender(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_ArchiveFilePatternToWatch(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ArchiveFilePatternToWatch(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    InvalidateAppendersForArchivedFiles(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Internal.FileAppenders.IFileAppenderFactory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Open(String, ICreateFileParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.Internal.FileAppenders.MutexMultiProcessFileAppender: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.FileAppenders.BaseMutexFileAppender
    Void .ctor(System.String, NLog.Internal.FileAppenders.ICreateFileParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.Internal.FileAppenders.IFileAppenderFactory TheFactory : Public, Static, InitOnly
  Methods:
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    GetFileCreationTimeUtc(): PrivateScope, Public, Virtual, HideBySig
    GetFileLength(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Internal.FileAppenders.NullAppender: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.FileAppenders.BaseFileAppender
    Void .ctor(System.String, NLog.Internal.FileAppenders.ICreateFileParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.Internal.FileAppenders.IFileAppenderFactory TheFactory : Public, Static, InitOnly
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    GetFileCreationTimeUtc(): PrivateScope, Public, Virtual, HideBySig
    GetFileLength(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NLog.Internal.FileAppenders.RetryingMultiProcessFileAppender: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.FileAppenders.BaseMutexFileAppender
    Void .ctor(System.String, NLog.Internal.FileAppenders.ICreateFileParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.Internal.FileAppenders.IFileAppenderFactory TheFactory : Public, Static, InitOnly
  Methods:
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    GetFileCreationTimeUtc(): PrivateScope, Public, Virtual, HideBySig
    GetFileLength(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Internal.FileAppenders.SingleProcessFileAppender: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.FileAppenders.BaseFileAppender
    Void .ctor(System.String, NLog.Internal.FileAppenders.ICreateFileParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.Internal.FileAppenders.IFileAppenderFactory TheFactory : Public, Static, InitOnly
  Methods:
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    GetFileCreationTimeUtc(): PrivateScope, Public, Virtual, HideBySig
    GetFileLength(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Internal.FileAppenders.WindowsMultiProcessFileAppender: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Internal.FileAppenders.BaseMutexFileAppender
    Void .ctor(System.String, NLog.Internal.FileAppenders.ICreateFileParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.Internal.FileAppenders.IFileAppenderFactory TheFactory : Public, Static, InitOnly
  Methods:
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    GetFileCreationTimeUtc(): PrivateScope, Public, Virtual, HideBySig
    GetFileLength(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Internal.Fakeables.AppDomainWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.AppDomain): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.Fakeables.IAppDomain
  Properties:
    NLog.Internal.Fakeables.AppDomainWrapper CurrentDomain 'get ' : 
    System.String BaseDirectory 'get set' : 
    System.String ConfigurationFile 'get set' : 
    System.Collections.Generic.IEnumerable`1[System.String] PrivateBinPath 'get set' : 
    System.String FriendlyName 'get set' : 
    Int32 Id   'get set' : 
  Events:
    System.EventHandler`1[System.EventArgs] ProcessExit: 
    System.EventHandler`1[System.EventArgs] processExitEvent: 
    System.EventHandler`1[System.EventArgs] DomainUnload: 
    System.EventHandler`1[System.EventArgs] domainUnloadEvent: 
  Methods:
    get_CurrentDomain(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BaseDirectory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ConfigurationFile(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PrivateBinPath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FriendlyName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Id(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAssemblies(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_ProcessExit(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_ProcessExit(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_DomainUnload(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DomainUnload(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NLog.Internal.Fakeables.AppEnvironmentWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.Internal.Fakeables.IAppDomain): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.Fakeables.IAppEnvironment
    NLog.Internal.Fakeables.IFileSystem
  Properties:
    System.String EntryAssemblyLocation 'get ' : 
    System.String EntryAssemblyFileName 'get ' : 
    System.String CurrentProcessFilePath 'get ' : 
    System.String CurrentProcessBaseName 'get ' : 
    Int32 CurrentProcessId 'get ' : 
    System.String AppDomainBaseDirectory 'get ' : 
    System.String AppDomainConfigurationFile 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.String] PrivateBinPath 'get ' : 
    System.String UserTempFilePath 'get ' : 
    NLog.Internal.Fakeables.IAppDomain AppDomain 'get set' : 
  Methods:
    get_EntryAssemblyLocation(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EntryAssemblyFileName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentProcessFilePath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentProcessBaseName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentProcessId(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AppDomainBaseDirectory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AppDomainConfigurationFile(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PrivateBinPath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UserTempFilePath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AppDomain(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AppDomain(IAppDomain): PrivateScope, Assembly, HideBySig, SpecialName
    FileExists(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadXmlFile(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface NLog.Internal.Fakeables.IAppDomain: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String BaseDirectory 'get ' : 
    System.String ConfigurationFile 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.String] PrivateBinPath 'get ' : 
    System.String FriendlyName 'get ' : 
    Int32 Id   'get ' : 
  Events:
    System.EventHandler`1[System.EventArgs] ProcessExit: 
    System.EventHandler`1[System.EventArgs] DomainUnload: 
  Methods:
    get_BaseDirectory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ConfigurationFile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PrivateBinPath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FriendlyName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Id(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetAssemblies(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    add_ProcessExit(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_ProcessExit(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_DomainUnload(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_DomainUnload(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Internal.Fakeables.IAppEnvironment: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    NLog.Internal.Fakeables.IFileSystem
  Properties:
    NLog.Internal.Fakeables.IAppDomain AppDomain 'get ' : 
    System.String AppDomainBaseDirectory 'get ' : 
    System.String AppDomainConfigurationFile 'get ' : 
    System.String CurrentProcessFilePath 'get ' : 
    System.String CurrentProcessBaseName 'get ' : 
    Int32 CurrentProcessId 'get ' : 
    System.String EntryAssemblyLocation 'get ' : 
    System.String EntryAssemblyFileName 'get ' : 
    System.String UserTempFilePath 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.String] PrivateBinPath 'get ' : 
  Methods:
    get_AppDomain(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AppDomainBaseDirectory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AppDomainConfigurationFile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CurrentProcessFilePath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CurrentProcessBaseName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CurrentProcessId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EntryAssemblyLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EntryAssemblyFileName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_UserTempFilePath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PrivateBinPath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Internal.Fakeables.IFileSystem: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    FileExists(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadXmlFile(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.Fluent.Log: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Level(LogLevel, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Trace(String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Debug(String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Info(String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Warn(String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Error(String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Fatal(String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class NLog.Fluent.LogBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NLog.ILogger): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.ILogger, NLog.LogLevel): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.LogEventInfo LogEventInfo 'get ' : 
  Methods:
    get_LogEventInfo(): PrivateScope, Public, HideBySig, SpecialName
    Exception(Exception): PrivateScope, Public, HideBySig
    Level(LogLevel): PrivateScope, Public, HideBySig
    LoggerName(String): PrivateScope, Public, HideBySig
    Message(String): PrivateScope, Public, HideBySig
    Message(String, Object): PrivateScope, Public, HideBySig
    Message(String, Object, Object): PrivateScope, Public, HideBySig
    Message(String, Object, Object, Object): PrivateScope, Public, HideBySig
    Message(String, Object, Object, Object, Object): PrivateScope, Public, HideBySig
    Message(String, Object[]): PrivateScope, Public, HideBySig
    Message(IFormatProvider, String, Object[]): PrivateScope, Public, HideBySig
    Property(Object, Object): PrivateScope, Public, HideBySig
    Properties(IDictionary): PrivateScope, Public, HideBySig
    TimeStamp(DateTime): PrivateScope, Public, HideBySig
    StackTrace(StackTrace, Int32): PrivateScope, Public, HideBySig
    Write(String(Optional, HasDefault), String(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    WriteIf(Func`1, String(Optional, HasDefault), String(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    WriteIf(Boolean, String(Optional, HasDefault), String(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class NLog.Fluent.LoggerExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Log(ILogger, LogLevel): PrivateScope, Public, Static, HideBySig
    Trace(ILogger): PrivateScope, Public, Static, HideBySig
    Debug(ILogger): PrivateScope, Public, Static, HideBySig
    Info(ILogger): PrivateScope, Public, Static, HideBySig
    Warn(ILogger): PrivateScope, Public, Static, HideBySig
    Error(ILogger): PrivateScope, Public, Static, HideBySig
    Fatal(ILogger): PrivateScope, Public, Static, HideBySig
Class NLog.Filters.ConditionBasedFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Filters.Filter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Conditions.ConditionExpression Condition 'get set' : 
    NLog.Filters.FilterResult DefaultFilterResult 'get set' : 
  Methods:
    get_Condition(): PrivateScope, Public, HideBySig, SpecialName
    set_Condition(ConditionExpression): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultFilterResult(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DefaultFilterResult(FilterResult): PrivateScope, Assembly, HideBySig, SpecialName
Class NLog.Filters.Filter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    NLog.Filters.FilterResult Action 'get set' : 
  Methods:
    get_Action(): PrivateScope, Public, HideBySig, SpecialName
    set_Action(FilterResult): PrivateScope, Public, HideBySig, SpecialName
    GetFilterResult(LogEventInfo): PrivateScope, Assembly, HideBySig
Class NLog.Filters.FilterAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Config.NameBaseAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct NLog.Filters.FilterResult: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Filters.FilterResult Neutral = 0 : Public, Static, Literal, HasDefault
    NLog.Filters.FilterResult Log = 1 : Public, Static, Literal, HasDefault
    NLog.Filters.FilterResult Ignore = 2 : Public, Static, Literal, HasDefault
    NLog.Filters.FilterResult LogFinal = 3 : Public, Static, Literal, HasDefault
    NLog.Filters.FilterResult IgnoreFinal = 4 : Public, Static, Literal, HasDefault
Class NLog.Filters.LayoutBasedFilter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Filters.Filter
  Properties:
    NLog.Layouts.Layout Layout 'get set' : 
  Methods:
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(Layout): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Filters.WhenContainsFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Filters.LayoutBasedFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IgnoreCase 'get set' : 
    System.String Substring 'get set' : 
  Methods:
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Substring(): PrivateScope, Public, HideBySig, SpecialName
    set_Substring(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Filters.WhenEqualFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Filters.LayoutBasedFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IgnoreCase 'get set' : 
    System.String CompareTo 'get set' : 
  Methods:
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CompareTo(): PrivateScope, Public, HideBySig, SpecialName
    set_CompareTo(String): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Filters.WhenMethodFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Filters.Filter
    Void .ctor(System.Func`2[NLog.LogEventInfo,NLog.Filters.FilterResult]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Filters.WhenNotContainsFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Filters.LayoutBasedFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Substring 'get set' : 
    Boolean IgnoreCase 'get set' : 
  Methods:
    get_Substring(): PrivateScope, Public, HideBySig, SpecialName
    set_Substring(String): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Filters.WhenNotEqualFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Filters.LayoutBasedFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String CompareTo 'get set' : 
    Boolean IgnoreCase 'get set' : 
  Methods:
    get_CompareTo(): PrivateScope, Public, HideBySig, SpecialName
    set_CompareTo(String): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Filters.WhenRepeatedFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Filters.LayoutBasedFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NLog.Internal.ReusableBuilderCreator ReusableLayoutBuilder : Assembly, InitOnly
  Properties:
    Int32 TimeoutSeconds 'get set' : 
    Int32 MaxLength 'get set' : 
    Boolean IncludeFirst 'get set' : 
    Int32 MaxFilterCacheSize 'get set' : 
    Int32 DefaultFilterCacheSize 'get set' : 
    System.String FilterCountPropertyName 'get set' : 
    System.String FilterCountMessageAppendFormat 'get set' : 
    Boolean OptimizeBufferReuse 'get set' : 
    Int32 OptimizeBufferDefaultLength 'get set' : 
  Methods:
    get_TimeoutSeconds(): PrivateScope, Public, HideBySig, SpecialName
    set_TimeoutSeconds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeFirst(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeFirst(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MaxFilterCacheSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxFilterCacheSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultFilterCacheSize(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultFilterCacheSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FilterCountPropertyName(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterCountPropertyName(String): PrivateScope, Public, HideBySig, SpecialName
    get_FilterCountMessageAppendFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterCountMessageAppendFormat(String): PrivateScope, Public, HideBySig, SpecialName
    get_OptimizeBufferReuse(): PrivateScope, Public, HideBySig, SpecialName
    set_OptimizeBufferReuse(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OptimizeBufferDefaultLength(): PrivateScope, Public, HideBySig, SpecialName
    set_OptimizeBufferDefaultLength(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Config.AdvancedAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Config.AppDomainFixedOutputAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Config.ArrayParameterAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type ItemType 'get set' : 
    System.String ElementName 'get set' : 
  Methods:
    get_ItemType(): PrivateScope, Public, HideBySig, SpecialName
    get_ElementName(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Config.AssemblyLoadingEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.CancelEventArgs
    Void .ctor(System.Reflection.Assembly): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.Assembly Assembly 'get set' : 
  Methods:
    get_Assembly(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Config.ConfigSectionHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Configuration.IConfigurationSectionHandler
Class NLog.Config.ConfigurationItemCreator: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Type, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NLog.Config.ConfigurationItemFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Reflection.Assembly[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Config.ConfigurationItemFactory Default 'get set' : 
    NLog.Config.ConfigurationItemCreator CreateInstance 'get set' : 
    NLog.Config.INamedItemFactory`2[NLog.Targets.Target,System.Type] Targets 'get ' : 
    NLog.Config.INamedItemFactory`2[NLog.Filters.Filter,System.Type] Filters 'get ' : 
    NLog.Config.INamedItemFactory`2[NLog.LayoutRenderers.LayoutRenderer,System.Type] LayoutRenderers 'get ' : 
    NLog.Config.INamedItemFactory`2[NLog.Layouts.Layout,System.Type] Layouts 'get ' : 
    NLog.Config.INamedItemFactory`2[NLog.LayoutRenderers.LayoutRenderer,System.Type] AmbientProperties 'get ' : 
    NLog.Targets.IJsonSerializer JsonSerializer 'get set' :  (Obsolete)
    NLog.IJsonConverter JsonConverter 'get set' : 
    NLog.IValueFormatter ValueFormatter 'get set' : 
    NLog.IObjectTypeTransformer ObjectTypeTransformer 'get set' : 
    NLog.Config.IPropertyTypeConverter PropertyTypeConverter 'get set' : 
    System.Nullable`1[System.Boolean] ParseMessageTemplates 'get set' : 
    NLog.Config.INamedItemFactory`2[NLog.Time.TimeSource,System.Type] TimeSources 'get ' : 
    NLog.Config.INamedItemFactory`2[System.Reflection.MethodInfo,System.Reflection.MethodInfo] ConditionMethods 'get ' : 
    NLog.Config.MethodFactory ConditionMethodDelegates 'get ' : 
  Events:
    System.EventHandler`1[NLog.Config.AssemblyLoadingEventArgs] AssemblyLoading: 
  Methods:
    add_AssemblyLoading(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_AssemblyLoading(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Default(ConfigurationItemFactory): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CreateInstance(): PrivateScope, Public, HideBySig, SpecialName
    set_CreateInstance(ConfigurationItemCreator): PrivateScope, Public, HideBySig, SpecialName
    get_Targets(): PrivateScope, Public, HideBySig, SpecialName
    get_Filters(): PrivateScope, Public, HideBySig, SpecialName
    GetLayoutRenderers(): PrivateScope, Assembly, HideBySig
    get_LayoutRenderers(): PrivateScope, Public, HideBySig, SpecialName
    get_Layouts(): PrivateScope, Public, HideBySig, SpecialName
    get_AmbientProperties(): PrivateScope, Public, HideBySig, SpecialName
    get_JsonSerializer(): PrivateScope, Public, HideBySig, SpecialName
    set_JsonSerializer(IJsonSerializer): PrivateScope, Public, HideBySig, SpecialName
    get_JsonConverter(): PrivateScope, Public, HideBySig, SpecialName
    set_JsonConverter(IJsonConverter): PrivateScope, Public, HideBySig, SpecialName
    get_ValueFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueFormatter(IValueFormatter): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectTypeTransformer(): PrivateScope, Assembly, HideBySig, SpecialName
    set_ObjectTypeTransformer(IObjectTypeTransformer): PrivateScope, Assembly, HideBySig, SpecialName
    get_PropertyTypeConverter(): PrivateScope, Public, HideBySig, SpecialName
    set_PropertyTypeConverter(IPropertyTypeConverter): PrivateScope, Public, HideBySig, SpecialName
    get_ParseMessageTemplates(): PrivateScope, Public, HideBySig, SpecialName
    set_ParseMessageTemplates(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_TimeSources(): PrivateScope, Public, HideBySig, SpecialName
    get_ConditionMethods(): PrivateScope, Public, HideBySig, SpecialName
    get_ConditionMethodDelegates(): PrivateScope, Assembly, HideBySig, SpecialName
    RegisterItemsFromAssembly(Assembly): PrivateScope, Public, HideBySig
    RegisterItemsFromAssembly(Assembly, String): PrivateScope, Public, HideBySig
    PreloadAssembly(Type[]): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    RegisterType(Type, String): PrivateScope, Public, HideBySig
    GetAutoLoadingFileLocations(): PrivateScope, Assembly, Static, HideBySig
Class NLog.Config.DefaultParameterAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Config.DynamicLogLevelFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.Config.LoggingRule, NLog.Layouts.SimpleLayout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.ILoggingRuleLevelFilter
  Properties:
    Boolean[] LogLevels 'get ' : 
  Methods:
    get_LogLevels(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSimpleFilterForUpdate(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Config.DynamicRangeLevelFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.Config.LoggingRule, NLog.Layouts.SimpleLayout, NLog.Layouts.SimpleLayout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.ILoggingRuleLevelFilter
  Properties:
    Boolean[] LogLevels 'get ' : 
  Methods:
    get_LogLevels(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSimpleFilterForUpdate(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Config.ExceptionRenderingFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Config.ExceptionRenderingFormat Message = 0 : Public, Static, Literal, HasDefault
    NLog.Config.ExceptionRenderingFormat Type = 1 : Public, Static, Literal, HasDefault
    NLog.Config.ExceptionRenderingFormat ShortType = 2 : Public, Static, Literal, HasDefault
    NLog.Config.ExceptionRenderingFormat ToString = 3 : Public, Static, Literal, HasDefault
    NLog.Config.ExceptionRenderingFormat Method = 4 : Public, Static, Literal, HasDefault
    NLog.Config.ExceptionRenderingFormat StackTrace = 5 : Public, Static, Literal, HasDefault
    NLog.Config.ExceptionRenderingFormat Data = 6 : Public, Static, Literal, HasDefault
    NLog.Config.ExceptionRenderingFormat Serialize = 7 : Public, Static, Literal, HasDefault
    NLog.Config.ExceptionRenderingFormat Source = 8 : Public, Static, Literal, HasDefault
    NLog.Config.ExceptionRenderingFormat HResult = 9 : Public, Static, Literal, HasDefault
    NLog.Config.ExceptionRenderingFormat Properties = 10 : Public, Static, Literal, HasDefault
Class NLog.Config.Factory`2[TBaseType,TAttributeType]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TBaseType,  ReferenceType
  Type parameter: TAttributeType, NLog.Config.NameBaseAttribute
    Void .ctor(NLog.Config.ConfigurationItemFactory): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.INamedItemFactory`2[TBaseType,System.Type]
    NLog.Config.IFactory
  Methods:
    ScanTypes(Type[], String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RegisterType(Type, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RegisterNamedType(String, String): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RegisterDefinition(String, Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetDefinition(String, Type&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryCreateInstance(String, TBaseType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateInstance(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NLog.Config.LayoutRendererFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Config.Factory`2[NLog.LayoutRenderers.LayoutRenderer,NLog.LayoutRenderers.LayoutRendererAttribute]
    Void .ctor(NLog.Config.ConfigurationItemFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ClearFuncLayouts(): PrivateScope, Public, HideBySig
    RegisterFuncLayout(String, FuncLayoutRenderer): PrivateScope, Public, HideBySig
    TryCreateInstance(String, LayoutRenderer&(Out)): PrivateScope, Public, Virtual, HideBySig
Interface NLog.Config.IFactory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ScanTypes(Type[], String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RegisterType(Type, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Config.IInstallable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Install(InstallationContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Uninstall(InstallationContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsInstalled(InstallationContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Config.ILoggingConfigurationElement: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Name 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.String,System.String]] Values 'get ' : 
    System.Collections.Generic.IEnumerable`1[NLog.Config.ILoggingConfigurationElement] Children 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Values(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Config.ILoggingConfigurationLoader: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    Load(LogFactory, String(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Activated(LogFactory, LoggingConfiguration): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDefaultCandidateConfigFilePaths(String(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Config.ILoggingRuleLevelFilter: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Boolean[] LogLevels 'get ' : 
  Methods:
    get_LogLevels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetSimpleFilterForUpdate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Config.INamedItemFactory`2[TInstanceType,TDefinitionType]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TInstanceType,  ReferenceType
  Type parameter: TDefinitionType
  Methods:
    RegisterDefinition(String, TDefinitionType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryGetDefinition(String, TDefinitionType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateInstance(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryCreateInstance(String, TInstanceType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.Config.InstallationContext: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    NLog.LogLevel LogLevel 'get set' : 
    Boolean IgnoreFailures 'get set' : 
    Boolean ThrowExceptions 'get set' : 
    System.Collections.Generic.IDictionary`2[System.String,System.String] Parameters 'get set' : 
    System.IO.TextWriter LogOutput 'get set' : 
  Methods:
    get_LogLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_LogLevel(LogLevel): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreFailures(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreFailures(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ThrowExceptions(): PrivateScope, Public, HideBySig, SpecialName
    set_ThrowExceptions(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_LogOutput(): PrivateScope, Public, HideBySig, SpecialName
    set_LogOutput(TextWriter): PrivateScope, Public, HideBySig, SpecialName
    Trace(String, Object[]): PrivateScope, Public, HideBySig
    Debug(String, Object[]): PrivateScope, Public, HideBySig
    Info(String, Object[]): PrivateScope, Public, HideBySig
    Warning(String, Object[]): PrivateScope, Public, HideBySig
    Error(String, Object[]): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateLogEvent(): PrivateScope, Public, HideBySig
Interface NLog.Config.IPropertyTypeConverter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Convert(Object, Type, String, IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NLog.Config.ISetupBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Config.ISetupExtensionsBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Config.ISetupInternalLoggerBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Config.ISetupLoadConfigurationBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
    NLog.Config.LoggingConfiguration Configuration 'get set' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Configuration(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Configuration(LoggingConfiguration): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NLog.Config.ISetupSerializationBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NLog.Config.LoggerNameMatcher: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    System.String Pattern 'get ' : 
  Methods:
    Create(String): PrivateScope, Public, Static, HideBySig
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    NameMatches(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.Config.LoggingConfiguration: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NLog.LogFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.LogFactory LogFactory 'get ' : 
    Boolean ExceptionLoggingOldStyle 'get set' :  (Obsolete)
    System.Collections.Generic.IDictionary`2[System.String,NLog.Layouts.SimpleLayout] Variables 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[NLog.Targets.Target] ConfiguredNamedTargets 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.String] FileNamesToWatch 'get ' : 
    System.Collections.Generic.IList`1[NLog.Config.LoggingRule] LoggingRules 'get set' : 
    System.Globalization.CultureInfo DefaultCultureInfo 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[NLog.Targets.Target] AllTargets 'get ' : 
  Methods:
    get_LogFactory(): PrivateScope, Public, HideBySig, SpecialName
    get_ExceptionLoggingOldStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_ExceptionLoggingOldStyle(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Variables(): PrivateScope, Public, HideBySig, SpecialName
    get_ConfiguredNamedTargets(): PrivateScope, Public, HideBySig, SpecialName
    get_FileNamesToWatch(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LoggingRules(): PrivateScope, Public, HideBySig, SpecialName
    GetLoggingRulesThreadSafe(): PrivateScope, Assembly, HideBySig
    get_DefaultCultureInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultCultureInfo(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_AllTargets(): PrivateScope, Public, HideBySig, SpecialName
    AddTarget(Target): PrivateScope, Public, HideBySig
    AddTarget(String, Target): PrivateScope, Public, HideBySig
    FindTargetByName(String): PrivateScope, Public, HideBySig
    FindTargetByName(String): PrivateScope, Public, HideBySig
    AddRule(LogLevel, LogLevel, String, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AddRule(LogLevel, LogLevel, Target, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AddRule(LogLevel, LogLevel, Target, String, Boolean): PrivateScope, Public, HideBySig
    AddRuleForOneLevel(LogLevel, String, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AddRuleForOneLevel(LogLevel, Target, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AddRuleForOneLevel(LogLevel, Target, String, Boolean): PrivateScope, Public, HideBySig
    AddRuleForAllLevels(String, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AddRuleForAllLevels(Target, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AddRuleForAllLevels(Target, String, Boolean): PrivateScope, Public, HideBySig
    FindRuleByName(String): PrivateScope, Public, HideBySig
    RemoveRuleByName(String): PrivateScope, Public, HideBySig
    Reload(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReloadNewConfig(): PrivateScope, Assembly, HideBySig
    RemoveTarget(String): PrivateScope, Public, HideBySig
    Install(InstallationContext): PrivateScope, Public, HideBySig
    Uninstall(InstallationContext): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Assembly, HideBySig
    Dump(): PrivateScope, Assembly, HideBySig
    GetAllTargetsToFlush(): PrivateScope, Assembly, HideBySig
    ValidateConfig(): PrivateScope, Assembly, HideBySig
    InitializeAll(): PrivateScope, Assembly, HideBySig
    CopyVariables(IDictionary`2): PrivateScope, Assembly, HideBySig
    ExpandSimpleVariables(String): PrivateScope, Assembly, HideBySig
    CheckUnusedTargets(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Config.LoggingConfigurationChangedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(NLog.Config.LoggingConfiguration, NLog.Config.LoggingConfiguration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Config.LoggingConfiguration DeactivatedConfiguration 'get set' : 
    NLog.Config.LoggingConfiguration ActivatedConfiguration 'get set' : 
    NLog.Config.LoggingConfiguration OldConfiguration 'get ' :  (Obsolete)
    NLog.Config.LoggingConfiguration NewConfiguration 'get ' :  (Obsolete)
  Methods:
    get_DeactivatedConfiguration(): PrivateScope, Public, HideBySig, SpecialName
    get_ActivatedConfiguration(): PrivateScope, Public, HideBySig, SpecialName
    get_OldConfiguration(): PrivateScope, Public, HideBySig, SpecialName
    get_NewConfiguration(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Config.LoggingConfigurationElementExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    MatchesName(ILoggingConfigurationElement, String): PrivateScope, Public, Static, HideBySig
    AssertName(ILoggingConfigurationElement, String[]): PrivateScope, Public, Static, HideBySig
    GetRequiredValue(ILoggingConfigurationElement, String, String): PrivateScope, Public, Static, HideBySig
    GetOptionalValue(ILoggingConfigurationElement, String, String): PrivateScope, Public, Static, HideBySig
    GetOptionalBooleanValue(ILoggingConfigurationElement, String, Boolean): PrivateScope, Public, Static, HideBySig
    GetConfigItemTypeAttribute(ILoggingConfigurationElement, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class NLog.Config.LoggingConfigurationFileLoader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NLog.Internal.Fakeables.IAppEnvironment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.ILoggingConfigurationLoader
    System.IDisposable
  Methods:
    Load(LogFactory, String(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Activated(LogFactory, LoggingConfiguration): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDefaultCandidateConfigFilePaths(String(Optional, HasDefault)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetAppSpecificNLogLocations(String, String): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Config.LoggingConfigurationParser: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NLog.Config.LoggingConfiguration
  Methods:
    <CreateUniqueSortedListFromConfig>g__AddHighPrioritySetting|4_0(String, <>c__DisplayClass4_0&): PrivateScope, Assembly, Static, HideBySig
Class NLog.Config.LoggingConfigurationReloadedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Succeeded 'get set' : 
    System.Exception Exception 'get set' : 
  Methods:
    get_Succeeded(): PrivateScope, Public, HideBySig, SpecialName
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Config.LoggingConfigurationWatchableFileLoader: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NLog.Config.LoggingConfigurationFileLoader
    Void .ctor(NLog.Internal.Fakeables.IAppEnvironment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Load(LogFactory, String(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    Activated(LogFactory, LoggingConfiguration): PrivateScope, Public, Virtual, HideBySig
    ReloadConfigOnTimer(Object): PrivateScope, Assembly, HideBySig
Class NLog.Config.LoggingRule: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.LogLevel, NLog.LogLevel, NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.LogLevel, NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.Targets.Target): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String RuleName 'get set' : 
    System.Collections.Generic.IList`1[NLog.Targets.Target] Targets 'get ' : 
    System.Collections.Generic.IList`1[NLog.Config.LoggingRule] ChildRules 'get ' : 
    System.Collections.Generic.IList`1[NLog.Filters.Filter] Filters 'get ' : 
    Boolean Final 'get set' : 
    System.String LoggerNamePattern 'get set' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[NLog.LogLevel] Levels 'get ' : 
    NLog.Filters.FilterResult DefaultFilterResult 'get set' : 
  Methods:
    get_RuleName(): PrivateScope, Public, HideBySig, SpecialName
    set_RuleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Targets(): PrivateScope, Public, HideBySig, SpecialName
    get_ChildRules(): PrivateScope, Public, HideBySig, SpecialName
    GetChildRulesThreadSafe(): PrivateScope, Assembly, HideBySig
    GetTargetsThreadSafe(): PrivateScope, Assembly, HideBySig
    RemoveTargetThreadSafe(Target): PrivateScope, Assembly, HideBySig
    get_Filters(): PrivateScope, Public, HideBySig, SpecialName
    get_Final(): PrivateScope, Public, HideBySig, SpecialName
    set_Final(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LoggerNamePattern(): PrivateScope, Public, HideBySig, SpecialName
    set_LoggerNamePattern(String): PrivateScope, Public, HideBySig, SpecialName
    get_Levels(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultFilterResult(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultFilterResult(FilterResult): PrivateScope, Public, HideBySig, SpecialName
    EnableLoggingForLevel(LogLevel): PrivateScope, Public, HideBySig
    EnableLoggingForLevels(LogLevel, LogLevel): PrivateScope, Public, HideBySig
    EnableLoggingForLevels(SimpleLayout): PrivateScope, Assembly, HideBySig
    EnableLoggingForRange(SimpleLayout, SimpleLayout): PrivateScope, Assembly, HideBySig
    DisableLoggingForLevel(LogLevel): PrivateScope, Public, HideBySig
    DisableLoggingForLevels(LogLevel, LogLevel): PrivateScope, Public, HideBySig
    SetLoggingLevels(LogLevel, LogLevel): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    IsLoggingEnabledForLevel(LogLevel): PrivateScope, Public, HideBySig
    NameMatches(String): PrivateScope, Public, HideBySig
Class NLog.Config.LoggingRuleLevelFilter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Boolean[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.ILoggingRuleLevelFilter
  Fields:
    NLog.Config.ILoggingRuleLevelFilter Off : Public, Static, InitOnly
  Properties:
    Boolean[] LogLevels 'get ' : 
  Methods:
    get_LogLevels(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSimpleFilterForUpdate(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetLoggingLevels(LogLevel, LogLevel, Boolean): PrivateScope, Public, HideBySig
Class NLog.Config.MethodFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Func`2[System.Type,System.Collections.Generic.IList`1[System.Collections.Generic.KeyValuePair`2[System.String,System.Reflection.MethodInfo]]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.INamedItemFactory`2[System.Reflection.MethodInfo,System.Reflection.MethodInfo]
    NLog.Config.INamedItemFactory`2[NLog.Internal.ReflectionHelpers+LateBoundMethod,System.Reflection.MethodInfo]
    NLog.Config.IFactory
  Methods:
    ScanTypes(Type[], String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RegisterType(Type, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ExtractClassMethods(Type): PrivateScope, Public, Static, HideBySig
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RegisterDefinition(String, MethodInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RegisterDefinition(String, MethodInfo, LateBoundMethod): PrivateScope, Assembly, HideBySig
    TryCreateInstance(String, MethodInfo&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryCreateInstance(String, LateBoundMethod&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateInstance(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetDefinition(String, MethodInfo&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Config.MutableUnsafeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Config.NameBaseAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Attribute
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Config.NLogConfigurationIgnorePropertyAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Config.NLogConfigurationItemAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Config.NLogXmlElement: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Xml.XmlReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.XmlReader, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.ILoggingConfigurationElement
  Properties:
    System.String LocalName 'get set' : 
    System.Collections.Generic.Dictionary`2[System.String,System.String] AttributeValues 'get ' : 
    System.Collections.Generic.IList`1[NLog.Config.NLogXmlElement] Children 'get ' : 
    System.String Value 'get set' : 
    System.String Name 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.String,System.String]] Values 'get ' : 
  Methods:
    get_LocalName(): PrivateScope, Public, HideBySig, SpecialName
    get_AttributeValues(): PrivateScope, Public, HideBySig, SpecialName
    get_Children(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Elements(String): PrivateScope, Public, HideBySig
    AssertName(String[]): PrivateScope, Public, HideBySig
    GetParsingErrors(): PrivateScope, Public, HideBySig
Class NLog.Config.PropertyTypeConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Config.IPropertyTypeConverter
  Methods:
    Convert(Object, Type, String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Config.RequiredParameterAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Config.SimpleConfigurator: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ConfigureForConsoleLogging(): PrivateScope, Public, Static, HideBySig
    ConfigureForConsoleLogging(LogLevel): PrivateScope, Public, Static, HideBySig
    ConfigureForTargetLogging(Target): PrivateScope, Public, Static, HideBySig
    ConfigureForTargetLogging(Target, LogLevel): PrivateScope, Public, Static, HideBySig
    ConfigureForFileLogging(String): PrivateScope, Public, Static, HideBySig
    ConfigureForFileLogging(String, LogLevel): PrivateScope, Public, Static, HideBySig
Struct NLog.Config.StackTraceUsage: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Config.StackTraceUsage None = 0 : Public, Static, Literal, HasDefault
    NLog.Config.StackTraceUsage WithoutSource = 1 : Public, Static, Literal, HasDefault
    NLog.Config.StackTraceUsage WithSource = 2 : Public, Static, Literal, HasDefault
    NLog.Config.StackTraceUsage Max = 2 : Public, Static, Literal, HasDefault
Class NLog.Config.ThreadAgnosticAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Config.ThreadSafeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Config.XmlLoggingConfiguration: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NLog.Config.LoggingConfigurationParser
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NLog.LogFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.String, Boolean, NLog.LogFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Xml.XmlReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.XmlReader, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.XmlReader, System.String, NLog.LogFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.XmlReader, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Xml.XmlReader, System.String, Boolean, NLog.LogFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.String, System.String, NLog.LogFactory): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Config.LoggingConfiguration AppConfig 'get ' : 
    System.Nullable`1[System.Boolean] InitializeSucceeded 'get set' : 
    Boolean AutoReload 'get set' : 
    System.Collections.Generic.IEnumerable`1[System.String] FileNamesToWatch 'get ' : 
  Methods:
    CreateFromXmlString(String): PrivateScope, Public, Static, HideBySig
    CreateFromXmlString(String, LogFactory): PrivateScope, Public, Static, HideBySig
    get_AppConfig(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InitializeSucceeded(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoReload(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoReload(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FileNamesToWatch(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Reload(): PrivateScope, Public, Virtual, HideBySig
    GetCandidateConfigFilePaths(): PrivateScope, Public, Static, HideBySig
    SetCandidateConfigFilePaths(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ResetCandidateConfigFilePath(): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Conditions.ConditionAndExpression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Conditions.ConditionExpression
    Void .ctor(NLog.Conditions.ConditionExpression, NLog.Conditions.ConditionExpression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Conditions.ConditionExpression Left 'get set' : 
    NLog.Conditions.ConditionExpression Right 'get set' : 
  Methods:
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Conditions.ConditionEvaluationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Conditions.ConditionExpression: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    System.Object BoxedTrue : Assembly, Static, InitOnly
    System.Object BoxedFalse : Assembly, Static, InitOnly
  Methods:
    op_Implicit(String): PrivateScope, Public, Static, HideBySig, SpecialName
    Evaluate(LogEventInfo): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig, Abstract
Class NLog.Conditions.ConditionLayoutExpression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Conditions.ConditionExpression
    Void .ctor(NLog.Layouts.SimpleLayout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Layouts.Layout Layout 'get ' : 
  Methods:
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Conditions.ConditionLevelExpression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Conditions.ConditionExpression
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Conditions.ConditionLiteralExpression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Conditions.ConditionExpression
    Void .ctor(System.Object, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object LiteralValue 'get set' : 
  Methods:
    get_LiteralValue(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Conditions.ConditionLoggerNameExpression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Conditions.ConditionExpression
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Conditions.ConditionMessageExpression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Conditions.ConditionExpression
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Conditions.ConditionMethodAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NLog.Config.NameBaseAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Conditions.ConditionMethodExpression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Conditions.ConditionExpression
    Void .ctor(System.String, System.Reflection.MethodInfo, LateBoundMethod, System.Collections.Generic.IEnumerable`1[NLog.Conditions.ConditionExpression]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.MethodInfo MethodInfo 'get ' : 
  Methods:
    get_MethodInfo(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Conditions.ConditionMethods: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Equals2(Object, Object): PrivateScope, Public, Static, HideBySig
    Equals2(String, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Contains(String, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StartsWith(String, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EndsWith(String, String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Length(String): PrivateScope, Public, Static, HideBySig
    RegexMatches(String, String, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class NLog.Conditions.ConditionMethodsAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Conditions.ConditionNotExpression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Conditions.ConditionExpression
    Void .ctor(NLog.Conditions.ConditionExpression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Conditions.ConditionExpression Expression 'get set' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Conditions.ConditionOrExpression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Conditions.ConditionExpression
    Void .ctor(NLog.Conditions.ConditionExpression, NLog.Conditions.ConditionExpression): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Conditions.ConditionExpression LeftExpression 'get set' : 
    NLog.Conditions.ConditionExpression RightExpression 'get set' : 
  Methods:
    get_LeftExpression(): PrivateScope, Public, HideBySig, SpecialName
    get_RightExpression(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Conditions.ConditionParseException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NLog.Conditions.ConditionParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    ParseExpression(String): PrivateScope, Public, Static, HideBySig
    ParseExpression(String, ConfigurationItemFactory): PrivateScope, Public, Static, HideBySig
    ParseExpression(SimpleStringReader, ConfigurationItemFactory): PrivateScope, Assembly, Static, HideBySig
Class NLog.Conditions.ConditionRelationalExpression: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :NLog.Conditions.ConditionExpression
    Void .ctor(NLog.Conditions.ConditionExpression, NLog.Conditions.ConditionExpression, NLog.Conditions.ConditionRelationalOperator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Conditions.ConditionExpression LeftExpression 'get set' : 
    NLog.Conditions.ConditionExpression RightExpression 'get set' : 
    NLog.Conditions.ConditionRelationalOperator RelationalOperator 'get set' : 
  Methods:
    get_LeftExpression(): PrivateScope, Public, HideBySig, SpecialName
    get_RightExpression(): PrivateScope, Public, HideBySig, SpecialName
    get_RelationalOperator(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct NLog.Conditions.ConditionRelationalOperator: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Conditions.ConditionRelationalOperator Equal = 0 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionRelationalOperator NotEqual = 1 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionRelationalOperator Less = 2 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionRelationalOperator Greater = 3 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionRelationalOperator LessOrEqual = 4 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionRelationalOperator GreaterOrEqual = 5 : Public, Static, Literal, HasDefault
Class NLog.Conditions.ConditionTokenizer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(NLog.Internal.SimpleStringReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.Conditions.ConditionTokenType TokenType 'get set' : 
    System.String TokenValue 'get set' : 
    System.String StringTokenValue 'get ' : 
  Methods:
    get_TokenType(): PrivateScope, Public, HideBySig, SpecialName
    get_TokenValue(): PrivateScope, Public, HideBySig, SpecialName
    get_StringTokenValue(): PrivateScope, Public, HideBySig, SpecialName
    Expect(ConditionTokenType): PrivateScope, Public, HideBySig
    EatKeyword(): PrivateScope, Public, HideBySig
    IsKeyword(String): PrivateScope, Public, HideBySig
    IsEOF(): PrivateScope, Public, HideBySig
    IsNumber(): PrivateScope, Public, HideBySig
    IsToken(ConditionTokenType): PrivateScope, Public, HideBySig
    GetNextToken(): PrivateScope, Public, HideBySig
Struct NLog.Conditions.ConditionTokenType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NLog.Conditions.ConditionTokenType EndOfInput = 0 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType BeginningOfInput = 1 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Number = 2 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType String = 3 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Keyword = 4 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Whitespace = 5 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType FirstPunct = 6 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType LessThan = 7 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType GreaterThan = 8 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType LessThanOrEqualTo = 9 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType GreaterThanOrEqualTo = 10 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType EqualTo = 11 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType NotEqual = 12 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType LeftParen = 13 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType RightParen = 14 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Dot = 15 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Comma = 16 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Not = 17 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType And = 18 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Or = 19 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Minus = 20 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType LastPunct = 21 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Invalid = 22 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType ClosingCurlyBrace = 23 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Colon = 24 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Exclamation = 25 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Ampersand = 26 : Public, Static, Literal, HasDefault
    NLog.Conditions.ConditionTokenType Pipe = 27 : Public, Static, Literal, HasDefault
Class NLog.Common.AsyncContinuation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Exception, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NLog.Common.AsyncHelpers: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetManagedThreadId(): PrivateScope, Assembly, Static, HideBySig
    StartAsyncTask(AsyncHelpersTask, Object): PrivateScope, Assembly, Static, HideBySig
    WaitForDelay(TimeSpan): PrivateScope, Assembly, Static, HideBySig
    ForEachItemSequentially(IEnumerable`1, AsyncContinuation, AsynchronousAction`1): PrivateScope, Public, Static, HideBySig
    Repeat(Int32, AsyncContinuation, AsynchronousAction): PrivateScope, Public, Static, HideBySig
    PrecededBy(AsyncContinuation, AsynchronousAction): PrivateScope, Public, Static, HideBySig
    WithTimeout(AsyncContinuation, TimeSpan): PrivateScope, Public, Static, HideBySig
    ForEachItemInParallel(IEnumerable`1, AsyncContinuation, AsynchronousAction`1): PrivateScope, Public, Static, HideBySig
    RunSynchronously(AsynchronousAction): PrivateScope, Public, Static, HideBySig
    PreventMultipleCalls(AsyncContinuation): PrivateScope, Public, Static, HideBySig
    GetCombinedException(IList`1): PrivateScope, Public, Static, HideBySig
    WaitForDispose(Timer, TimeSpan): PrivateScope, Assembly, Static, HideBySig
Class NLog.Common.AsynchronousAction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(AsyncContinuation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncContinuation, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NLog.Common.AsynchronousAction`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T, AsyncContinuation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, AsyncContinuation, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Common.AsyncLogEventInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(NLog.LogEventInfo, NLog.Common.AsyncContinuation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NLog.LogEventInfo LogEvent 'get ' : 
    NLog.Common.AsyncContinuation Continuation 'get ' : 
  Methods:
    get_LogEvent(): PrivateScope, Public, HideBySig, SpecialName
    get_Continuation(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(AsyncLogEventInfo, AsyncLogEventInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(AsyncLogEventInfo, AsyncLogEventInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class NLog.Common.ConversionHelpers: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryParseEnum(String, TEnum&(Out), TEnum(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    TryParseEnum(String, Type, Object&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseEnum(String, Boolean, TEnum&(Out)): PrivateScope, Assembly, Static, HideBySig
Interface NLog.Common.IInternalLoggerContext: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.String Name 'get ' : 
    NLog.LogFactory LogFactory 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LogFactory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NLog.Common.InternalLogger: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Properties:
    Boolean IsTraceEnabled 'get ' : 
    Boolean IsDebugEnabled 'get ' : 
    Boolean IsInfoEnabled 'get ' : 
    Boolean IsWarnEnabled 'get ' : 
    Boolean IsErrorEnabled 'get ' : 
    Boolean IsFatalEnabled 'get ' : 
    NLog.LogLevel LogLevel 'get set' : 
    Boolean LogToConsole 'get set' : 
    Boolean LogToConsoleError 'get set' : 
    Boolean LogToTrace 'get set' : 
    System.String LogFile 'get set' : 
    System.IO.TextWriter LogWriter 'get set' : 
    Boolean IncludeTimestamp 'get set' : 
    Boolean ExceptionThrowWhenWriting 'get set' : 
  Events:
    System.EventHandler`1[NLog.Common.InternalLoggerMessageEventArgs] LogMessageReceived: 
  Methods:
    get_IsTraceEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsDebugEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsInfoEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsWarnEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsErrorEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsFatalEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    Trace(String, Object[]): PrivateScope, Public, Static, HideBySig
    Trace(String): PrivateScope, Public, Static, HideBySig
    Trace(Func`1): PrivateScope, Public, Static, HideBySig
    Trace(Exception, String, Object[]): PrivateScope, Public, Static, HideBySig
    Trace(String, TArgument1): PrivateScope, Public, Static, HideBySig
    Trace(String, TArgument1, TArgument2): PrivateScope, Public, Static, HideBySig
    Trace(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Static, HideBySig
    Trace(Exception, String): PrivateScope, Public, Static, HideBySig
    Trace(Exception, Func`1): PrivateScope, Public, Static, HideBySig
    Debug(String, Object[]): PrivateScope, Public, Static, HideBySig
    Debug(String): PrivateScope, Public, Static, HideBySig
    Debug(Func`1): PrivateScope, Public, Static, HideBySig
    Debug(Exception, String, Object[]): PrivateScope, Public, Static, HideBySig
    Debug(String, TArgument1): PrivateScope, Public, Static, HideBySig
    Debug(String, TArgument1, TArgument2): PrivateScope, Public, Static, HideBySig
    Debug(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Static, HideBySig
    Debug(Exception, String): PrivateScope, Public, Static, HideBySig
    Debug(Exception, Func`1): PrivateScope, Public, Static, HideBySig
    Info(String, Object[]): PrivateScope, Public, Static, HideBySig
    Info(String): PrivateScope, Public, Static, HideBySig
    Info(Func`1): PrivateScope, Public, Static, HideBySig
    Info(Exception, String, Object[]): PrivateScope, Public, Static, HideBySig
    Info(String, TArgument1): PrivateScope, Public, Static, HideBySig
    Info(String, TArgument1, TArgument2): PrivateScope, Public, Static, HideBySig
    Info(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Static, HideBySig
    Info(Exception, String): PrivateScope, Public, Static, HideBySig
    Info(Exception, Func`1): PrivateScope, Public, Static, HideBySig
    Warn(String, Object[]): PrivateScope, Public, Static, HideBySig
    Warn(String): PrivateScope, Public, Static, HideBySig
    Warn(Func`1): PrivateScope, Public, Static, HideBySig
    Warn(Exception, String, Object[]): PrivateScope, Public, Static, HideBySig
    Warn(String, TArgument1): PrivateScope, Public, Static, HideBySig
    Warn(String, TArgument1, TArgument2): PrivateScope, Public, Static, HideBySig
    Warn(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Static, HideBySig
    Warn(Exception, String): PrivateScope, Public, Static, HideBySig
    Warn(Exception, Func`1): PrivateScope, Public, Static, HideBySig
    Error(String, Object[]): PrivateScope, Public, Static, HideBySig
    Error(String): PrivateScope, Public, Static, HideBySig
    Error(Func`1): PrivateScope, Public, Static, HideBySig
    Error(Exception, String, Object[]): PrivateScope, Public, Static, HideBySig
    Error(String, TArgument1): PrivateScope, Public, Static, HideBySig
    Error(String, TArgument1, TArgument2): PrivateScope, Public, Static, HideBySig
    Error(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Static, HideBySig
    Error(Exception, String): PrivateScope, Public, Static, HideBySig
    Error(Exception, Func`1): PrivateScope, Public, Static, HideBySig
    Fatal(String, Object[]): PrivateScope, Public, Static, HideBySig
    Fatal(String): PrivateScope, Public, Static, HideBySig
    Fatal(Func`1): PrivateScope, Public, Static, HideBySig
    Fatal(Exception, String, Object[]): PrivateScope, Public, Static, HideBySig
    Fatal(String, TArgument1): PrivateScope, Public, Static, HideBySig
    Fatal(String, TArgument1, TArgument2): PrivateScope, Public, Static, HideBySig
    Fatal(String, TArgument1, TArgument2, TArgument3): PrivateScope, Public, Static, HideBySig
    Fatal(Exception, String): PrivateScope, Public, Static, HideBySig
    Fatal(Exception, Func`1): PrivateScope, Public, Static, HideBySig
    Reset(): PrivateScope, Public, Static, HideBySig
    get_LogLevel(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_LogLevel(LogLevel): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LogToConsole(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_LogToConsole(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LogToConsoleError(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_LogToConsoleError(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LogToTrace(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_LogToTrace(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LogFile(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_LogFile(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LogWriter(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_LogWriter(TextWriter): PrivateScope, Public, Static, HideBySig, SpecialName
    add_LogMessageReceived(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_LogMessageReceived(EventHandler`1): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IncludeTimestamp(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_IncludeTimestamp(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ExceptionThrowWhenWriting(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    Log(LogLevel, String, Object[]): PrivateScope, Public, Static, HideBySig
    Log(LogLevel, String): PrivateScope, Public, Static, HideBySig
    Log(LogLevel, Func`1): PrivateScope, Public, Static, HideBySig
    Log(Exception, LogLevel, Func`1): PrivateScope, Public, Static, HideBySig
    Log(Exception, LogLevel, String, Object[]): PrivateScope, Public, Static, HideBySig
    Log(Exception, LogLevel, String): PrivateScope, Public, Static, HideBySig
    HasActiveLoggers(): PrivateScope, Assembly, Static, HideBySig
    HasActiveLoggersWithLine(): PrivateScope, Assembly, Static, HideBySig
    LogAssemblyVersion(Assembly): PrivateScope, Public, Static, HideBySig
Class NLog.Common.InternalLoggerMessageEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.String, NLog.LogLevel, System.Exception, System.Type, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
    NLog.LogLevel Level 'get ' : 
    System.Exception Exception 'get ' : 
    System.Type SenderType 'get ' : 
    System.String SenderName 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
    get_SenderType(): PrivateScope, Public, HideBySig, SpecialName
    get_SenderName(): PrivateScope, Public, HideBySig, SpecialName
Class NLog.Common.LogEventInfoBuffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Assembly, HideBySig, SpecialName
    Append(AsyncLogEventInfo): PrivateScope, Public, HideBySig
    GetEventsAndClear(): PrivateScope, Public, HideBySig
Class NLog.Attributes.LogLevelTypeConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    CanConvertTo(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
Class JetBrains.Annotations.CanBeNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.NotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.ItemNotNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.ItemCanBeNullAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.StringFormatMethodAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FormatParameterName 'get set' : 
  Methods:
    get_FormatParameterName(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.ValueProviderAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.InvokerParameterNameAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ParameterName 'get set' : 
  Methods:
    get_ParameterName(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.ContractAnnotationAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Contract 'get set' : 
    Boolean ForceFullStates 'get set' : 
  Methods:
    get_Contract(): PrivateScope, Public, HideBySig, SpecialName
    get_ForceFullStates(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.LocalizationRequiredAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Required 'get set' : 
  Methods:
    get_Required(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.CannotApplyEqualityOperatorAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.BaseTypeRequiredAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type BaseType 'get set' : 
  Methods:
    get_BaseType(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.UsedImplicitlyAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(JetBrains.Annotations.ImplicitUseKindFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(JetBrains.Annotations.ImplicitUseTargetFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(JetBrains.Annotations.ImplicitUseKindFlags, JetBrains.Annotations.ImplicitUseTargetFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    JetBrains.Annotations.ImplicitUseKindFlags UseKindFlags 'get set' : 
    JetBrains.Annotations.ImplicitUseTargetFlags TargetFlags 'get set' : 
  Methods:
    get_UseKindFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetFlags(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.MeansImplicitUseAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(JetBrains.Annotations.ImplicitUseKindFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(JetBrains.Annotations.ImplicitUseTargetFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(JetBrains.Annotations.ImplicitUseKindFlags, JetBrains.Annotations.ImplicitUseTargetFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    JetBrains.Annotations.ImplicitUseKindFlags UseKindFlags 'get set' : 
    JetBrains.Annotations.ImplicitUseTargetFlags TargetFlags 'get set' : 
  Methods:
    get_UseKindFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetFlags(): PrivateScope, Public, HideBySig, SpecialName
Struct JetBrains.Annotations.ImplicitUseKindFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    JetBrains.Annotations.ImplicitUseKindFlags Default = 7 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.ImplicitUseKindFlags Access = 1 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.ImplicitUseKindFlags Assign = 2 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature = 4 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature = 8 : Public, Static, Literal, HasDefault
Struct JetBrains.Annotations.ImplicitUseTargetFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    JetBrains.Annotations.ImplicitUseTargetFlags Default = 1 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.ImplicitUseTargetFlags Itself = 1 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.ImplicitUseTargetFlags Members = 2 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.ImplicitUseTargetFlags WithMembers = 3 : Public, Static, Literal, HasDefault
Class JetBrains.Annotations.PublicAPIAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Comment 'get set' : 
  Methods:
    get_Comment(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.InstantHandleAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.PureAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.MustUseReturnValueAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Justification 'get set' : 
  Methods:
    get_Justification(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.ProvidesContextAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.PathReferenceAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String BasePath 'get set' : 
  Methods:
    get_BasePath(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.SourceTemplateAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.MacroAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Expression 'get set' : 
    Int32 Editable 'get set' : 
    System.String Target 'get set' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    set_Expression(String): PrivateScope, Public, HideBySig, SpecialName
    get_Editable(): PrivateScope, Public, HideBySig, SpecialName
    set_Editable(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    set_Target(String): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspMvcAreaMasterLocationFormatAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Format 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspMvcAreaPartialViewLocationFormatAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Format 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspMvcAreaViewLocationFormatAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Format 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspMvcMasterLocationFormatAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Format 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspMvcPartialViewLocationFormatAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Format 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspMvcViewLocationFormatAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Format 'get set' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspMvcActionAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AnonymousProperty 'get set' : 
  Methods:
    get_AnonymousProperty(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspMvcAreaAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AnonymousProperty 'get set' : 
  Methods:
    get_AnonymousProperty(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspMvcControllerAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AnonymousProperty 'get set' : 
  Methods:
    get_AnonymousProperty(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspMvcMasterAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMvcModelTypeAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMvcPartialViewAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMvcSuppressViewErrorAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMvcDisplayTemplateAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMvcEditorTemplateAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMvcTemplateAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMvcViewAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMvcViewComponentAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMvcViewComponentViewAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMvcActionSelectorAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.HtmlElementAttributesAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.HtmlAttributeValueAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.RazorSectionAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.CollectionAccessAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(JetBrains.Annotations.CollectionAccessType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    JetBrains.Annotations.CollectionAccessType CollectionAccessType 'get set' : 
  Methods:
    get_CollectionAccessType(): PrivateScope, Public, HideBySig, SpecialName
Struct JetBrains.Annotations.CollectionAccessType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    JetBrains.Annotations.CollectionAccessType None = 0 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.CollectionAccessType Read = 1 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.CollectionAccessType ModifyExistingContent = 2 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.CollectionAccessType UpdatedContent = 6 : Public, Static, Literal, HasDefault
Class JetBrains.Annotations.AssertionMethodAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AssertionConditionAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(JetBrains.Annotations.AssertionConditionType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    JetBrains.Annotations.AssertionConditionType ConditionType 'get set' : 
  Methods:
    get_ConditionType(): PrivateScope, Public, HideBySig, SpecialName
Struct JetBrains.Annotations.AssertionConditionType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    JetBrains.Annotations.AssertionConditionType IS_TRUE = 0 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.AssertionConditionType IS_FALSE = 1 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.AssertionConditionType IS_NULL = 2 : Public, Static, Literal, HasDefault
    JetBrains.Annotations.AssertionConditionType IS_NOT_NULL = 3 : Public, Static, Literal, HasDefault
Class JetBrains.Annotations.TerminatesProgramAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit (Obsolete)
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.LinqTunnelAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.NoEnumerationAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.RegexPatternAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.NoReorderAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.XamlItemsControlAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.XamlItemBindingOfItemsControlAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspChildControlTypeAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String TagName 'get set' : 
    System.Type ControlType 'get set' : 
  Methods:
    get_TagName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlType(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspDataFieldAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspDataFieldsAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspMethodPropertyAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.AspRequiredAttributeAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Attribute 'get set' : 
  Methods:
    get_Attribute(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.AspTypePropertyAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CreateConstructorReferences 'get set' : 
  Methods:
    get_CreateConstructorReferences(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.RazorImportNamespaceAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.RazorInjectionAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Type 'get set' : 
    System.String FieldName 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldName(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.RazorDirectiveAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Directive 'get set' : 
  Methods:
    get_Directive(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.RazorPageBaseTypeAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String BaseType 'get set' : 
    System.String PageName 'get set' : 
  Methods:
    get_BaseType(): PrivateScope, Public, HideBySig, SpecialName
    get_PageName(): PrivateScope, Public, HideBySig, SpecialName
Class JetBrains.Annotations.RazorHelperCommonAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.RazorLayoutAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.RazorWriteLiteralMethodAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.RazorWriteMethodAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class JetBrains.Annotations.RazorWriteMethodParameterAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Bulbul39A_CalibrationMap+MeasurmentMap_3D: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Bulbul39A_CalibrationMap+MeasurmentMap_2D
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MeasurmentMap_2D[] Table3D : Public
    Boolean isLoadRefGATable : Public
    Boolean isLoadRefPSTable : Public
    Boolean isLoadElementPSTable : Public
    Boolean isLoadCommonPSTable : Public
    Boolean isLoadElementGATable : Public
    Boolean isLoadCommonGATable : Public
    Int32 PhaseTotalStep = 64 : Public, Static, Literal, HasDefault
    Int32 ref_step = 32 : Public, Static, Literal, HasDefault
  Methods:
    Set_Reference_Gain_Table(Double[]): PrivateScope, Public, HideBySig
    Set_Reference_Phase_Table(Double[]): PrivateScope, Public, HideBySig
    Set_ElementPhase_Base_Table(Double[]): PrivateScope, Public, HideBySig
    Set_ElementGain_Base_Table(Double[]): PrivateScope, Public, HideBySig
    Set_CommonPhase_Base_Table(Double[]): PrivateScope, Public, HideBySig
    Set_CommonGain_Base_Table(Double[]): PrivateScope, Public, HideBySig
    Generate_AllTable(): PrivateScope, Public, HideBySig
    Search_CandidateMap(Int32): PrivateScope, Public, HideBySig
    isAngleInRange(Double, Double, Double): PrivateScope, Public, HideBySig
Class Bulbul39A_CalibrationMap+MeasurmentMap_2D: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Bulbul39A_CalibrationMap+MeasurmentUnit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    MeasurmentUnit[,] Table2D : Public
    Double min_deg : Public
    Double max_deg : Public
    Int32 GainTotalStep = 16 : Public, Static, Literal, HasDefault
  Methods:
    Generate_Table(Int32, Double[], Double[], Double[], Double[], Double[], Double[]): PrivateScope, Public, HideBySig
Class Bulbul39A_CalibrationMap+MeasurmentUnit: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double gain 'get set' : 
    Double phase 'get set' : 
  Methods:
    get_gain(): PrivateScope, Public, HideBySig, SpecialName
    set_gain(Double): PrivateScope, Public, HideBySig, SpecialName
    get_phase(): PrivateScope, Public, HideBySig, SpecialName
    set_phase(Double): PrivateScope, Public, HideBySig, SpecialName
Class CalibrationMap+Candidates_Set: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 channel 'get set' : 
    Int32 com_step 'get set' : 
    Int32 element_step 'get set' : 
    Int32 phase_step 'get set' : 
    Double measurement_db 'get set' : 
    Double measurement_deg 'get set' : 
    Double accumulate_error_rate 'get set' : 
    Double db_error_rate 'get set' : 
    Double deg_error_rate 'get set' : 
  Methods:
    get_channel(): PrivateScope, Public, HideBySig, SpecialName
    set_channel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_com_step(): PrivateScope, Public, HideBySig, SpecialName
    set_com_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_element_step(): PrivateScope, Public, HideBySig, SpecialName
    set_element_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_phase_step(): PrivateScope, Public, HideBySig, SpecialName
    set_phase_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_measurement_db(): PrivateScope, Public, HideBySig, SpecialName
    set_measurement_db(Double): PrivateScope, Public, HideBySig, SpecialName
    get_measurement_deg(): PrivateScope, Public, HideBySig, SpecialName
    set_measurement_deg(Double): PrivateScope, Public, HideBySig, SpecialName
    get_accumulate_error_rate(): PrivateScope, Public, HideBySig, SpecialName
    set_accumulate_error_rate(Double): PrivateScope, Public, HideBySig, SpecialName
    get_db_error_rate(): PrivateScope, Public, HideBySig, SpecialName
    set_db_error_rate(Double): PrivateScope, Public, HideBySig, SpecialName
    get_deg_error_rate(): PrivateScope, Public, HideBySig, SpecialName
    set_deg_error_rate(Double): PrivateScope, Public, HideBySig, SpecialName
Class Brute_CalibrationMap+PhiA_offset: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 module_number 'get set' : 
    Int32 IC_number 'get set' : 
    Int32 ch1_offset 'get set' : 
    Int32 ch2_offset 'get set' : 
    Int32 ch3_offset 'get set' : 
    Int32 ch4_offset 'get set' : 
  Methods:
    get_module_number(): PrivateScope, Public, HideBySig, SpecialName
    set_module_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IC_number(): PrivateScope, Public, HideBySig, SpecialName
    set_IC_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch1_offset(): PrivateScope, Public, HideBySig, SpecialName
    set_ch1_offset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch2_offset(): PrivateScope, Public, HideBySig, SpecialName
    set_ch2_offset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch3_offset(): PrivateScope, Public, HideBySig, SpecialName
    set_ch3_offset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch4_offset(): PrivateScope, Public, HideBySig, SpecialName
    set_ch4_offset(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Brute_CalibrationMap+TC_Param: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 module_number 'get set' : 
    Int32 IC_number 'get set' : 
    Int32 TX_C 'get set' : 
    Int32 TX_Q 'get set' : 
    Int32 RX_C 'get set' : 
    Int32 RX_Q 'get set' : 
  Methods:
    get_module_number(): PrivateScope, Public, HideBySig, SpecialName
    set_module_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IC_number(): PrivateScope, Public, HideBySig, SpecialName
    set_IC_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TX_C(): PrivateScope, Public, HideBySig, SpecialName
    set_TX_C(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TX_Q(): PrivateScope, Public, HideBySig, SpecialName
    set_TX_Q(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RX_C(): PrivateScope, Public, HideBySig, SpecialName
    set_RX_C(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RX_Q(): PrivateScope, Public, HideBySig, SpecialName
    set_RX_Q(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Brute_CalibrationMap+Element_DR: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 module_number 'get set' : 
    Int32 IC_number 'get set' : 
    Double ELE_DR 'get set' : 
  Methods:
    get_module_number(): PrivateScope, Public, HideBySig, SpecialName
    set_module_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IC_number(): PrivateScope, Public, HideBySig, SpecialName
    set_IC_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ELE_DR(): PrivateScope, Public, HideBySig, SpecialName
    set_ELE_DR(Double): PrivateScope, Public, HideBySig, SpecialName
Class Brute_CalibrationMap+Common_DR: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 module_number 'get set' : 
    Int32 IC_number 'get set' : 
    Double MAX_COM_GAIN 'get set' : 
    Double MIN_COM_GAIN 'get set' : 
  Methods:
    get_module_number(): PrivateScope, Public, HideBySig, SpecialName
    set_module_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IC_number(): PrivateScope, Public, HideBySig, SpecialName
    set_IC_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MAX_COM_GAIN(): PrivateScope, Public, HideBySig, SpecialName
    set_MAX_COM_GAIN(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MIN_COM_GAIN(): PrivateScope, Public, HideBySig, SpecialName
    set_MIN_COM_GAIN(Double): PrivateScope, Public, HideBySig, SpecialName
Class Brute_CalibrationMap+Common_Step_DR: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 module_number 'get set' : 
    Int32 IC_number 'get set' : 
    Int32 COM_STEP 'get set' : 
    Double MAX_GAIN 'get set' : 
    Double MIN_GAIN 'get set' : 
  Methods:
    get_module_number(): PrivateScope, Public, HideBySig, SpecialName
    set_module_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IC_number(): PrivateScope, Public, HideBySig, SpecialName
    set_IC_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_COM_STEP(): PrivateScope, Public, HideBySig, SpecialName
    set_COM_STEP(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MAX_GAIN(): PrivateScope, Public, HideBySig, SpecialName
    set_MAX_GAIN(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MIN_GAIN(): PrivateScope, Public, HideBySig, SpecialName
    set_MIN_GAIN(Double): PrivateScope, Public, HideBySig, SpecialName
    is_in_DR(Double): PrivateScope, Public, HideBySig
Class Brute_CalibrationMap+TEMP_ADC: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 module_number 'get set' : 
    Int32 IC_number 'get set' : 
    Int32 adc  'get set' : 
  Methods:
    get_module_number(): PrivateScope, Public, HideBySig, SpecialName
    set_module_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IC_number(): PrivateScope, Public, HideBySig, SpecialName
    set_IC_number(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_adc(): PrivateScope, Public, HideBySig, SpecialName
    set_adc(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Kirin40_BFIC_GEN+Step_settings: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 ch1_phase : Public
    Int32 ch2_phase : Public
    Int32 ch3_phase : Public
    Int32 ch4_phase : Public
    Int32 ch1_gain : Public
    Int32 ch2_gain : Public
    Int32 ch3_gain : Public
    Int32 ch4_gain : Public
    Int32 com_gain : Public
Class Beam_Pattern_Configuration+Beam_Pattern: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Int32, BBoxAPI.OPMODE, BBoxAPI.DEV_TYPE, Double, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 beamId 'get set' : 
    BBoxAPI.OPMODE mode 'get set' : 
    Double db  'get set' : 
    Int32 theta 'get set' : 
    Int32 phi  'get set' : 
    System.Collections.Generic.List`1[System.Int32] channel_switch 'get set' : 
    BBoxAPI.DEV_TYPE dev_type 'get set' : 
  Methods:
    get_beamId(): PrivateScope, Public, HideBySig, SpecialName
    set_beamId(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_mode(): PrivateScope, Public, HideBySig, SpecialName
    set_mode(OPMODE): PrivateScope, Public, HideBySig, SpecialName
    get_db(): PrivateScope, Public, HideBySig, SpecialName
    set_db(Double): PrivateScope, Public, HideBySig, SpecialName
    get_theta(): PrivateScope, Public, HideBySig, SpecialName
    set_theta(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_phi(): PrivateScope, Public, HideBySig, SpecialName
    set_phi(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_channel_switch(): PrivateScope, Public, HideBySig, SpecialName
    set_channel_switch(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_dev_type(): PrivateScope, Public, HideBySig, SpecialName
    set_dev_type(DEV_TYPE): PrivateScope, Public, HideBySig, SpecialName
Class Beam_Pattern_Configuration+User_Defined_BeamPattern: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Beam_Pattern_Configuration+Beam_Pattern
    Void .ctor(Int32, BBoxAPI.OPMODE, BBoxAPI.DEV_TYPE, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[System.Double] channel_db 'get set' : 
    System.Collections.Generic.List`1[System.Int32] channel_deg 'get set' : 
  Methods:
    get_channel_db(): PrivateScope, Public, HideBySig, SpecialName
    set_channel_db(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_channel_deg(): PrivateScope, Public, HideBySig, SpecialName
    set_channel_deg(List`1): PrivateScope, Public, HideBySig, SpecialName
Class Beam_Pattern_Configuration+Beam_Configuration: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String version 'get set' : 
    System.String SN 'get set' : 
    System.Collections.Generic.List`1[Beam_Pattern_Configuration+Beam_Pattern] TX_beam_list 'get set' : 
    System.Collections.Generic.List`1[Beam_Pattern_Configuration+Beam_Pattern] RX_beam_list 'get set' : 
  Methods:
    get_version(): PrivateScope, Public, HideBySig, SpecialName
    set_version(String): PrivateScope, Public, HideBySig, SpecialName
    get_SN(): PrivateScope, Public, HideBySig, SpecialName
    set_SN(String): PrivateScope, Public, HideBySig, SpecialName
    get_TX_beam_list(): PrivateScope, Public, HideBySig, SpecialName
    set_TX_beam_list(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_RX_beam_list(): PrivateScope, Public, HideBySig, SpecialName
    set_RX_beam_list(List`1): PrivateScope, Public, HideBySig, SpecialName
Class Beam_Pattern_Configuration+User_Beam_Configuration: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String version 'get set' : 
    System.String SN 'get set' : 
    System.Collections.Generic.List`1[Beam_Pattern_Configuration+User_Defined_BeamPattern] TX_beam_list 'get set' : 
    System.Collections.Generic.List`1[Beam_Pattern_Configuration+User_Defined_BeamPattern] RX_beam_list 'get set' : 
  Methods:
    get_version(): PrivateScope, Public, HideBySig, SpecialName
    set_version(String): PrivateScope, Public, HideBySig, SpecialName
    get_SN(): PrivateScope, Public, HideBySig, SpecialName
    set_SN(String): PrivateScope, Public, HideBySig, SpecialName
    get_TX_beam_list(): PrivateScope, Public, HideBySig, SpecialName
    set_TX_beam_list(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_RX_beam_list(): PrivateScope, Public, HideBySig, SpecialName
    set_RX_beam_list(List`1): PrivateScope, Public, HideBySig, SpecialName
Class Beam_Pattern_Configuration+IC_Step_Configuration: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.String, BBoxAPI.OPMODE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SN 'get set' : 
    BBoxAPI.OPMODE mode 'get set' : 
    Int32 ch1_switch 'get set' : 
    Int32 ch2_switch 'get set' : 
    Int32 ch3_switch 'get set' : 
    Int32 ch4_switch 'get set' : 
    Int32 ch1_gain_step 'get set' : 
    Int32 ch2_gain_step 'get set' : 
    Int32 ch3_gain_step 'get set' : 
    Int32 ch4_gain_step 'get set' : 
    Int32 com_gain_step 'get set' : 
    Int32 ch1_phase_step 'get set' : 
    Int32 ch2_phase_step 'get set' : 
    Int32 ch3_phase_step 'get set' : 
    Int32 ch4_phase_step 'get set' : 
  Methods:
    get_SN(): PrivateScope, Public, HideBySig, SpecialName
    set_SN(String): PrivateScope, Public, HideBySig, SpecialName
    get_mode(): PrivateScope, Public, HideBySig, SpecialName
    set_mode(OPMODE): PrivateScope, Public, HideBySig, SpecialName
    get_ch1_switch(): PrivateScope, Public, HideBySig, SpecialName
    set_ch1_switch(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch2_switch(): PrivateScope, Public, HideBySig, SpecialName
    set_ch2_switch(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch3_switch(): PrivateScope, Public, HideBySig, SpecialName
    set_ch3_switch(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch4_switch(): PrivateScope, Public, HideBySig, SpecialName
    set_ch4_switch(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch1_gain_step(): PrivateScope, Public, HideBySig, SpecialName
    set_ch1_gain_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch2_gain_step(): PrivateScope, Public, HideBySig, SpecialName
    set_ch2_gain_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch3_gain_step(): PrivateScope, Public, HideBySig, SpecialName
    set_ch3_gain_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch4_gain_step(): PrivateScope, Public, HideBySig, SpecialName
    set_ch4_gain_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_com_gain_step(): PrivateScope, Public, HideBySig, SpecialName
    set_com_gain_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch1_phase_step(): PrivateScope, Public, HideBySig, SpecialName
    set_ch1_phase_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch2_phase_step(): PrivateScope, Public, HideBySig, SpecialName
    set_ch2_phase_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch3_phase_step(): PrivateScope, Public, HideBySig, SpecialName
    set_ch3_phase_step(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ch4_phase_step(): PrivateScope, Public, HideBySig, SpecialName
    set_ch4_phase_step(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Beam_Pattern_Configuration+StatusMessage: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(BBoxAPI.retCode, System.String, Beam_Pattern): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BBoxAPI.retCode Return_Code 'get set' : 
    System.String Error_Message 'get set' : 
    Beam_Pattern data 'get set' : 
  Methods:
    get_Return_Code(): PrivateScope, Public, HideBySig, SpecialName
    set_Return_Code(retCode): PrivateScope, Public, HideBySig, SpecialName
    get_Error_Message(): PrivateScope, Public, HideBySig, SpecialName
    set_Error_Message(String): PrivateScope, Public, HideBySig, SpecialName
    get_data(): PrivateScope, Public, HideBySig, SpecialName
    set_data(Beam_Pattern): PrivateScope, Public, HideBySig, SpecialName
Class DeviceConfiguration+Software_Version: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FW_version 'get set' : 
    System.String API_version 'get set' : 
    System.String Calibration_version 'get set' : 
  Methods:
    get_FW_version(): PrivateScope, Public, HideBySig, SpecialName
    set_FW_version(String): PrivateScope, Public, HideBySig, SpecialName
    get_API_version(): PrivateScope, Public, HideBySig, SpecialName
    set_API_version(String): PrivateScope, Public, HideBySig, SpecialName
    get_Calibration_version(): PrivateScope, Public, HideBySig, SpecialName
    set_Calibration_version(String): PrivateScope, Public, HideBySig, SpecialName
Struct BBoxAPI.BBoxLiteAPI+TxRxMode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TxRxMode Er = -1 : Public, Static, Literal, HasDefault
    TxRxMode Tx = 0 : Public, Static, Literal, HasDefault
    TxRxMode Rx = 1 : Public, Static, Literal, HasDefault
Struct FTD2XX_NET.FTDI+FT_STATUS: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    FT_STATUS FT_OK = 0 : Public, Static, Literal, HasDefault
    FT_STATUS FT_INVALID_HANDLE = 1 : Public, Static, Literal, HasDefault
    FT_STATUS FT_DEVICE_NOT_FOUND = 2 : Public, Static, Literal, HasDefault
    FT_STATUS FT_DEVICE_NOT_OPENED = 3 : Public, Static, Literal, HasDefault
    FT_STATUS FT_IO_ERROR = 4 : Public, Static, Literal, HasDefault
    FT_STATUS FT_INSUFFICIENT_RESOURCES = 5 : Public, Static, Literal, HasDefault
    FT_STATUS FT_INVALID_PARAMETER = 6 : Public, Static, Literal, HasDefault
    FT_STATUS FT_INVALID_BAUD_RATE = 7 : Public, Static, Literal, HasDefault
    FT_STATUS FT_DEVICE_NOT_OPENED_FOR_ERASE = 8 : Public, Static, Literal, HasDefault
    FT_STATUS FT_DEVICE_NOT_OPENED_FOR_WRITE = 9 : Public, Static, Literal, HasDefault
    FT_STATUS FT_FAILED_TO_WRITE_DEVICE = 10 : Public, Static, Literal, HasDefault
    FT_STATUS FT_EEPROM_READ_FAILED = 11 : Public, Static, Literal, HasDefault
    FT_STATUS FT_EEPROM_WRITE_FAILED = 12 : Public, Static, Literal, HasDefault
    FT_STATUS FT_EEPROM_ERASE_FAILED = 13 : Public, Static, Literal, HasDefault
    FT_STATUS FT_EEPROM_NOT_PRESENT = 14 : Public, Static, Literal, HasDefault
    FT_STATUS FT_EEPROM_NOT_PROGRAMMED = 15 : Public, Static, Literal, HasDefault
    FT_STATUS FT_INVALID_ARGS = 16 : Public, Static, Literal, HasDefault
    FT_STATUS FT_OTHER_ERROR = 17 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_DATA_BITS: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_BITS_8 = 8 : Public, Static, Literal, HasDefault
    Byte FT_BITS_7 = 7 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_STOP_BITS: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_STOP_BITS_1 = 0 : Public, Static, Literal, HasDefault
    Byte FT_STOP_BITS_2 = 2 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_PARITY: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_PARITY_NONE = 0 : Public, Static, Literal, HasDefault
    Byte FT_PARITY_ODD = 1 : Public, Static, Literal, HasDefault
    Byte FT_PARITY_EVEN = 2 : Public, Static, Literal, HasDefault
    Byte FT_PARITY_MARK = 3 : Public, Static, Literal, HasDefault
    Byte FT_PARITY_SPACE = 4 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_FLOW_CONTROL: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt16 FT_FLOW_NONE = 0 : Public, Static, Literal, HasDefault
    UInt16 FT_FLOW_RTS_CTS = 256 : Public, Static, Literal, HasDefault
    UInt16 FT_FLOW_DTR_DSR = 512 : Public, Static, Literal, HasDefault
    UInt16 FT_FLOW_XON_XOFF = 1024 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_PURGE: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_PURGE_RX = 1 : Public, Static, Literal, HasDefault
    Byte FT_PURGE_TX = 2 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_MODEM_STATUS: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_CTS = 16 : Public, Static, Literal, HasDefault
    Byte FT_DSR = 32 : Public, Static, Literal, HasDefault
    Byte FT_RI = 64 : Public, Static, Literal, HasDefault
    Byte FT_DCD = 128 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_LINE_STATUS: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_OE = 2 : Public, Static, Literal, HasDefault
    Byte FT_PE = 4 : Public, Static, Literal, HasDefault
    Byte FT_FE = 8 : Public, Static, Literal, HasDefault
    Byte FT_BI = 16 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_EVENTS: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 FT_EVENT_RXCHAR = 1 : Public, Static, Literal, HasDefault
    UInt32 FT_EVENT_MODEM_STATUS = 2 : Public, Static, Literal, HasDefault
    UInt32 FT_EVENT_LINE_STATUS = 4 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_BIT_MODES: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_BIT_MODE_RESET = 0 : Public, Static, Literal, HasDefault
    Byte FT_BIT_MODE_ASYNC_BITBANG = 1 : Public, Static, Literal, HasDefault
    Byte FT_BIT_MODE_MPSSE = 2 : Public, Static, Literal, HasDefault
    Byte FT_BIT_MODE_SYNC_BITBANG = 4 : Public, Static, Literal, HasDefault
    Byte FT_BIT_MODE_MCU_HOST = 8 : Public, Static, Literal, HasDefault
    Byte FT_BIT_MODE_FAST_SERIAL = 16 : Public, Static, Literal, HasDefault
    Byte FT_BIT_MODE_CBUS_BITBANG = 32 : Public, Static, Literal, HasDefault
    Byte FT_BIT_MODE_SYNC_FIFO = 64 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_CBUS_OPTIONS: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_CBUS_TXDEN = 0 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_PWRON = 1 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_RXLED = 2 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_TXLED = 3 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_TXRXLED = 4 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_SLEEP = 5 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_CLK48 = 6 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_CLK24 = 7 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_CLK12 = 8 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_CLK6 = 9 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_IOMODE = 10 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_BITBANG_WR = 11 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_BITBANG_RD = 12 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_232H_CBUS_OPTIONS: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_CBUS_TRISTATE = 0 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_RXLED = 1 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_TXLED = 2 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_TXRXLED = 3 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_PWREN = 4 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_SLEEP = 5 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_DRIVE_0 = 6 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_DRIVE_1 = 7 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_IOMODE = 8 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_TXDEN = 9 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_CLK30 = 10 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_CLK15 = 11 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_CLK7_5 = 12 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_XSERIES_CBUS_OPTIONS: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_CBUS_TRISTATE = 0 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_RXLED = 1 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_TXLED = 2 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_TXRXLED = 3 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_PWREN = 4 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_SLEEP = 5 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_Drive_0 = 6 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_Drive_1 = 7 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_GPIO = 8 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_TXDEN = 9 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_CLK24MHz = 10 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_CLK12MHz = 11 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_CLK6MHz = 12 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_BCD_Charger = 13 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_BCD_Charger_N = 14 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_I2C_TXE = 15 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_I2C_RXF = 16 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_VBUS_Sense = 17 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_BitBang_WR = 18 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_BitBang_RD = 19 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_Time_Stamp = 20 : Public, Static, Literal, HasDefault
    Byte FT_CBUS_Keep_Awake = 21 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_FLAGS: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 FT_FLAGS_OPENED = 1 : Public, Static, Literal, HasDefault
    UInt32 FT_FLAGS_HISPEED = 2 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_DRIVE_CURRENT: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte FT_DRIVE_CURRENT_4MA = 4 : Public, Static, Literal, HasDefault
    Byte FT_DRIVE_CURRENT_8MA = 8 : Public, Static, Literal, HasDefault
    Byte FT_DRIVE_CURRENT_12MA = 12 : Public, Static, Literal, HasDefault
    Byte FT_DRIVE_CURRENT_16MA = 16 : Public, Static, Literal, HasDefault
Struct FTD2XX_NET.FTDI+FT_DEVICE: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    FT_DEVICE FT_DEVICE_BM = 0 : Public, Static, Literal, HasDefault
    FT_DEVICE FT_DEVICE_AM = 1 : Public, Static, Literal, HasDefault
    FT_DEVICE FT_DEVICE_100AX = 2 : Public, Static, Literal, HasDefault
    FT_DEVICE FT_DEVICE_UNKNOWN = 3 : Public, Static, Literal, HasDefault
    FT_DEVICE FT_DEVICE_2232 = 4 : Public, Static, Literal, HasDefault
    FT_DEVICE FT_DEVICE_232R = 5 : Public, Static, Literal, HasDefault
    FT_DEVICE FT_DEVICE_2232H = 6 : Public, Static, Literal, HasDefault
    FT_DEVICE FT_DEVICE_4232H = 7 : Public, Static, Literal, HasDefault
    FT_DEVICE FT_DEVICE_232H = 8 : Public, Static, Literal, HasDefault
    FT_DEVICE FT_DEVICE_X_SERIES = 9 : Public, Static, Literal, HasDefault
Class FTD2XX_NET.FTDI+FT_DEVICE_INFO_NODE: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 Flags : Public
    FT_DEVICE Type : Public
    UInt32 ID : Public
    UInt32 LocId : Public
    System.String SerialNumber : Public
    System.String Description : Public
    IntPtr ftHandle : Public
Class FTD2XX_NET.FTDI+FT_EEPROM_DATA: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt16 VendorID : Public
    UInt16 ProductID : Public
    System.String Manufacturer : Public
    System.String ManufacturerID : Public
    System.String Description : Public
    System.String SerialNumber : Public
    UInt16 MaxPower : Public
    Boolean SelfPowered : Public
    Boolean RemoteWakeup : Public
Class FTD2XX_NET.FTDI+FT232B_EEPROM_STRUCTURE: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :FTD2XX_NET.FTDI+FT_EEPROM_DATA
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean PullDownEnable : Public
    Boolean SerNumEnable : Public
    Boolean USBVersionEnable : Public
    UInt16 USBVersion : Public
Class FTD2XX_NET.FTDI+FT2232_EEPROM_STRUCTURE: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :FTD2XX_NET.FTDI+FT_EEPROM_DATA
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean PullDownEnable : Public
    Boolean SerNumEnable : Public
    Boolean USBVersionEnable : Public
    UInt16 USBVersion : Public
    Boolean AIsHighCurrent : Public
    Boolean BIsHighCurrent : Public
    Boolean IFAIsFifo : Public
    Boolean IFAIsFifoTar : Public
    Boolean IFAIsFastSer : Public
    Boolean AIsVCP : Public
    Boolean IFBIsFifo : Public
    Boolean IFBIsFifoTar : Public
    Boolean IFBIsFastSer : Public
    Boolean BIsVCP : Public
Class FTD2XX_NET.FTDI+FT232R_EEPROM_STRUCTURE: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :FTD2XX_NET.FTDI+FT_EEPROM_DATA
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean UseExtOsc : Public
    Boolean HighDriveIOs : Public
    Byte EndpointSize : Public
    Boolean PullDownEnable : Public
    Boolean SerNumEnable : Public
    Boolean InvertTXD : Public
    Boolean InvertRXD : Public
    Boolean InvertRTS : Public
    Boolean InvertCTS : Public
    Boolean InvertDTR : Public
    Boolean InvertDSR : Public
    Boolean InvertDCD : Public
    Boolean InvertRI : Public
    Byte Cbus0 : Public
    Byte Cbus1 : Public
    Byte Cbus2 : Public
    Byte Cbus3 : Public
    Byte Cbus4 : Public
    Boolean RIsD2XX : Public
Class FTD2XX_NET.FTDI+FT2232H_EEPROM_STRUCTURE: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :FTD2XX_NET.FTDI+FT_EEPROM_DATA
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean PullDownEnable : Public
    Boolean SerNumEnable : Public
    Boolean ALSlowSlew : Public
    Boolean ALSchmittInput : Public
    Byte ALDriveCurrent : Public
    Boolean AHSlowSlew : Public
    Boolean AHSchmittInput : Public
    Byte AHDriveCurrent : Public
    Boolean BLSlowSlew : Public
    Boolean BLSchmittInput : Public
    Byte BLDriveCurrent : Public
    Boolean BHSlowSlew : Public
    Boolean BHSchmittInput : Public
    Byte BHDriveCurrent : Public
    Boolean IFAIsFifo : Public
    Boolean IFAIsFifoTar : Public
    Boolean IFAIsFastSer : Public
    Boolean AIsVCP : Public
    Boolean IFBIsFifo : Public
    Boolean IFBIsFifoTar : Public
    Boolean IFBIsFastSer : Public
    Boolean BIsVCP : Public
    Boolean PowerSaveEnable : Public
Class FTD2XX_NET.FTDI+FT4232H_EEPROM_STRUCTURE: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :FTD2XX_NET.FTDI+FT_EEPROM_DATA
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean PullDownEnable : Public
    Boolean SerNumEnable : Public
    Boolean ASlowSlew : Public
    Boolean ASchmittInput : Public
    Byte ADriveCurrent : Public
    Boolean BSlowSlew : Public
    Boolean BSchmittInput : Public
    Byte BDriveCurrent : Public
    Boolean CSlowSlew : Public
    Boolean CSchmittInput : Public
    Byte CDriveCurrent : Public
    Boolean DSlowSlew : Public
    Boolean DSchmittInput : Public
    Byte DDriveCurrent : Public
    Boolean ARIIsTXDEN : Public
    Boolean BRIIsTXDEN : Public
    Boolean CRIIsTXDEN : Public
    Boolean DRIIsTXDEN : Public
    Boolean AIsVCP : Public
    Boolean BIsVCP : Public
    Boolean CIsVCP : Public
    Boolean DIsVCP : Public
Class FTD2XX_NET.FTDI+FT232H_EEPROM_STRUCTURE: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :FTD2XX_NET.FTDI+FT_EEPROM_DATA
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean PullDownEnable : Public
    Boolean SerNumEnable : Public
    Boolean ACSlowSlew : Public
    Boolean ACSchmittInput : Public
    Byte ACDriveCurrent : Public
    Boolean ADSlowSlew : Public
    Boolean ADSchmittInput : Public
    Byte ADDriveCurrent : Public
    Byte Cbus0 : Public
    Byte Cbus1 : Public
    Byte Cbus2 : Public
    Byte Cbus3 : Public
    Byte Cbus4 : Public
    Byte Cbus5 : Public
    Byte Cbus6 : Public
    Byte Cbus7 : Public
    Byte Cbus8 : Public
    Byte Cbus9 : Public
    Boolean IsFifo : Public
    Boolean IsFifoTar : Public
    Boolean IsFastSer : Public
    Boolean IsFT1248 : Public
    Boolean FT1248Cpol : Public
    Boolean FT1248Lsb : Public
    Boolean FT1248FlowControl : Public
    Boolean IsVCP : Public
    Boolean PowerSaveEnable : Public
Class FTD2XX_NET.FTDI+FT_XSERIES_EEPROM_STRUCTURE: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :FTD2XX_NET.FTDI+FT_EEPROM_DATA
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean PullDownEnable : Public
    Boolean SerNumEnable : Public
    Boolean USBVersionEnable : Public
    UInt16 USBVersion : Public
    Byte ACSlowSlew : Public
    Byte ACSchmittInput : Public
    Byte ACDriveCurrent : Public
    Byte ADSlowSlew : Public
    Byte ADSchmittInput : Public
    Byte ADDriveCurrent : Public
    Byte Cbus0 : Public
    Byte Cbus1 : Public
    Byte Cbus2 : Public
    Byte Cbus3 : Public
    Byte Cbus4 : Public
    Byte Cbus5 : Public
    Byte Cbus6 : Public
    Byte InvertTXD : Public
    Byte InvertRXD : Public
    Byte InvertRTS : Public
    Byte InvertCTS : Public
    Byte InvertDTR : Public
    Byte InvertDSR : Public
    Byte InvertDCD : Public
    Byte InvertRI : Public
    Byte BCDEnable : Public
    Byte BCDForceCbusPWREN : Public
    Byte BCDDisableSleep : Public
    UInt16 I2CSlaveAddress : Public
    UInt32 I2CDeviceId : Public
    Byte I2CDisableSchmitt : Public
    Byte FT1248Cpol : Public
    Byte FT1248Lsb : Public
    Byte FT1248FlowControl : Public
    Byte RS485EchoSuppress : Public
    Byte PowerSaveEnable : Public
    Byte IsVCP : Public
Class FTD2XX_NET.FTDI+FT_EXCEPTION: AutoLayout, AnsiClass, Class, NestedPublic, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MPSSELight.FtdiDevice+DataTransferEvent: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Byte[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class MPSSELight.MpsseDevice+MpsseParams: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 transferSize : Public
    Byte EventChar : Public
    Boolean EventCharEnable : Public
    Byte ErrorChar : Public
    Boolean ErrorCharEnable : Public
    UInt32 ReadTimeout : Public
    UInt32 WriteTimeout : Public
    Byte Latency : Public
    UInt16 clockDevisor : Public
    DataTransferEvent DataReadEvent : Public
    DataTransferEvent DataWriteEvent : Public
Struct MPSSELight.SpiDevice+SpiMode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SpiMode Mode0 = 0 : Public, Static, Literal, HasDefault
    SpiMode Mode2 = 1 : Public, Static, Literal, HasDefault
Struct MPSSELight.SpiDevice+CsPolicy: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CsPolicy CsActiveLow = 0 : Public, Static, Literal, HasDefault
    CsPolicy CsActiveHigh = 1 : Public, Static, Literal, HasDefault
    CsPolicy CsDefaultLow = 2 : Public, Static, Literal, HasDefault
    CsPolicy CsDefaultHigh = 3 : Public, Static, Literal, HasDefault
Class MPSSELight.SpiDevice+SpiParams: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    SpiMode Mode : Public
    MPSSELight.FtdiPin ChipSelect : Public
    CsPolicy ChipSelectPolicy : Public
Struct Newtonsoft.Json.JsonReader+State: AutoLayout, AnsiClass, Class, VisibilityMask, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    State Start = 0 : Public, Static, Literal, HasDefault
    State Complete = 1 : Public, Static, Literal, HasDefault
    State Property = 2 : Public, Static, Literal, HasDefault
    State ObjectStart = 3 : Public, Static, Literal, HasDefault
    State Object = 4 : Public, Static, Literal, HasDefault
    State ArrayStart = 5 : Public, Static, Literal, HasDefault
    State Array = 6 : Public, Static, Literal, HasDefault
    State Closed = 7 : Public, Static, Literal, HasDefault
    State PostValue = 8 : Public, Static, Literal, HasDefault
    State ConstructorStart = 9 : Public, Static, Literal, HasDefault
    State Constructor = 10 : Public, Static, Literal, HasDefault
    State Error = 11 : Public, Static, Literal, HasDefault
    State Finished = 12 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.JsonWriter+State: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    State Start = 0 : Public, Static, Literal, HasDefault
    State Property = 1 : Public, Static, Literal, HasDefault
    State ObjectStart = 2 : Public, Static, Literal, HasDefault
    State Object = 3 : Public, Static, Literal, HasDefault
    State ArrayStart = 4 : Public, Static, Literal, HasDefault
    State Array = 5 : Public, Static, Literal, HasDefault
    State ConstructorStart = 6 : Public, Static, Literal, HasDefault
    State Constructor = 7 : Public, Static, Literal, HasDefault
    State Closed = 8 : Public, Static, Literal, HasDefault
    State Error = 9 : Public, Static, Literal, HasDefault
Struct Newtonsoft.Json.Utilities.ConvertUtils+ConvertResult: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ConvertResult Success = 0 : Public, Static, Literal, HasDefault
    ConvertResult CannotConvertNull = 1 : Public, Static, Literal, HasDefault
    ConvertResult NotInstantiableType = 2 : Public, Static, Literal, HasDefault
    ConvertResult NoValidConversion = 3 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Utilities.DynamicUtils+BinderWrapper: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String CSharpAssemblyName = Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Public, Static, Literal, HasDefault
  Methods:
    GetMember(String, Type): PrivateScope, Public, Static, HideBySig
    SetMember(String, Type): PrivateScope, Public, Static, HideBySig
Class Newtonsoft.Json.Utilities.ImmutableCollectionsUtils+ImmutableCollectionTypeInfo: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ContractTypeName 'get set' : 
    System.String CreatedTypeName 'get set' : 
    System.String BuilderTypeName 'get set' : 
  Methods:
    get_ContractTypeName(): PrivateScope, Public, HideBySig, SpecialName
    set_ContractTypeName(String): PrivateScope, Public, HideBySig, SpecialName
    get_CreatedTypeName(): PrivateScope, Public, HideBySig, SpecialName
    set_CreatedTypeName(String): PrivateScope, Public, HideBySig, SpecialName
    get_BuilderTypeName(): PrivateScope, Public, HideBySig, SpecialName
    set_BuilderTypeName(String): PrivateScope, Public, HideBySig, SpecialName
Class Newtonsoft.Json.Serialization.DefaultContractResolver+EnumerableDictionaryWrapper`2[TEnumeratorKey,TEnumeratorValue]: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  Type parameter: TEnumeratorKey
  Type parameter: TEnumeratorValue
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TEnumeratorKey,TEnumeratorValue]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.Object,System.Object]]
    System.Collections.IEnumerable
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Newtonsoft.Json.Serialization.JsonSerializerInternalReader+PropertyPresence: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    PropertyPresence None = 0 : Public, Static, Literal, HasDefault
    PropertyPresence Null = 1 : Public, Static, Literal, HasDefault
    PropertyPresence Value = 2 : Public, Static, Literal, HasDefault
Class Newtonsoft.Json.Serialization.JsonSerializerInternalReader+CreatorPropertyContext: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public, InitOnly
    Newtonsoft.Json.Serialization.JsonProperty Property : Public
    Newtonsoft.Json.Serialization.JsonProperty ConstructorProperty : Public
    System.Nullable`1[Newtonsoft.Json.Serialization.JsonSerializerInternalReader+PropertyPresence] Presence : Public
    System.Object Value : Public
    Boolean Used : Public
Class Newtonsoft.Json.Converters.DiscriminatedUnionConverter+Union: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Newtonsoft.Json.Utilities.FSharpFunction, System.Collections.Generic.List`1[Newtonsoft.Json.Converters.DiscriminatedUnionConverter+UnionCase]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Newtonsoft.Json.Utilities.FSharpFunction TagReader : Public, InitOnly
    System.Collections.Generic.List`1[Newtonsoft.Json.Converters.DiscriminatedUnionConverter+UnionCase] Cases : Public, InitOnly
Class Newtonsoft.Json.Converters.DiscriminatedUnionConverter+UnionCase: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(Int32, System.String, System.Reflection.PropertyInfo[], Newtonsoft.Json.Utilities.FSharpFunction, Newtonsoft.Json.Utilities.FSharpFunction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Tag : Public, InitOnly
    System.String Name : Public, InitOnly
    System.Reflection.PropertyInfo[] Fields : Public, InitOnly
    Newtonsoft.Json.Utilities.FSharpFunction FieldReader : Public, InitOnly
    Newtonsoft.Json.Utilities.FSharpFunction Constructor : Public, InitOnly
Class NLog.LogManager+GetCultureInfo: AutoLayout, AnsiClass, Class, NestedPublic, Sealed (Obsolete)
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface NLog.Targets.EventLogTarget+IEventLogWrapper: AutoLayout, AnsiClass, Class, NestedAssembly, ClassSemanticsMask, Abstract
  Properties:
    System.String Source 'get ' : 
    System.String Log 'get ' : 
    System.String MachineName 'get ' : 
    Int64 MaximumKilobytes 'get set' : 
    Boolean IsEventLogAssociated 'get ' : 
  Methods:
    get_Source(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Log(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MachineName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MaximumKilobytes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MaximumKilobytes(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsEventLogAssociated(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    WriteEntry(String, EventLogEntryType, Int32, Int16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AssociateNewEventLog(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteEventSource(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SourceExists(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LogNameFromSourceName(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateEventSource(EventSourceCreationData): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NLog.Targets.LineEndingMode+LineEndingModeConverter: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
Class NLog.Targets.Wrappers.ImpersonatingTargetWrapper+ContextReverter: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed, BeforeFieldInit
    Void .ctor(System.Security.Principal.WindowsImpersonationContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Targets.FileArchiveModes.FileArchiveModeBase+FileNameTemplate: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String PatternStartCharacters = {# : Public, Static, Literal, HasDefault
    System.String PatternEndCharacters = #} : Public, Static, Literal, HasDefault
  Properties:
    System.String Template 'get set' : 
    Int32 BeginAt 'get set' : 
    Int32 EndAt 'get set' : 
  Methods:
    get_Template(): PrivateScope, Public, HideBySig, SpecialName
    get_BeginAt(): PrivateScope, Public, HideBySig, SpecialName
    get_EndAt(): PrivateScope, Public, HideBySig, SpecialName
    ReplacePattern(String): PrivateScope, Public, HideBySig
Struct NLog.LayoutRenderers.Wrappers.CachedLayoutRendererWrapper+ClearCacheOption: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ClearCacheOption None = 0 : Public, Static, Literal, HasDefault
    ClearCacheOption OnInit = 1 : Public, Static, Literal, HasDefault
    ClearCacheOption OnClose = 2 : Public, Static, Literal, HasDefault
Class NLog.LayoutRenderers.Wrappers.ReplaceLayoutRendererWrapper+Replacer: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit (Obsolete)
    Void .ctor(System.String, System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    EvaluateMatch(Match): PrivateScope, Assembly, HideBySig
Struct NLog.Internal.DictionaryEntryEnumerable+DictionaryEntryEnumerator: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.Collections.DictionaryEntry]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Collections.DictionaryEntry Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Internal.ObjectReflectionCache+ObjectPropertyList: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Object, System.Reflection.PropertyInfo[], FastPropertyLookup[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IDictionary`2[System.String,System.Object]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[NLog.Internal.ObjectReflectionCache+ObjectPropertyList+PropertyValue]
    System.Collections.IEnumerable
  Fields:
    System.StringComparer NameComparer : Assembly, Static, InitOnly
  Properties:
    Boolean ConvertToString 'get ' : 
  Methods:
    get_ConvertToString(): PrivateScope, Public, HideBySig, SpecialName
    TryGetPropertyValue(String, PropertyValue&(Out)): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
Struct NLog.Internal.ObjectReflectionCache+FastPropertyLookup: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, System.TypeCode, LateBoundMethod): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public, InitOnly
    LateBoundMethod ValueLookup : Public, InitOnly
    System.TypeCode TypeCode : Public, InitOnly
    Int32 NameHashCode : Public, InitOnly
Class NLog.Internal.ObjectReflectionCache+DictionaryEnumerator`2[TKey,TValue]: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NLog.Internal.ObjectReflectionCache+IDictionaryEnumerator
  Methods:
    GetEnumerator(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.ReflectionHelpers+LateBoundMethod: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, Object[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.ReflectionHelpers+LateBoundMethodSingle: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Internal.ReusableObjectCreator`1+LockOject[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T,  ReferenceType
  :System.ValueType
    Void .ctor(NLog.Internal.ReusableObjectCreator`1[T], T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    T Result : Public, InitOnly
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Internal.SingleItemOptimizedHashSet`1+SingleItemScopedInsert[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(T, NLog.Internal.SingleItemOptimizedHashSet`1[T] ByRef, Boolean, System.Collections.Generic.IEqualityComparer`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NLog.Internal.SingleItemOptimizedHashSet`1+ReferenceEqualityComparer[T]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[T]
  Fields:
    ReferenceEqualityComparer Default : Public, Static, InitOnly
Class NLog.Internal.SortHelpers+KeySelector`2[TValue,TKey]: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  Type parameter: TValue,  Contravariant
  Type parameter: TKey,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(TValue, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Internal.SortHelpers+ReadOnlySingleBucketDictionary`2[TKey,TValue]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  :System.ValueType
    Void .ctor(System.Collections.Generic.KeyValuePair`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.Dictionary`2[TKey,TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.KeyValuePair`2[TKey,TValue], System.Collections.Generic.IEqualityComparer`1[TKey]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.Dictionary`2[TKey,TValue], System.Collections.Generic.IEqualityComparer`1[TKey]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[TKey,TValue]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.Collections.IEnumerable
  Properties:
    System.Collections.Generic.IEqualityComparer`1[TKey] Comparer 'get ' : 
    Int32 Count 'get ' : 
    System.Collections.Generic.ICollection`1[TKey] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[TValue] Values 'get ' : 
    Boolean IsReadOnly 'get ' : 
    TValue Item [TKey] 'get set' : 
  Methods:
    get_Comparer(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
    ContainsKey(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(TKey, TValue): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(TKey, TValue&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(KeyValuePair`2[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Internal.StringBuilderPool+ItemHolder: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Text.StringBuilder, NLog.Internal.StringBuilderPool, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Text.StringBuilder Item : Public, InitOnly
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Internal.ThreadSafeDictionary`2+Enumerator[TKey,TValue]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  :System.ValueType
    Void .ctor(Enumerator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Collections.Generic.KeyValuePair`2[TKey,TValue] Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Internal.UrlHelper+EscapeEncodingOptions: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EscapeEncodingOptions None = 0 : Public, Static, Literal, HasDefault
    EscapeEncodingOptions UriString = 1 : Public, Static, Literal, HasDefault
    EscapeEncodingOptions LegacyRfc2396 = 2 : Public, Static, Literal, HasDefault
    EscapeEncodingOptions LowerCaseHex = 4 : Public, Static, Literal, HasDefault
    EscapeEncodingOptions SpaceAsPlus = 8 : Public, Static, Literal, HasDefault
    EscapeEncodingOptions NLogLegacy = 23 : Public, Static, Literal, HasDefault
Struct NLog.Internal.Win32FileNativeMethods+FileAccess: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    FileAccess GenericRead = 2147483648 : Public, Static, Literal, HasDefault
    FileAccess GenericWrite = 1073741824 : Public, Static, Literal, HasDefault
    FileAccess GenericExecute = 536870912 : Public, Static, Literal, HasDefault
    FileAccess GenericAll = 268435456 : Public, Static, Literal, HasDefault
Struct NLog.Internal.Win32FileNativeMethods+CreationDisposition: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    CreationDisposition New = 1 : Public, Static, Literal, HasDefault
    CreationDisposition CreateAlways = 2 : Public, Static, Literal, HasDefault
    CreationDisposition OpenExisting = 3 : Public, Static, Literal, HasDefault
    CreationDisposition OpenAlways = 4 : Public, Static, Literal, HasDefault
    CreationDisposition TruncateExisting = 5 : Public, Static, Literal, HasDefault
Class NLog.Internal.NetworkSenders.TcpNetworkSender+MySocketAsyncEventArgs: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  :System.Net.Sockets.SocketAsyncEventArgs
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RaiseCompleted(): PrivateScope, Public, HideBySig
Struct NLog.Internal.ObjectReflectionCache+ObjectPropertyList+PropertyValue: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, System.Object, System.TypeCode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Reflection.PropertyInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, FastPropertyLookup): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Name : Public, InitOnly
    System.Object Value : Public, InitOnly
  Properties:
    System.TypeCode TypeCode 'get ' : 
  Methods:
    get_TypeCode(): PrivateScope, Public, HideBySig, SpecialName
Struct NLog.Internal.ObjectReflectionCache+ObjectPropertyList+Enumerator: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Object, System.Reflection.PropertyInfo[], FastPropertyLookup[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[System.String,System.Object]]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[NLog.Internal.ObjectReflectionCache+ObjectPropertyList+PropertyValue]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    PropertyValue Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NLog.Internal.SortHelpers+ReadOnlySingleBucketDictionary`2+Enumerator[TKey,TValue]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  :System.ValueType
    Void .ctor(System.Collections.Generic.Dictionary`2[TKey,TValue]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.KeyValuePair`2[TKey,TValue]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Collections.Generic.KeyValuePair`2[TKey,TValue] Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
